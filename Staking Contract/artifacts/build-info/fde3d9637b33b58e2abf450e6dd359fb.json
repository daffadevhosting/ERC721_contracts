{
	"id": "fde3d9637b33b58e2abf450e6dd359fb",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"Staking Contract/StakingNFT.sol": {
				"content": "pragma solidity ^0.8.0;\n\n// SPDX-License-Identifier: MIT\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/utils/Address.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\n\ncontract NFTStaking is IERC721Receiver, ReentrancyGuard {\n    using SafeMath for uint256;\n    using Address for address;\n\n    uint256 public constant MINIMUM_STAKING_TIME = 30 days;\n    uint256 public constant REWARD_RATE = 10; // 10%\n    uint256 public constant DECIMALS = 100;\n\n    struct Stake {\n        uint256 tokenId;\n        uint256 stakedTime;\n        uint256 lastClaimedTime;\n        bool active;\n    }\n\n    IERC721 public nft;\n    mapping(address => Stake) public stakes;\n\n    event Staked(address indexed owner, uint256 indexed tokenId, uint256 stakedTime);\n    event Unstaked(address indexed owner, uint256 indexed tokenId, uint256 reward);\n    event RewardClaimed(address indexed owner, uint256 indexed tokenId, uint256 reward);\n\n    constructor(address _nftAddress) {\n        nft = IERC721(_nftAddress);\n    }\n\n    function stake(uint256 _tokenId) external nonReentrant {\n        require(nft.ownerOf(_tokenId) == msg.sender, \"NFTStaking: not owner of token\");\n        require(!stakes[msg.sender].active, \"NFTStaking: already staked\");\n        require(nft.getApproved(_tokenId) == address(this), \"NFTStaking: not approved\");\n        \n        nft.safeTransferFrom(msg.sender, address(this), _tokenId);\n        stakes[msg.sender] = Stake(_tokenId, block.timestamp, block.timestamp, true);\n\n        emit Staked(msg.sender, _tokenId, block.timestamp);\n    }\n\n    function unstake() external nonReentrant {\n        Stake storage stake = stakes[msg.sender];\n        require(stake.active, \"NFTStaking: not staked\");\n        require(block.timestamp >= stake.stakedTime.add(MINIMUM_STAKING_TIME), \"NFTStaking: staking time not reached\");\n\n        uint256 reward = calculateReward(msg.sender, stake);\n        nft.safeTransferFrom(address(this), msg.sender, stake.tokenId);\n        delete stakes[msg.sender];\n\n        emit Unstaked(msg.sender, stake.tokenId, reward);\n    }\n\n    function claimReward() external nonReentrant {\n        Stake storage stake = stakes[msg.sender];\n        require(stake.active, \"NFTStaking: not staked\");\n\n        uint256 reward = calculateReward(msg.sender, stake);\n        stake.lastClaimedTime = block.timestamp;\n\n        emit RewardClaimed(msg.sender, stake.tokenId, reward);\n    }\n\n    function calculateReward(address _owner, Stake storage _stake) internal view returns (uint256) {\n        uint256 stakedTime = block.timestamp.sub(_stake.lastClaimedTime);\n        uint256 reward = stakedTime.mul(REWARD_RATE).mul(DECIMALS).div(MINIMUM_STAKING_TIME).div(DECIMALS);\n\n        return reward;\n    }\n\n    function onERC721Received(\n        address,\n        address,\n        uint256,\n        bytes calldata\n    ) external pure override returns (bytes4) {\n        return this.onERC721Received.selector;\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ce8dfb62d0c4fa260d6eec8f1cd47f5f2a044e11bde5b31d18072fa6e7d9010\",\"dweb:/ipfs/QmTyFztU3tLEcEDnqqiaW4UJetqsU77LXc6pjc9oTXCK5u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 10,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:9158  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:9158  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122056388b4bd61a0a82b1b5642110ef2e3e47829ce58d55205c0109152159a2901a64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122056388b4bd61a0a82b1b5642110ef2e3e47829ce58d55205c0109152159a2901a64736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMP CODESIZE DUP12 0x4B 0xD6 BYTE EXP DUP3 0xB1 0xB5 PUSH5 0x2110EF2E3E SELFBALANCE DUP3 SWAP13 0xE5 DUP14 SSTORE KECCAK256 0x5C ADD MULMOD ISZERO 0x21 MSIZE LOG2 SWAP1 BYTE PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "194:8964:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122056388b4bd61a0a82b1b5642110ef2e3e47829ce58d55205c0109152159a2901a64736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMP CODESIZE DUP12 0x4B 0xD6 BYTE EXP DUP3 0xB1 0xB5 PUSH5 0x2110EF2E3E SELFBALANCE DUP3 SWAP13 0xE5 DUP14 SSTORE KECCAK256 0x5C ADD MULMOD ISZERO 0x21 MSIZE LOG2 SWAP1 BYTE PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "194:8964:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122056388b4bd61a0a82b1b5642110ef2e3e47829ce58d55205c0109152159a2901a64736f6c63430008120033",
									".code": [
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"Staking Contract/StakingNFT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202aec753447c361eb41c4fe16248018585c42ca231123171bca7c35a05e054d3e64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202aec753447c361eb41c4fe16248018585c42ca231123171bca7c35a05e054d3e64736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2A 0xEC PUSH22 0x3447C361EB41C4FE16248018585C42CA231123171BCA PUSH29 0x35A05E054D3E64736F6C63430008120033000000000000000000000000 ",
							"sourceMap": "482:6300:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202aec753447c361eb41c4fe16248018585c42ca231123171bca7c35a05e054d3e64736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2A 0xEC PUSH22 0x3447C361EB41C4FE16248018585C42CA231123171BCA PUSH29 0x35A05E054D3E64736F6C63430008120033000000000000000000000000 ",
							"sourceMap": "482:6300:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202aec753447c361eb41c4fe16248018585c42ca231123171bca7c35a05e054d3e64736f6c63430008120033",
									".code": [
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"Staking Contract/StakingNFT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Staking Contract/StakingNFT.sol": {
				"NFTStaking": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_nftAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"name": "RewardClaimed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "stakedTime",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"name": "Unstaked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DECIMALS",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MINIMUM_STAKING_TIME",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "REWARD_RATE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claimReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nft",
							"outputs": [
								{
									"internalType": "contract IERC721",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "stakes",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "stakedTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lastClaimedTime",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "active",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unstake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Staking Contract/StakingNFT.sol\":357:3095  contract NFTStaking is IERC721Receiver, ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"Staking Contract/StakingNFT.sol\":1104:1180  constructor(address _nftAddress) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  0x00\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Staking Contract/StakingNFT.sol\":1161:1172  _nftAddress */\n  dup1\n    /* \"Staking Contract/StakingNFT.sol\":1147:1150  nft */\n  0x01\n  0x00\n    /* \"Staking Contract/StakingNFT.sol\":1147:1173  nft = IERC721(_nftAddress) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Staking Contract/StakingNFT.sol\":1104:1180  constructor(address _nftAddress) {... */\n  pop\n    /* \"Staking Contract/StakingNFT.sol\":357:3095  contract NFTStaking is IERC721Receiver, ReentrancyGuard {... */\n  jump(tag_8)\n    /* \"#utility.yul\":88:205   */\ntag_10:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_12:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_13:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_22\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_12\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_14:\n    /* \"#utility.yul\":641:665   */\n  tag_24\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_13\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_25\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_25:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_15:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_27\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_14\n  jump\t// in\ntag_27:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_30\n  tag_10\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":932:1051   */\ntag_29:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_31\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_15\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"Staking Contract/StakingNFT.sol\":357:3095  contract NFTStaking is IERC721Receiver, ReentrancyGuard {... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Staking Contract/StakingNFT.sol\":357:3095  contract NFTStaking is IERC721Receiver, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x2e0f2625\n      gt\n      tag_12\n      jumpi\n      dup1\n      0x2e0f2625\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x47ccca02\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x5997bb37\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xa694fc3a\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xb88a802f\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_12:\n      dup1\n      0x02657ad0\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x150b7a02\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x16934fc4\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2def6620\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Staking Contract/StakingNFT.sol\":483:537  uint256 public constant MINIMUM_STAKING_TIME = 30 days */\n    tag_3:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking Contract/StakingNFT.sol\":2892:3093  function onERC721Received(... */\n    tag_4:\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      tag_20\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking Contract/StakingNFT.sol\":798:837  mapping(address => Stake) public stakes */\n    tag_5:\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      tag_26\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_27\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking Contract/StakingNFT.sol\":1729:2232  function unstake() external nonReentrant {... */\n    tag_6:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      stop\n        /* \"Staking Contract/StakingNFT.sol\":596:634  uint256 public constant DECIMALS = 100 */\n    tag_7:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking Contract/StakingNFT.sol\":774:792  IERC721 public nft */\n    tag_8:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking Contract/StakingNFT.sol\":543:583  uint256 public constant REWARD_RATE = 10 */\n    tag_9:\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking Contract/StakingNFT.sol\":1186:1723  function stake(uint256 _tokenId) external nonReentrant {... */\n    tag_10:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n    tag_41:\n      stop\n        /* \"Staking Contract/StakingNFT.sol\":2238:2572  function claimReward() external nonReentrant {... */\n    tag_11:\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n      stop\n        /* \"Staking Contract/StakingNFT.sol\":483:537  uint256 public constant MINIMUM_STAKING_TIME = 30 days */\n    tag_14:\n        /* \"Staking Contract/StakingNFT.sol\":530:537  30 days */\n      0x278d00\n        /* \"Staking Contract/StakingNFT.sol\":483:537  uint256 public constant MINIMUM_STAKING_TIME = 30 days */\n      dup2\n      jump\t// out\n        /* \"Staking Contract/StakingNFT.sol\":2892:3093  function onERC721Received(... */\n    tag_20:\n        /* \"Staking Contract/StakingNFT.sol\":3031:3037  bytes4 */\n      0x00\n        /* \"Staking Contract/StakingNFT.sol\":3056:3086  this.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"Staking Contract/StakingNFT.sol\":3049:3086  return this.onERC721Received.selector */\n      swap1\n      pop\n        /* \"Staking Contract/StakingNFT.sol\":2892:3093  function onERC721Received(... */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Staking Contract/StakingNFT.sol\":798:837  mapping(address => Stake) public stakes */\n    tag_26:\n      mstore(0x20, 0x02)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      pop\n      dup5\n      jump\t// out\n        /* \"Staking Contract/StakingNFT.sol\":1729:2232  function unstake() external nonReentrant {... */\n    tag_30:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_49\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_50\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_49:\n        /* \"Staking Contract/StakingNFT.sol\":1780:1799  Stake storage stake */\n      0x00\n        /* \"Staking Contract/StakingNFT.sol\":1802:1808  stakes */\n      0x02\n        /* \"Staking Contract/StakingNFT.sol\":1802:1820  stakes[msg.sender] */\n      0x00\n        /* \"Staking Contract/StakingNFT.sol\":1809:1819  msg.sender */\n      caller\n        /* \"Staking Contract/StakingNFT.sol\":1802:1820  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Staking Contract/StakingNFT.sol\":1780:1820  Stake storage stake = stakes[msg.sender] */\n      swap1\n      pop\n        /* \"Staking Contract/StakingNFT.sol\":1838:1843  stake */\n      dup1\n        /* \"Staking Contract/StakingNFT.sol\":1838:1850  stake.active */\n      0x03\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Staking Contract/StakingNFT.sol\":1830:1877  require(stake.active, \"NFTStaking: not staked\") */\n      tag_52\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_53\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_52:\n        /* \"Staking Contract/StakingNFT.sol\":1914:1956  stake.stakedTime.add(MINIMUM_STAKING_TIME) */\n      tag_55\n        /* \"Staking Contract/StakingNFT.sol\":530:537  30 days */\n      0x278d00\n        /* \"Staking Contract/StakingNFT.sol\":1914:1919  stake */\n      dup3\n        /* \"Staking Contract/StakingNFT.sol\":1914:1930  stake.stakedTime */\n      0x01\n      add\n      sload\n        /* \"Staking Contract/StakingNFT.sol\":1914:1934  stake.stakedTime.add */\n      tag_56\n      swap1\n        /* \"Staking Contract/StakingNFT.sol\":1914:1956  stake.stakedTime.add(MINIMUM_STAKING_TIME) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_55:\n        /* \"Staking Contract/StakingNFT.sol\":1895:1910  block.timestamp */\n      timestamp\n        /* \"Staking Contract/StakingNFT.sol\":1895:1956  block.timestamp >= stake.stakedTime.add(MINIMUM_STAKING_TIME) */\n      lt\n      iszero\n        /* \"Staking Contract/StakingNFT.sol\":1887:1997  require(block.timestamp >= stake.stakedTime.add(MINIMUM_STAKING_TIME), \"NFTStaking: staking time not reached\") */\n      tag_57\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_58\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_57:\n        /* \"Staking Contract/StakingNFT.sol\":2008:2022  uint256 reward */\n      0x00\n        /* \"Staking Contract/StakingNFT.sol\":2025:2059  calculateReward(msg.sender, stake) */\n      tag_60\n        /* \"Staking Contract/StakingNFT.sol\":2041:2051  msg.sender */\n      caller\n        /* \"Staking Contract/StakingNFT.sol\":2053:2058  stake */\n      dup4\n        /* \"Staking Contract/StakingNFT.sol\":2025:2040  calculateReward */\n      tag_61\n        /* \"Staking Contract/StakingNFT.sol\":2025:2059  calculateReward(msg.sender, stake) */\n      jump\t// in\n    tag_60:\n        /* \"Staking Contract/StakingNFT.sol\":2008:2059  uint256 reward = calculateReward(msg.sender, stake) */\n      swap1\n      pop\n        /* \"Staking Contract/StakingNFT.sol\":2069:2072  nft */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Staking Contract/StakingNFT.sol\":2069:2089  nft.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x42842e0e\n        /* \"Staking Contract/StakingNFT.sol\":2098:2102  this */\n      address\n        /* \"Staking Contract/StakingNFT.sol\":2105:2115  msg.sender */\n      caller\n        /* \"Staking Contract/StakingNFT.sol\":2117:2122  stake */\n      dup6\n        /* \"Staking Contract/StakingNFT.sol\":2117:2130  stake.tokenId */\n      0x00\n      add\n      sload\n        /* \"Staking Contract/StakingNFT.sol\":2069:2131  nft.safeTransferFrom(address(this), msg.sender, stake.tokenId) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_62\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_64\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_64:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_66\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_66:\n      pop\n      pop\n      pop\n      pop\n        /* \"Staking Contract/StakingNFT.sol\":2148:2154  stakes */\n      0x02\n        /* \"Staking Contract/StakingNFT.sol\":2148:2166  stakes[msg.sender] */\n      0x00\n        /* \"Staking Contract/StakingNFT.sol\":2155:2165  msg.sender */\n      caller\n        /* \"Staking Contract/StakingNFT.sol\":2148:2166  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Staking Contract/StakingNFT.sol\":2141:2166  delete stakes[msg.sender] */\n      dup1\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x01\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x02\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x03\n      dup3\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      swap1\n      0xff\n      mul\n      not\n      and\n      swap1\n      sstore\n      pop\n      pop\n        /* \"Staking Contract/StakingNFT.sol\":2203:2208  stake */\n      dup2\n        /* \"Staking Contract/StakingNFT.sol\":2203:2216  stake.tokenId */\n      0x00\n      add\n      sload\n        /* \"Staking Contract/StakingNFT.sol\":2191:2201  msg.sender */\n      caller\n        /* \"Staking Contract/StakingNFT.sol\":2182:2225  Unstaked(msg.sender, stake.tokenId, reward) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x7fc4727e062e336010f2c282598ef5f14facb3de68cf8195c2f23e1454b2b74e\n        /* \"Staking Contract/StakingNFT.sol\":2218:2224  reward */\n      dup4\n        /* \"Staking Contract/StakingNFT.sol\":2182:2225  Unstaked(msg.sender, stake.tokenId, reward) */\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Staking Contract/StakingNFT.sol\":1770:2232  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_68\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_69\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_68:\n        /* \"Staking Contract/StakingNFT.sol\":1729:2232  function unstake() external nonReentrant {... */\n      jump\t// out\n        /* \"Staking Contract/StakingNFT.sol\":596:634  uint256 public constant DECIMALS = 100 */\n    tag_32:\n        /* \"Staking Contract/StakingNFT.sol\":631:634  100 */\n      0x64\n        /* \"Staking Contract/StakingNFT.sol\":596:634  uint256 public constant DECIMALS = 100 */\n      dup2\n      jump\t// out\n        /* \"Staking Contract/StakingNFT.sol\":774:792  IERC721 public nft */\n    tag_35:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Staking Contract/StakingNFT.sol\":543:583  uint256 public constant REWARD_RATE = 10 */\n    tag_39:\n        /* \"Staking Contract/StakingNFT.sol\":581:583  10 */\n      0x0a\n        /* \"Staking Contract/StakingNFT.sol\":543:583  uint256 public constant REWARD_RATE = 10 */\n      dup2\n      jump\t// out\n        /* \"Staking Contract/StakingNFT.sol\":1186:1723  function stake(uint256 _tokenId) external nonReentrant {... */\n    tag_44:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_71\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_50\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_71:\n        /* \"Staking Contract/StakingNFT.sol\":1284:1294  msg.sender */\n      caller\n        /* \"Staking Contract/StakingNFT.sol\":1259:1294  nft.ownerOf(_tokenId) == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Staking Contract/StakingNFT.sol\":1259:1262  nft */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Staking Contract/StakingNFT.sol\":1259:1270  nft.ownerOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6352211e\n        /* \"Staking Contract/StakingNFT.sol\":1271:1279  _tokenId */\n      dup4\n        /* \"Staking Contract/StakingNFT.sol\":1259:1280  nft.ownerOf(_tokenId) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_73\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_73:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_75\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_75:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n        /* \"Staking Contract/StakingNFT.sol\":1259:1294  nft.ownerOf(_tokenId) == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Staking Contract/StakingNFT.sol\":1251:1329  require(nft.ownerOf(_tokenId) == msg.sender, \"NFTStaking: not owner of token\") */\n      tag_78\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_79\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_78:\n        /* \"Staking Contract/StakingNFT.sol\":1348:1354  stakes */\n      0x02\n        /* \"Staking Contract/StakingNFT.sol\":1348:1366  stakes[msg.sender] */\n      0x00\n        /* \"Staking Contract/StakingNFT.sol\":1355:1365  msg.sender */\n      caller\n        /* \"Staking Contract/StakingNFT.sol\":1348:1366  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Staking Contract/StakingNFT.sol\":1348:1373  stakes[msg.sender].active */\n      0x03\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Staking Contract/StakingNFT.sol\":1347:1373  !stakes[msg.sender].active */\n      iszero\n        /* \"Staking Contract/StakingNFT.sol\":1339:1404  require(!stakes[msg.sender].active, \"NFTStaking: already staked\") */\n      tag_81\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_82\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_81:\n        /* \"Staking Contract/StakingNFT.sol\":1459:1463  this */\n      address\n        /* \"Staking Contract/StakingNFT.sol\":1422:1464  nft.getApproved(_tokenId) == address(this) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Staking Contract/StakingNFT.sol\":1422:1425  nft */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Staking Contract/StakingNFT.sol\":1422:1437  nft.getApproved */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x081812fc\n        /* \"Staking Contract/StakingNFT.sol\":1438:1446  _tokenId */\n      dup4\n        /* \"Staking Contract/StakingNFT.sol\":1422:1447  nft.getApproved(_tokenId) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_84\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_84:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_86\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_86:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_87\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_87:\n        /* \"Staking Contract/StakingNFT.sol\":1422:1464  nft.getApproved(_tokenId) == address(this) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Staking Contract/StakingNFT.sol\":1414:1493  require(nft.getApproved(_tokenId) == address(this), \"NFTStaking: not approved\") */\n      tag_88\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_89\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_88:\n        /* \"Staking Contract/StakingNFT.sol\":1512:1515  nft */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Staking Contract/StakingNFT.sol\":1512:1532  nft.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x42842e0e\n        /* \"Staking Contract/StakingNFT.sol\":1533:1543  msg.sender */\n      caller\n        /* \"Staking Contract/StakingNFT.sol\":1553:1557  this */\n      address\n        /* \"Staking Contract/StakingNFT.sol\":1560:1568  _tokenId */\n      dup5\n        /* \"Staking Contract/StakingNFT.sol\":1512:1569  nft.safeTransferFrom(msg.sender, address(this), _tokenId) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_91\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_91:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_92\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_92:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_94\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_94:\n      pop\n      pop\n      pop\n      pop\n        /* \"Staking Contract/StakingNFT.sol\":1600:1655  Stake(_tokenId, block.timestamp, block.timestamp, true) */\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n        /* \"Staking Contract/StakingNFT.sol\":1606:1614  _tokenId */\n      dup3\n        /* \"Staking Contract/StakingNFT.sol\":1600:1655  Stake(_tokenId, block.timestamp, block.timestamp, true) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Staking Contract/StakingNFT.sol\":1616:1631  block.timestamp */\n      timestamp\n        /* \"Staking Contract/StakingNFT.sol\":1600:1655  Stake(_tokenId, block.timestamp, block.timestamp, true) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Staking Contract/StakingNFT.sol\":1633:1648  block.timestamp */\n      timestamp\n        /* \"Staking Contract/StakingNFT.sol\":1600:1655  Stake(_tokenId, block.timestamp, block.timestamp, true) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Staking Contract/StakingNFT.sol\":1650:1654  true */\n      0x01\n        /* \"Staking Contract/StakingNFT.sol\":1600:1655  Stake(_tokenId, block.timestamp, block.timestamp, true) */\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n        /* \"Staking Contract/StakingNFT.sol\":1579:1585  stakes */\n      0x02\n        /* \"Staking Contract/StakingNFT.sol\":1579:1597  stakes[msg.sender] */\n      0x00\n        /* \"Staking Contract/StakingNFT.sol\":1586:1596  msg.sender */\n      caller\n        /* \"Staking Contract/StakingNFT.sol\":1579:1597  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Staking Contract/StakingNFT.sol\":1579:1655  stakes[msg.sender] = Stake(_tokenId, block.timestamp, block.timestamp, true) */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      pop\n        /* \"Staking Contract/StakingNFT.sol\":1690:1698  _tokenId */\n      dup1\n        /* \"Staking Contract/StakingNFT.sol\":1678:1688  msg.sender */\n      caller\n        /* \"Staking Contract/StakingNFT.sol\":1671:1716  Staked(msg.sender, _tokenId, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1449c6dd7851abc30abf37f57715f492010519147cc2652fbc38202c18a6ee90\n        /* \"Staking Contract/StakingNFT.sol\":1700:1715  block.timestamp */\n      timestamp\n        /* \"Staking Contract/StakingNFT.sol\":1671:1716  Staked(msg.sender, _tokenId, block.timestamp) */\n      mload(0x40)\n      tag_95\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_96\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_69\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_96:\n        /* \"Staking Contract/StakingNFT.sol\":1186:1723  function stake(uint256 _tokenId) external nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"Staking Contract/StakingNFT.sol\":2238:2572  function claimReward() external nonReentrant {... */\n    tag_46:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_98\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_50\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_98:\n        /* \"Staking Contract/StakingNFT.sol\":2293:2312  Stake storage stake */\n      0x00\n        /* \"Staking Contract/StakingNFT.sol\":2315:2321  stakes */\n      0x02\n        /* \"Staking Contract/StakingNFT.sol\":2315:2333  stakes[msg.sender] */\n      0x00\n        /* \"Staking Contract/StakingNFT.sol\":2322:2332  msg.sender */\n      caller\n        /* \"Staking Contract/StakingNFT.sol\":2315:2333  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Staking Contract/StakingNFT.sol\":2293:2333  Stake storage stake = stakes[msg.sender] */\n      swap1\n      pop\n        /* \"Staking Contract/StakingNFT.sol\":2351:2356  stake */\n      dup1\n        /* \"Staking Contract/StakingNFT.sol\":2351:2363  stake.active */\n      0x03\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Staking Contract/StakingNFT.sol\":2343:2390  require(stake.active, \"NFTStaking: not staked\") */\n      tag_100\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_101\n      swap1\n      tag_54\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_100:\n        /* \"Staking Contract/StakingNFT.sol\":2401:2415  uint256 reward */\n      0x00\n        /* \"Staking Contract/StakingNFT.sol\":2418:2452  calculateReward(msg.sender, stake) */\n      tag_102\n        /* \"Staking Contract/StakingNFT.sol\":2434:2444  msg.sender */\n      caller\n        /* \"Staking Contract/StakingNFT.sol\":2446:2451  stake */\n      dup4\n        /* \"Staking Contract/StakingNFT.sol\":2418:2433  calculateReward */\n      tag_61\n        /* \"Staking Contract/StakingNFT.sol\":2418:2452  calculateReward(msg.sender, stake) */\n      jump\t// in\n    tag_102:\n        /* \"Staking Contract/StakingNFT.sol\":2401:2452  uint256 reward = calculateReward(msg.sender, stake) */\n      swap1\n      pop\n        /* \"Staking Contract/StakingNFT.sol\":2486:2501  block.timestamp */\n      timestamp\n        /* \"Staking Contract/StakingNFT.sol\":2462:2467  stake */\n      dup3\n        /* \"Staking Contract/StakingNFT.sol\":2462:2483  stake.lastClaimedTime */\n      0x02\n      add\n        /* \"Staking Contract/StakingNFT.sol\":2462:2501  stake.lastClaimedTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Staking Contract/StakingNFT.sol\":2543:2548  stake */\n      dup2\n        /* \"Staking Contract/StakingNFT.sol\":2543:2556  stake.tokenId */\n      0x00\n      add\n      sload\n        /* \"Staking Contract/StakingNFT.sol\":2531:2541  msg.sender */\n      caller\n        /* \"Staking Contract/StakingNFT.sol\":2517:2565  RewardClaimed(msg.sender, stake.tokenId, reward) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf01da32686223933d8a18a391060918c7f11a3648639edd87ae013e2e2731743\n        /* \"Staking Contract/StakingNFT.sol\":2558:2564  reward */\n      dup4\n        /* \"Staking Contract/StakingNFT.sol\":2517:2565  RewardClaimed(msg.sender, stake.tokenId, reward) */\n      mload(0x40)\n      tag_103\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Staking Contract/StakingNFT.sol\":2283:2572  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_104\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_69\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_104:\n        /* \"Staking Contract/StakingNFT.sol\":2238:2572  function claimReward() external nonReentrant {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_50:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_106\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_107\n      swap1\n      tag_108\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_106:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_110\n      swap2\n      swap1\n      tag_111\n      jump\t// in\n    tag_110:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2832:2844  return a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Staking Contract/StakingNFT.sol\":2578:2886  function calculateReward(address _owner, Stake storage _stake) internal view returns (uint256) {... */\n    tag_61:\n        /* \"Staking Contract/StakingNFT.sol\":2664:2671  uint256 */\n      0x00\n        /* \"Staking Contract/StakingNFT.sol\":2683:2701  uint256 stakedTime */\n      dup1\n        /* \"Staking Contract/StakingNFT.sol\":2704:2747  block.timestamp.sub(_stake.lastClaimedTime) */\n      tag_113\n        /* \"Staking Contract/StakingNFT.sol\":2724:2730  _stake */\n      dup4\n        /* \"Staking Contract/StakingNFT.sol\":2724:2746  _stake.lastClaimedTime */\n      0x02\n      add\n      sload\n        /* \"Staking Contract/StakingNFT.sol\":2704:2719  block.timestamp */\n      timestamp\n        /* \"Staking Contract/StakingNFT.sol\":2704:2723  block.timestamp.sub */\n      tag_114\n      swap1\n        /* \"Staking Contract/StakingNFT.sol\":2704:2747  block.timestamp.sub(_stake.lastClaimedTime) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_113:\n        /* \"Staking Contract/StakingNFT.sol\":2683:2747  uint256 stakedTime = block.timestamp.sub(_stake.lastClaimedTime) */\n      swap1\n      pop\n        /* \"Staking Contract/StakingNFT.sol\":2757:2771  uint256 reward */\n      0x00\n        /* \"Staking Contract/StakingNFT.sol\":2774:2855  stakedTime.mul(REWARD_RATE).mul(DECIMALS).div(MINIMUM_STAKING_TIME).div(DECIMALS) */\n      tag_115\n        /* \"Staking Contract/StakingNFT.sol\":631:634  100 */\n      0x64\n        /* \"Staking Contract/StakingNFT.sol\":2774:2841  stakedTime.mul(REWARD_RATE).mul(DECIMALS).div(MINIMUM_STAKING_TIME) */\n      tag_116\n        /* \"Staking Contract/StakingNFT.sol\":530:537  30 days */\n      0x278d00\n        /* \"Staking Contract/StakingNFT.sol\":2774:2815  stakedTime.mul(REWARD_RATE).mul(DECIMALS) */\n      tag_117\n        /* \"Staking Contract/StakingNFT.sol\":631:634  100 */\n      0x64\n        /* \"Staking Contract/StakingNFT.sol\":2774:2801  stakedTime.mul(REWARD_RATE) */\n      tag_118\n        /* \"Staking Contract/StakingNFT.sol\":581:583  10 */\n      0x0a\n        /* \"Staking Contract/StakingNFT.sol\":2774:2784  stakedTime */\n      dup10\n        /* \"Staking Contract/StakingNFT.sol\":2774:2788  stakedTime.mul */\n      tag_119\n      swap1\n        /* \"Staking Contract/StakingNFT.sol\":2774:2801  stakedTime.mul(REWARD_RATE) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_118:\n        /* \"Staking Contract/StakingNFT.sol\":2774:2805  stakedTime.mul(REWARD_RATE).mul */\n      tag_119\n      swap1\n        /* \"Staking Contract/StakingNFT.sol\":2774:2815  stakedTime.mul(REWARD_RATE).mul(DECIMALS) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_117:\n        /* \"Staking Contract/StakingNFT.sol\":2774:2819  stakedTime.mul(REWARD_RATE).mul(DECIMALS).div */\n      tag_120\n      swap1\n        /* \"Staking Contract/StakingNFT.sol\":2774:2841  stakedTime.mul(REWARD_RATE).mul(DECIMALS).div(MINIMUM_STAKING_TIME) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_116:\n        /* \"Staking Contract/StakingNFT.sol\":2774:2845  stakedTime.mul(REWARD_RATE).mul(DECIMALS).div(MINIMUM_STAKING_TIME).div */\n      tag_120\n      swap1\n        /* \"Staking Contract/StakingNFT.sol\":2774:2855  stakedTime.mul(REWARD_RATE).mul(DECIMALS).div(MINIMUM_STAKING_TIME).div(DECIMALS) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_115:\n        /* \"Staking Contract/StakingNFT.sol\":2757:2855  uint256 reward = stakedTime.mul(REWARD_RATE).mul(DECIMALS).div(MINIMUM_STAKING_TIME).div(DECIMALS) */\n      swap1\n      pop\n        /* \"Staking Contract/StakingNFT.sol\":2873:2879  reward */\n      dup1\n        /* \"Staking Contract/StakingNFT.sol\":2866:2879  return reward */\n      swap3\n      pop\n      pop\n      pop\n        /* \"Staking Contract/StakingNFT.sol\":2578:2886  function calculateReward(address _owner, Stake storage _stake) internal view returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_114:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3180:3187  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3210:3211  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3207  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_123\n      swap2\n      swap1\n      tag_124\n      jump\t// in\n    tag_123:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3199:3211  return a - b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_119:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3523:3530  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3553:3554  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3550  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_126\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_126:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3542:3554  return a * b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_120:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3908:3915  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3938:3939  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3935  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_129\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_129:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3927:3939  return a / b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_131:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_132:\n        /* \"#utility.yul\":177:201   */\n      tag_175\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_131\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_16:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_177\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_132\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":523:640   */\n    tag_134:\n        /* \"#utility.yul\":632:633   */\n      0x00\n        /* \"#utility.yul\":629:630   */\n      dup1\n        /* \"#utility.yul\":622:634   */\n      revert\n        /* \"#utility.yul\":646:763   */\n    tag_135:\n        /* \"#utility.yul\":755:756   */\n      0x00\n        /* \"#utility.yul\":752:753   */\n      dup1\n        /* \"#utility.yul\":745:757   */\n      revert\n        /* \"#utility.yul\":769:895   */\n    tag_136:\n        /* \"#utility.yul\":806:813   */\n      0x00\n        /* \"#utility.yul\":846:888   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":839:844   */\n      dup3\n        /* \"#utility.yul\":835:889   */\n      and\n        /* \"#utility.yul\":824:889   */\n      swap1\n      pop\n        /* \"#utility.yul\":769:895   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":901:997   */\n    tag_137:\n        /* \"#utility.yul\":938:945   */\n      0x00\n        /* \"#utility.yul\":967:991   */\n      tag_183\n        /* \"#utility.yul\":985:990   */\n      dup3\n        /* \"#utility.yul\":967:991   */\n      tag_136\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":956:991   */\n      swap1\n      pop\n        /* \"#utility.yul\":901:997   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1003:1125   */\n    tag_138:\n        /* \"#utility.yul\":1076:1100   */\n      tag_185\n        /* \"#utility.yul\":1094:1099   */\n      dup2\n        /* \"#utility.yul\":1076:1100   */\n      tag_137\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":1069:1074   */\n      dup2\n        /* \"#utility.yul\":1066:1101   */\n      eq\n        /* \"#utility.yul\":1056:1119   */\n      tag_186\n      jumpi\n        /* \"#utility.yul\":1115:1116   */\n      0x00\n        /* \"#utility.yul\":1112:1113   */\n      dup1\n        /* \"#utility.yul\":1105:1117   */\n      revert\n        /* \"#utility.yul\":1056:1119   */\n    tag_186:\n        /* \"#utility.yul\":1003:1125   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1131:1270   */\n    tag_139:\n        /* \"#utility.yul\":1177:1182   */\n      0x00\n        /* \"#utility.yul\":1215:1221   */\n      dup2\n        /* \"#utility.yul\":1202:1222   */\n      calldataload\n        /* \"#utility.yul\":1193:1222   */\n      swap1\n      pop\n        /* \"#utility.yul\":1231:1264   */\n      tag_188\n        /* \"#utility.yul\":1258:1263   */\n      dup2\n        /* \"#utility.yul\":1231:1264   */\n      tag_138\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":1131:1270   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1276:1398   */\n    tag_140:\n        /* \"#utility.yul\":1349:1373   */\n      tag_190\n        /* \"#utility.yul\":1367:1372   */\n      dup2\n        /* \"#utility.yul\":1349:1373   */\n      tag_131\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":1342:1347   */\n      dup2\n        /* \"#utility.yul\":1339:1374   */\n      eq\n        /* \"#utility.yul\":1329:1392   */\n      tag_191\n      jumpi\n        /* \"#utility.yul\":1388:1389   */\n      0x00\n        /* \"#utility.yul\":1385:1386   */\n      dup1\n        /* \"#utility.yul\":1378:1390   */\n      revert\n        /* \"#utility.yul\":1329:1392   */\n    tag_191:\n        /* \"#utility.yul\":1276:1398   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1404:1543   */\n    tag_141:\n        /* \"#utility.yul\":1450:1455   */\n      0x00\n        /* \"#utility.yul\":1488:1494   */\n      dup2\n        /* \"#utility.yul\":1475:1495   */\n      calldataload\n        /* \"#utility.yul\":1466:1495   */\n      swap1\n      pop\n        /* \"#utility.yul\":1504:1537   */\n      tag_193\n        /* \"#utility.yul\":1531:1536   */\n      dup2\n        /* \"#utility.yul\":1504:1537   */\n      tag_140\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":1404:1543   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1549:1666   */\n    tag_142:\n        /* \"#utility.yul\":1658:1659   */\n      0x00\n        /* \"#utility.yul\":1655:1656   */\n      dup1\n        /* \"#utility.yul\":1648:1660   */\n      revert\n        /* \"#utility.yul\":1672:1789   */\n    tag_143:\n        /* \"#utility.yul\":1781:1782   */\n      0x00\n        /* \"#utility.yul\":1778:1779   */\n      dup1\n        /* \"#utility.yul\":1771:1783   */\n      revert\n        /* \"#utility.yul\":1795:1912   */\n    tag_144:\n        /* \"#utility.yul\":1904:1905   */\n      0x00\n        /* \"#utility.yul\":1901:1902   */\n      dup1\n        /* \"#utility.yul\":1894:1906   */\n      revert\n        /* \"#utility.yul\":1931:2483   */\n    tag_145:\n        /* \"#utility.yul\":1988:1996   */\n      0x00\n        /* \"#utility.yul\":1998:2004   */\n      dup1\n        /* \"#utility.yul\":2048:2051   */\n      dup4\n        /* \"#utility.yul\":2041:2045   */\n      0x1f\n        /* \"#utility.yul\":2033:2039   */\n      dup5\n        /* \"#utility.yul\":2029:2046   */\n      add\n        /* \"#utility.yul\":2025:2052   */\n      slt\n        /* \"#utility.yul\":2015:2137   */\n      tag_198\n      jumpi\n        /* \"#utility.yul\":2056:2135   */\n      tag_199\n      tag_142\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":2015:2137   */\n    tag_198:\n        /* \"#utility.yul\":2169:2175   */\n      dup3\n        /* \"#utility.yul\":2156:2176   */\n      calldataload\n        /* \"#utility.yul\":2146:2176   */\n      swap1\n      pop\n        /* \"#utility.yul\":2199:2217   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2191:2197   */\n      dup2\n        /* \"#utility.yul\":2188:2218   */\n      gt\n        /* \"#utility.yul\":2185:2302   */\n      iszero\n      tag_200\n      jumpi\n        /* \"#utility.yul\":2221:2300   */\n      tag_201\n      tag_143\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":2185:2302   */\n    tag_200:\n        /* \"#utility.yul\":2335:2339   */\n      0x20\n        /* \"#utility.yul\":2327:2333   */\n      dup4\n        /* \"#utility.yul\":2323:2340   */\n      add\n        /* \"#utility.yul\":2311:2340   */\n      swap2\n      pop\n        /* \"#utility.yul\":2389:2392   */\n      dup4\n        /* \"#utility.yul\":2381:2385   */\n      0x01\n        /* \"#utility.yul\":2373:2379   */\n      dup3\n        /* \"#utility.yul\":2369:2386   */\n      mul\n        /* \"#utility.yul\":2359:2367   */\n      dup4\n        /* \"#utility.yul\":2355:2387   */\n      add\n        /* \"#utility.yul\":2352:2393   */\n      gt\n        /* \"#utility.yul\":2349:2477   */\n      iszero\n      tag_202\n      jumpi\n        /* \"#utility.yul\":2396:2475   */\n      tag_203\n      tag_144\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":2349:2477   */\n    tag_202:\n        /* \"#utility.yul\":1931:2483   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2489:3452   */\n    tag_19:\n        /* \"#utility.yul\":2586:2592   */\n      0x00\n        /* \"#utility.yul\":2594:2600   */\n      dup1\n        /* \"#utility.yul\":2602:2608   */\n      0x00\n        /* \"#utility.yul\":2610:2616   */\n      dup1\n        /* \"#utility.yul\":2618:2624   */\n      0x00\n        /* \"#utility.yul\":2667:2670   */\n      0x80\n        /* \"#utility.yul\":2655:2664   */\n      dup7\n        /* \"#utility.yul\":2646:2653   */\n      dup9\n        /* \"#utility.yul\":2642:2665   */\n      sub\n        /* \"#utility.yul\":2638:2671   */\n      slt\n        /* \"#utility.yul\":2635:2755   */\n      iszero\n      tag_205\n      jumpi\n        /* \"#utility.yul\":2674:2753   */\n      tag_206\n      tag_134\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":2635:2755   */\n    tag_205:\n        /* \"#utility.yul\":2794:2795   */\n      0x00\n        /* \"#utility.yul\":2819:2872   */\n      tag_207\n        /* \"#utility.yul\":2864:2871   */\n      dup9\n        /* \"#utility.yul\":2855:2861   */\n      dup3\n        /* \"#utility.yul\":2844:2853   */\n      dup10\n        /* \"#utility.yul\":2840:2862   */\n      add\n        /* \"#utility.yul\":2819:2872   */\n      tag_139\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":2809:2872   */\n      swap6\n      pop\n        /* \"#utility.yul\":2765:2882   */\n      pop\n        /* \"#utility.yul\":2921:2923   */\n      0x20\n        /* \"#utility.yul\":2947:3000   */\n      tag_208\n        /* \"#utility.yul\":2992:2999   */\n      dup9\n        /* \"#utility.yul\":2983:2989   */\n      dup3\n        /* \"#utility.yul\":2972:2981   */\n      dup10\n        /* \"#utility.yul\":2968:2990   */\n      add\n        /* \"#utility.yul\":2947:3000   */\n      tag_139\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":2937:3000   */\n      swap5\n      pop\n        /* \"#utility.yul\":2892:3010   */\n      pop\n        /* \"#utility.yul\":3049:3051   */\n      0x40\n        /* \"#utility.yul\":3075:3128   */\n      tag_209\n        /* \"#utility.yul\":3120:3127   */\n      dup9\n        /* \"#utility.yul\":3111:3117   */\n      dup3\n        /* \"#utility.yul\":3100:3109   */\n      dup10\n        /* \"#utility.yul\":3096:3118   */\n      add\n        /* \"#utility.yul\":3075:3128   */\n      tag_141\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":3065:3128   */\n      swap4\n      pop\n        /* \"#utility.yul\":3020:3138   */\n      pop\n        /* \"#utility.yul\":3205:3207   */\n      0x60\n        /* \"#utility.yul\":3194:3203   */\n      dup7\n        /* \"#utility.yul\":3190:3208   */\n      add\n        /* \"#utility.yul\":3177:3209   */\n      calldataload\n        /* \"#utility.yul\":3236:3254   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3228:3234   */\n      dup2\n        /* \"#utility.yul\":3225:3255   */\n      gt\n        /* \"#utility.yul\":3222:3339   */\n      iszero\n      tag_210\n      jumpi\n        /* \"#utility.yul\":3258:3337   */\n      tag_211\n      tag_135\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":3222:3339   */\n    tag_210:\n        /* \"#utility.yul\":3371:3435   */\n      tag_212\n        /* \"#utility.yul\":3427:3434   */\n      dup9\n        /* \"#utility.yul\":3418:3424   */\n      dup3\n        /* \"#utility.yul\":3407:3416   */\n      dup10\n        /* \"#utility.yul\":3403:3425   */\n      add\n        /* \"#utility.yul\":3371:3435   */\n      tag_145\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":3353:3435   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":3148:3445   */\n      pop\n        /* \"#utility.yul\":2489:3452   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3458:3607   */\n    tag_146:\n        /* \"#utility.yul\":3494:3501   */\n      0x00\n        /* \"#utility.yul\":3534:3600   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3527:3532   */\n      dup3\n        /* \"#utility.yul\":3523:3601   */\n      and\n        /* \"#utility.yul\":3512:3601   */\n      swap1\n      pop\n        /* \"#utility.yul\":3458:3607   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3613:3728   */\n    tag_147:\n        /* \"#utility.yul\":3698:3721   */\n      tag_215\n        /* \"#utility.yul\":3715:3720   */\n      dup2\n        /* \"#utility.yul\":3698:3721   */\n      tag_146\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":3693:3696   */\n      dup3\n        /* \"#utility.yul\":3686:3722   */\n      mstore\n        /* \"#utility.yul\":3613:3728   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3734:3952   */\n    tag_22:\n        /* \"#utility.yul\":3825:3829   */\n      0x00\n        /* \"#utility.yul\":3863:3865   */\n      0x20\n        /* \"#utility.yul\":3852:3861   */\n      dup3\n        /* \"#utility.yul\":3848:3866   */\n      add\n        /* \"#utility.yul\":3840:3866   */\n      swap1\n      pop\n        /* \"#utility.yul\":3876:3945   */\n      tag_217\n        /* \"#utility.yul\":3942:3943   */\n      0x00\n        /* \"#utility.yul\":3931:3940   */\n      dup4\n        /* \"#utility.yul\":3927:3944   */\n      add\n        /* \"#utility.yul\":3918:3924   */\n      dup5\n        /* \"#utility.yul\":3876:3945   */\n      tag_147\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":3734:3952   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3958:4287   */\n    tag_25:\n        /* \"#utility.yul\":4017:4023   */\n      0x00\n        /* \"#utility.yul\":4066:4068   */\n      0x20\n        /* \"#utility.yul\":4054:4063   */\n      dup3\n        /* \"#utility.yul\":4045:4052   */\n      dup5\n        /* \"#utility.yul\":4041:4064   */\n      sub\n        /* \"#utility.yul\":4037:4069   */\n      slt\n        /* \"#utility.yul\":4034:4153   */\n      iszero\n      tag_219\n      jumpi\n        /* \"#utility.yul\":4072:4151   */\n      tag_220\n      tag_134\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":4034:4153   */\n    tag_219:\n        /* \"#utility.yul\":4192:4193   */\n      0x00\n        /* \"#utility.yul\":4217:4270   */\n      tag_221\n        /* \"#utility.yul\":4262:4269   */\n      dup5\n        /* \"#utility.yul\":4253:4259   */\n      dup3\n        /* \"#utility.yul\":4242:4251   */\n      dup6\n        /* \"#utility.yul\":4238:4260   */\n      add\n        /* \"#utility.yul\":4217:4270   */\n      tag_139\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":4207:4270   */\n      swap2\n      pop\n        /* \"#utility.yul\":4163:4280   */\n      pop\n        /* \"#utility.yul\":3958:4287   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4293:4383   */\n    tag_148:\n        /* \"#utility.yul\":4327:4334   */\n      0x00\n        /* \"#utility.yul\":4370:4375   */\n      dup2\n        /* \"#utility.yul\":4363:4376   */\n      iszero\n        /* \"#utility.yul\":4356:4377   */\n      iszero\n        /* \"#utility.yul\":4345:4377   */\n      swap1\n      pop\n        /* \"#utility.yul\":4293:4383   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4389:4498   */\n    tag_149:\n        /* \"#utility.yul\":4470:4491   */\n      tag_224\n        /* \"#utility.yul\":4485:4490   */\n      dup2\n        /* \"#utility.yul\":4470:4491   */\n      tag_148\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":4465:4468   */\n      dup3\n        /* \"#utility.yul\":4458:4492   */\n      mstore\n        /* \"#utility.yul\":4389:4498   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4504:5045   */\n    tag_28:\n        /* \"#utility.yul\":4675:4679   */\n      0x00\n        /* \"#utility.yul\":4713:4716   */\n      0x80\n        /* \"#utility.yul\":4702:4711   */\n      dup3\n        /* \"#utility.yul\":4698:4717   */\n      add\n        /* \"#utility.yul\":4690:4717   */\n      swap1\n      pop\n        /* \"#utility.yul\":4727:4798   */\n      tag_226\n        /* \"#utility.yul\":4795:4796   */\n      0x00\n        /* \"#utility.yul\":4784:4793   */\n      dup4\n        /* \"#utility.yul\":4780:4797   */\n      add\n        /* \"#utility.yul\":4771:4777   */\n      dup8\n        /* \"#utility.yul\":4727:4798   */\n      tag_132\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":4808:4880   */\n      tag_227\n        /* \"#utility.yul\":4876:4878   */\n      0x20\n        /* \"#utility.yul\":4865:4874   */\n      dup4\n        /* \"#utility.yul\":4861:4879   */\n      add\n        /* \"#utility.yul\":4852:4858   */\n      dup7\n        /* \"#utility.yul\":4808:4880   */\n      tag_132\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":4890:4962   */\n      tag_228\n        /* \"#utility.yul\":4958:4960   */\n      0x40\n        /* \"#utility.yul\":4947:4956   */\n      dup4\n        /* \"#utility.yul\":4943:4961   */\n      add\n        /* \"#utility.yul\":4934:4940   */\n      dup6\n        /* \"#utility.yul\":4890:4962   */\n      tag_132\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":4972:5038   */\n      tag_229\n        /* \"#utility.yul\":5034:5036   */\n      0x60\n        /* \"#utility.yul\":5023:5032   */\n      dup4\n        /* \"#utility.yul\":5019:5037   */\n      add\n        /* \"#utility.yul\":5010:5016   */\n      dup5\n        /* \"#utility.yul\":4972:5038   */\n      tag_149\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":4504:5045   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5051:5111   */\n    tag_150:\n        /* \"#utility.yul\":5079:5082   */\n      0x00\n        /* \"#utility.yul\":5100:5105   */\n      dup2\n        /* \"#utility.yul\":5093:5105   */\n      swap1\n      pop\n        /* \"#utility.yul\":5051:5111   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5117:5259   */\n    tag_151:\n        /* \"#utility.yul\":5167:5176   */\n      0x00\n        /* \"#utility.yul\":5200:5253   */\n      tag_232\n        /* \"#utility.yul\":5218:5252   */\n      tag_233\n        /* \"#utility.yul\":5227:5251   */\n      tag_234\n        /* \"#utility.yul\":5245:5250   */\n      dup5\n        /* \"#utility.yul\":5227:5251   */\n      tag_136\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":5218:5252   */\n      tag_150\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":5200:5253   */\n      tag_136\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":5187:5253   */\n      swap1\n      pop\n        /* \"#utility.yul\":5117:5259   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5265:5391   */\n    tag_152:\n        /* \"#utility.yul\":5315:5324   */\n      0x00\n        /* \"#utility.yul\":5348:5385   */\n      tag_236\n        /* \"#utility.yul\":5379:5384   */\n      dup3\n        /* \"#utility.yul\":5348:5385   */\n      tag_151\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":5335:5385   */\n      swap1\n      pop\n        /* \"#utility.yul\":5265:5391   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5397:5538   */\n    tag_153:\n        /* \"#utility.yul\":5462:5471   */\n      0x00\n        /* \"#utility.yul\":5495:5532   */\n      tag_238\n        /* \"#utility.yul\":5526:5531   */\n      dup3\n        /* \"#utility.yul\":5495:5532   */\n      tag_152\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":5482:5532   */\n      swap1\n      pop\n        /* \"#utility.yul\":5397:5538   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5544:5705   */\n    tag_154:\n        /* \"#utility.yul\":5646:5698   */\n      tag_240\n        /* \"#utility.yul\":5692:5697   */\n      dup2\n        /* \"#utility.yul\":5646:5698   */\n      tag_153\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":5641:5644   */\n      dup3\n        /* \"#utility.yul\":5634:5699   */\n      mstore\n        /* \"#utility.yul\":5544:5705   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5711:5963   */\n    tag_37:\n        /* \"#utility.yul\":5819:5823   */\n      0x00\n        /* \"#utility.yul\":5857:5859   */\n      0x20\n        /* \"#utility.yul\":5846:5855   */\n      dup3\n        /* \"#utility.yul\":5842:5860   */\n      add\n        /* \"#utility.yul\":5834:5860   */\n      swap1\n      pop\n        /* \"#utility.yul\":5870:5956   */\n      tag_242\n        /* \"#utility.yul\":5953:5954   */\n      0x00\n        /* \"#utility.yul\":5942:5951   */\n      dup4\n        /* \"#utility.yul\":5938:5955   */\n      add\n        /* \"#utility.yul\":5929:5935   */\n      dup5\n        /* \"#utility.yul\":5870:5956   */\n      tag_154\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":5711:5963   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5969:6298   */\n    tag_43:\n        /* \"#utility.yul\":6028:6034   */\n      0x00\n        /* \"#utility.yul\":6077:6079   */\n      0x20\n        /* \"#utility.yul\":6065:6074   */\n      dup3\n        /* \"#utility.yul\":6056:6063   */\n      dup5\n        /* \"#utility.yul\":6052:6075   */\n      sub\n        /* \"#utility.yul\":6048:6080   */\n      slt\n        /* \"#utility.yul\":6045:6164   */\n      iszero\n      tag_244\n      jumpi\n        /* \"#utility.yul\":6083:6162   */\n      tag_245\n      tag_134\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":6045:6164   */\n    tag_244:\n        /* \"#utility.yul\":6203:6204   */\n      0x00\n        /* \"#utility.yul\":6228:6281   */\n      tag_246\n        /* \"#utility.yul\":6273:6280   */\n      dup5\n        /* \"#utility.yul\":6264:6270   */\n      dup3\n        /* \"#utility.yul\":6253:6262   */\n      dup6\n        /* \"#utility.yul\":6249:6271   */\n      add\n        /* \"#utility.yul\":6228:6281   */\n      tag_141\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":6218:6281   */\n      swap2\n      pop\n        /* \"#utility.yul\":6174:6291   */\n      pop\n        /* \"#utility.yul\":5969:6298   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6304:6473   */\n    tag_155:\n        /* \"#utility.yul\":6388:6399   */\n      0x00\n        /* \"#utility.yul\":6422:6428   */\n      dup3\n        /* \"#utility.yul\":6417:6420   */\n      dup3\n        /* \"#utility.yul\":6410:6429   */\n      mstore\n        /* \"#utility.yul\":6462:6466   */\n      0x20\n        /* \"#utility.yul\":6457:6460   */\n      dup3\n        /* \"#utility.yul\":6453:6467   */\n      add\n        /* \"#utility.yul\":6438:6467   */\n      swap1\n      pop\n        /* \"#utility.yul\":6304:6473   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6479:6651   */\n    tag_156:\n        /* \"#utility.yul\":6619:6643   */\n      0x4e46545374616b696e673a206e6f74207374616b656400000000000000000000\n        /* \"#utility.yul\":6615:6616   */\n      0x00\n        /* \"#utility.yul\":6607:6613   */\n      dup3\n        /* \"#utility.yul\":6603:6617   */\n      add\n        /* \"#utility.yul\":6596:6644   */\n      mstore\n        /* \"#utility.yul\":6479:6651   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6657:7023   */\n    tag_157:\n        /* \"#utility.yul\":6799:6802   */\n      0x00\n        /* \"#utility.yul\":6820:6887   */\n      tag_250\n        /* \"#utility.yul\":6884:6886   */\n      0x16\n        /* \"#utility.yul\":6879:6882   */\n      dup4\n        /* \"#utility.yul\":6820:6887   */\n      tag_155\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":6813:6887   */\n      swap2\n      pop\n        /* \"#utility.yul\":6896:6989   */\n      tag_251\n        /* \"#utility.yul\":6985:6988   */\n      dup3\n        /* \"#utility.yul\":6896:6989   */\n      tag_156\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":7014:7016   */\n      0x20\n        /* \"#utility.yul\":7009:7012   */\n      dup3\n        /* \"#utility.yul\":7005:7017   */\n      add\n        /* \"#utility.yul\":6998:7017   */\n      swap1\n      pop\n        /* \"#utility.yul\":6657:7023   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7029:7448   */\n    tag_54:\n        /* \"#utility.yul\":7195:7199   */\n      0x00\n        /* \"#utility.yul\":7233:7235   */\n      0x20\n        /* \"#utility.yul\":7222:7231   */\n      dup3\n        /* \"#utility.yul\":7218:7236   */\n      add\n        /* \"#utility.yul\":7210:7236   */\n      swap1\n      pop\n        /* \"#utility.yul\":7282:7291   */\n      dup2\n        /* \"#utility.yul\":7276:7280   */\n      dup2\n        /* \"#utility.yul\":7272:7292   */\n      sub\n        /* \"#utility.yul\":7268:7269   */\n      0x00\n        /* \"#utility.yul\":7257:7266   */\n      dup4\n        /* \"#utility.yul\":7253:7270   */\n      add\n        /* \"#utility.yul\":7246:7293   */\n      mstore\n        /* \"#utility.yul\":7310:7441   */\n      tag_253\n        /* \"#utility.yul\":7436:7440   */\n      dup2\n        /* \"#utility.yul\":7310:7441   */\n      tag_157\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":7302:7441   */\n      swap1\n      pop\n        /* \"#utility.yul\":7029:7448   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7454:7677   */\n    tag_158:\n        /* \"#utility.yul\":7594:7628   */\n      0x4e46545374616b696e673a207374616b696e672074696d65206e6f7420726561\n        /* \"#utility.yul\":7590:7591   */\n      0x00\n        /* \"#utility.yul\":7582:7588   */\n      dup3\n        /* \"#utility.yul\":7578:7592   */\n      add\n        /* \"#utility.yul\":7571:7629   */\n      mstore\n        /* \"#utility.yul\":7663:7669   */\n      0x6368656400000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7658:7660   */\n      0x20\n        /* \"#utility.yul\":7650:7656   */\n      dup3\n        /* \"#utility.yul\":7646:7661   */\n      add\n        /* \"#utility.yul\":7639:7670   */\n      mstore\n        /* \"#utility.yul\":7454:7677   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7683:8049   */\n    tag_159:\n        /* \"#utility.yul\":7825:7828   */\n      0x00\n        /* \"#utility.yul\":7846:7913   */\n      tag_256\n        /* \"#utility.yul\":7910:7912   */\n      0x24\n        /* \"#utility.yul\":7905:7908   */\n      dup4\n        /* \"#utility.yul\":7846:7913   */\n      tag_155\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":7839:7913   */\n      swap2\n      pop\n        /* \"#utility.yul\":7922:8015   */\n      tag_257\n        /* \"#utility.yul\":8011:8014   */\n      dup3\n        /* \"#utility.yul\":7922:8015   */\n      tag_158\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":8040:8042   */\n      0x40\n        /* \"#utility.yul\":8035:8038   */\n      dup3\n        /* \"#utility.yul\":8031:8043   */\n      add\n        /* \"#utility.yul\":8024:8043   */\n      swap1\n      pop\n        /* \"#utility.yul\":7683:8049   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8055:8474   */\n    tag_59:\n        /* \"#utility.yul\":8221:8225   */\n      0x00\n        /* \"#utility.yul\":8259:8261   */\n      0x20\n        /* \"#utility.yul\":8248:8257   */\n      dup3\n        /* \"#utility.yul\":8244:8262   */\n      add\n        /* \"#utility.yul\":8236:8262   */\n      swap1\n      pop\n        /* \"#utility.yul\":8308:8317   */\n      dup2\n        /* \"#utility.yul\":8302:8306   */\n      dup2\n        /* \"#utility.yul\":8298:8318   */\n      sub\n        /* \"#utility.yul\":8294:8295   */\n      0x00\n        /* \"#utility.yul\":8283:8292   */\n      dup4\n        /* \"#utility.yul\":8279:8296   */\n      add\n        /* \"#utility.yul\":8272:8319   */\n      mstore\n        /* \"#utility.yul\":8336:8467   */\n      tag_259\n        /* \"#utility.yul\":8462:8466   */\n      dup2\n        /* \"#utility.yul\":8336:8467   */\n      tag_159\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":8328:8467   */\n      swap1\n      pop\n        /* \"#utility.yul\":8055:8474   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8480:8598   */\n    tag_160:\n        /* \"#utility.yul\":8567:8591   */\n      tag_261\n        /* \"#utility.yul\":8585:8590   */\n      dup2\n        /* \"#utility.yul\":8567:8591   */\n      tag_137\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":8562:8565   */\n      dup3\n        /* \"#utility.yul\":8555:8592   */\n      mstore\n        /* \"#utility.yul\":8480:8598   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8604:9046   */\n    tag_63:\n        /* \"#utility.yul\":8753:8757   */\n      0x00\n        /* \"#utility.yul\":8791:8793   */\n      0x60\n        /* \"#utility.yul\":8780:8789   */\n      dup3\n        /* \"#utility.yul\":8776:8794   */\n      add\n        /* \"#utility.yul\":8768:8794   */\n      swap1\n      pop\n        /* \"#utility.yul\":8804:8875   */\n      tag_263\n        /* \"#utility.yul\":8872:8873   */\n      0x00\n        /* \"#utility.yul\":8861:8870   */\n      dup4\n        /* \"#utility.yul\":8857:8874   */\n      add\n        /* \"#utility.yul\":8848:8854   */\n      dup7\n        /* \"#utility.yul\":8804:8875   */\n      tag_160\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":8885:8957   */\n      tag_264\n        /* \"#utility.yul\":8953:8955   */\n      0x20\n        /* \"#utility.yul\":8942:8951   */\n      dup4\n        /* \"#utility.yul\":8938:8956   */\n      add\n        /* \"#utility.yul\":8929:8935   */\n      dup6\n        /* \"#utility.yul\":8885:8957   */\n      tag_160\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":8967:9039   */\n      tag_265\n        /* \"#utility.yul\":9035:9037   */\n      0x40\n        /* \"#utility.yul\":9024:9033   */\n      dup4\n        /* \"#utility.yul\":9020:9038   */\n      add\n        /* \"#utility.yul\":9011:9017   */\n      dup5\n        /* \"#utility.yul\":8967:9039   */\n      tag_132\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":8604:9046   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9052:9195   */\n    tag_161:\n        /* \"#utility.yul\":9109:9114   */\n      0x00\n        /* \"#utility.yul\":9140:9146   */\n      dup2\n        /* \"#utility.yul\":9134:9147   */\n      mload\n        /* \"#utility.yul\":9125:9147   */\n      swap1\n      pop\n        /* \"#utility.yul\":9156:9189   */\n      tag_267\n        /* \"#utility.yul\":9183:9188   */\n      dup2\n        /* \"#utility.yul\":9156:9189   */\n      tag_138\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":9052:9195   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9201:9552   */\n    tag_77:\n        /* \"#utility.yul\":9271:9277   */\n      0x00\n        /* \"#utility.yul\":9320:9322   */\n      0x20\n        /* \"#utility.yul\":9308:9317   */\n      dup3\n        /* \"#utility.yul\":9299:9306   */\n      dup5\n        /* \"#utility.yul\":9295:9318   */\n      sub\n        /* \"#utility.yul\":9291:9323   */\n      slt\n        /* \"#utility.yul\":9288:9407   */\n      iszero\n      tag_269\n      jumpi\n        /* \"#utility.yul\":9326:9405   */\n      tag_270\n      tag_134\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":9288:9407   */\n    tag_269:\n        /* \"#utility.yul\":9446:9447   */\n      0x00\n        /* \"#utility.yul\":9471:9535   */\n      tag_271\n        /* \"#utility.yul\":9527:9534   */\n      dup5\n        /* \"#utility.yul\":9518:9524   */\n      dup3\n        /* \"#utility.yul\":9507:9516   */\n      dup6\n        /* \"#utility.yul\":9503:9525   */\n      add\n        /* \"#utility.yul\":9471:9535   */\n      tag_161\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":9461:9535   */\n      swap2\n      pop\n        /* \"#utility.yul\":9417:9545   */\n      pop\n        /* \"#utility.yul\":9201:9552   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9558:9738   */\n    tag_162:\n        /* \"#utility.yul\":9698:9730   */\n      0x4e46545374616b696e673a206e6f74206f776e6572206f6620746f6b656e0000\n        /* \"#utility.yul\":9694:9695   */\n      0x00\n        /* \"#utility.yul\":9686:9692   */\n      dup3\n        /* \"#utility.yul\":9682:9696   */\n      add\n        /* \"#utility.yul\":9675:9731   */\n      mstore\n        /* \"#utility.yul\":9558:9738   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9744:10110   */\n    tag_163:\n        /* \"#utility.yul\":9886:9889   */\n      0x00\n        /* \"#utility.yul\":9907:9974   */\n      tag_274\n        /* \"#utility.yul\":9971:9973   */\n      0x1e\n        /* \"#utility.yul\":9966:9969   */\n      dup4\n        /* \"#utility.yul\":9907:9974   */\n      tag_155\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":9900:9974   */\n      swap2\n      pop\n        /* \"#utility.yul\":9983:10076   */\n      tag_275\n        /* \"#utility.yul\":10072:10075   */\n      dup3\n        /* \"#utility.yul\":9983:10076   */\n      tag_162\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":10101:10103   */\n      0x20\n        /* \"#utility.yul\":10096:10099   */\n      dup3\n        /* \"#utility.yul\":10092:10104   */\n      add\n        /* \"#utility.yul\":10085:10104   */\n      swap1\n      pop\n        /* \"#utility.yul\":9744:10110   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10116:10535   */\n    tag_80:\n        /* \"#utility.yul\":10282:10286   */\n      0x00\n        /* \"#utility.yul\":10320:10322   */\n      0x20\n        /* \"#utility.yul\":10309:10318   */\n      dup3\n        /* \"#utility.yul\":10305:10323   */\n      add\n        /* \"#utility.yul\":10297:10323   */\n      swap1\n      pop\n        /* \"#utility.yul\":10369:10378   */\n      dup2\n        /* \"#utility.yul\":10363:10367   */\n      dup2\n        /* \"#utility.yul\":10359:10379   */\n      sub\n        /* \"#utility.yul\":10355:10356   */\n      0x00\n        /* \"#utility.yul\":10344:10353   */\n      dup4\n        /* \"#utility.yul\":10340:10357   */\n      add\n        /* \"#utility.yul\":10333:10380   */\n      mstore\n        /* \"#utility.yul\":10397:10528   */\n      tag_277\n        /* \"#utility.yul\":10523:10527   */\n      dup2\n        /* \"#utility.yul\":10397:10528   */\n      tag_163\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":10389:10528   */\n      swap1\n      pop\n        /* \"#utility.yul\":10116:10535   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10541:10717   */\n    tag_164:\n        /* \"#utility.yul\":10681:10709   */\n      0x4e46545374616b696e673a20616c7265616479207374616b6564000000000000\n        /* \"#utility.yul\":10677:10678   */\n      0x00\n        /* \"#utility.yul\":10669:10675   */\n      dup3\n        /* \"#utility.yul\":10665:10679   */\n      add\n        /* \"#utility.yul\":10658:10710   */\n      mstore\n        /* \"#utility.yul\":10541:10717   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10723:11089   */\n    tag_165:\n        /* \"#utility.yul\":10865:10868   */\n      0x00\n        /* \"#utility.yul\":10886:10953   */\n      tag_280\n        /* \"#utility.yul\":10950:10952   */\n      0x1a\n        /* \"#utility.yul\":10945:10948   */\n      dup4\n        /* \"#utility.yul\":10886:10953   */\n      tag_155\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":10879:10953   */\n      swap2\n      pop\n        /* \"#utility.yul\":10962:11055   */\n      tag_281\n        /* \"#utility.yul\":11051:11054   */\n      dup3\n        /* \"#utility.yul\":10962:11055   */\n      tag_164\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":11080:11082   */\n      0x20\n        /* \"#utility.yul\":11075:11078   */\n      dup3\n        /* \"#utility.yul\":11071:11083   */\n      add\n        /* \"#utility.yul\":11064:11083   */\n      swap1\n      pop\n        /* \"#utility.yul\":10723:11089   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11095:11514   */\n    tag_83:\n        /* \"#utility.yul\":11261:11265   */\n      0x00\n        /* \"#utility.yul\":11299:11301   */\n      0x20\n        /* \"#utility.yul\":11288:11297   */\n      dup3\n        /* \"#utility.yul\":11284:11302   */\n      add\n        /* \"#utility.yul\":11276:11302   */\n      swap1\n      pop\n        /* \"#utility.yul\":11348:11357   */\n      dup2\n        /* \"#utility.yul\":11342:11346   */\n      dup2\n        /* \"#utility.yul\":11338:11358   */\n      sub\n        /* \"#utility.yul\":11334:11335   */\n      0x00\n        /* \"#utility.yul\":11323:11332   */\n      dup4\n        /* \"#utility.yul\":11319:11336   */\n      add\n        /* \"#utility.yul\":11312:11359   */\n      mstore\n        /* \"#utility.yul\":11376:11507   */\n      tag_283\n        /* \"#utility.yul\":11502:11506   */\n      dup2\n        /* \"#utility.yul\":11376:11507   */\n      tag_165\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":11368:11507   */\n      swap1\n      pop\n        /* \"#utility.yul\":11095:11514   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11520:11694   */\n    tag_166:\n        /* \"#utility.yul\":11660:11686   */\n      0x4e46545374616b696e673a206e6f7420617070726f7665640000000000000000\n        /* \"#utility.yul\":11656:11657   */\n      0x00\n        /* \"#utility.yul\":11648:11654   */\n      dup3\n        /* \"#utility.yul\":11644:11658   */\n      add\n        /* \"#utility.yul\":11637:11687   */\n      mstore\n        /* \"#utility.yul\":11520:11694   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11700:12066   */\n    tag_167:\n        /* \"#utility.yul\":11842:11845   */\n      0x00\n        /* \"#utility.yul\":11863:11930   */\n      tag_286\n        /* \"#utility.yul\":11927:11929   */\n      0x18\n        /* \"#utility.yul\":11922:11925   */\n      dup4\n        /* \"#utility.yul\":11863:11930   */\n      tag_155\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":11856:11930   */\n      swap2\n      pop\n        /* \"#utility.yul\":11939:12032   */\n      tag_287\n        /* \"#utility.yul\":12028:12031   */\n      dup3\n        /* \"#utility.yul\":11939:12032   */\n      tag_166\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":12057:12059   */\n      0x20\n        /* \"#utility.yul\":12052:12055   */\n      dup3\n        /* \"#utility.yul\":12048:12060   */\n      add\n        /* \"#utility.yul\":12041:12060   */\n      swap1\n      pop\n        /* \"#utility.yul\":11700:12066   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12072:12491   */\n    tag_90:\n        /* \"#utility.yul\":12238:12242   */\n      0x00\n        /* \"#utility.yul\":12276:12278   */\n      0x20\n        /* \"#utility.yul\":12265:12274   */\n      dup3\n        /* \"#utility.yul\":12261:12279   */\n      add\n        /* \"#utility.yul\":12253:12279   */\n      swap1\n      pop\n        /* \"#utility.yul\":12325:12334   */\n      dup2\n        /* \"#utility.yul\":12319:12323   */\n      dup2\n        /* \"#utility.yul\":12315:12335   */\n      sub\n        /* \"#utility.yul\":12311:12312   */\n      0x00\n        /* \"#utility.yul\":12300:12309   */\n      dup4\n        /* \"#utility.yul\":12296:12313   */\n      add\n        /* \"#utility.yul\":12289:12336   */\n      mstore\n        /* \"#utility.yul\":12353:12484   */\n      tag_289\n        /* \"#utility.yul\":12479:12483   */\n      dup2\n        /* \"#utility.yul\":12353:12484   */\n      tag_167\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":12345:12484   */\n      swap1\n      pop\n        /* \"#utility.yul\":12072:12491   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12497:12678   */\n    tag_168:\n        /* \"#utility.yul\":12637:12670   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":12633:12634   */\n      0x00\n        /* \"#utility.yul\":12625:12631   */\n      dup3\n        /* \"#utility.yul\":12621:12635   */\n      add\n        /* \"#utility.yul\":12614:12671   */\n      mstore\n        /* \"#utility.yul\":12497:12678   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12684:13050   */\n    tag_169:\n        /* \"#utility.yul\":12826:12829   */\n      0x00\n        /* \"#utility.yul\":12847:12914   */\n      tag_292\n        /* \"#utility.yul\":12911:12913   */\n      0x1f\n        /* \"#utility.yul\":12906:12909   */\n      dup4\n        /* \"#utility.yul\":12847:12914   */\n      tag_155\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":12840:12914   */\n      swap2\n      pop\n        /* \"#utility.yul\":12923:13016   */\n      tag_293\n        /* \"#utility.yul\":13012:13015   */\n      dup3\n        /* \"#utility.yul\":12923:13016   */\n      tag_168\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":13041:13043   */\n      0x20\n        /* \"#utility.yul\":13036:13039   */\n      dup3\n        /* \"#utility.yul\":13032:13044   */\n      add\n        /* \"#utility.yul\":13025:13044   */\n      swap1\n      pop\n        /* \"#utility.yul\":12684:13050   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13056:13475   */\n    tag_108:\n        /* \"#utility.yul\":13222:13226   */\n      0x00\n        /* \"#utility.yul\":13260:13262   */\n      0x20\n        /* \"#utility.yul\":13249:13258   */\n      dup3\n        /* \"#utility.yul\":13245:13263   */\n      add\n        /* \"#utility.yul\":13237:13263   */\n      swap1\n      pop\n        /* \"#utility.yul\":13309:13318   */\n      dup2\n        /* \"#utility.yul\":13303:13307   */\n      dup2\n        /* \"#utility.yul\":13299:13319   */\n      sub\n        /* \"#utility.yul\":13295:13296   */\n      0x00\n        /* \"#utility.yul\":13284:13293   */\n      dup4\n        /* \"#utility.yul\":13280:13297   */\n      add\n        /* \"#utility.yul\":13273:13320   */\n      mstore\n        /* \"#utility.yul\":13337:13468   */\n      tag_295\n        /* \"#utility.yul\":13463:13467   */\n      dup2\n        /* \"#utility.yul\":13337:13468   */\n      tag_169\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":13329:13468   */\n      swap1\n      pop\n        /* \"#utility.yul\":13056:13475   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13481:13661   */\n    tag_170:\n        /* \"#utility.yul\":13529:13606   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13526:13527   */\n      0x00\n        /* \"#utility.yul\":13519:13607   */\n      mstore\n        /* \"#utility.yul\":13626:13630   */\n      0x11\n        /* \"#utility.yul\":13623:13624   */\n      0x04\n        /* \"#utility.yul\":13616:13631   */\n      mstore\n        /* \"#utility.yul\":13650:13654   */\n      0x24\n        /* \"#utility.yul\":13647:13648   */\n      0x00\n        /* \"#utility.yul\":13640:13655   */\n      revert\n        /* \"#utility.yul\":13667:13858   */\n    tag_111:\n        /* \"#utility.yul\":13707:13710   */\n      0x00\n        /* \"#utility.yul\":13726:13746   */\n      tag_298\n        /* \"#utility.yul\":13744:13745   */\n      dup3\n        /* \"#utility.yul\":13726:13746   */\n      tag_131\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":13721:13746   */\n      swap2\n      pop\n        /* \"#utility.yul\":13760:13780   */\n      tag_299\n        /* \"#utility.yul\":13778:13779   */\n      dup4\n        /* \"#utility.yul\":13760:13780   */\n      tag_131\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":13755:13780   */\n      swap3\n      pop\n        /* \"#utility.yul\":13803:13804   */\n      dup3\n        /* \"#utility.yul\":13800:13801   */\n      dup3\n        /* \"#utility.yul\":13796:13805   */\n      add\n        /* \"#utility.yul\":13789:13805   */\n      swap1\n      pop\n        /* \"#utility.yul\":13824:13827   */\n      dup1\n        /* \"#utility.yul\":13821:13822   */\n      dup3\n        /* \"#utility.yul\":13818:13828   */\n      gt\n        /* \"#utility.yul\":13815:13851   */\n      iszero\n      tag_300\n      jumpi\n        /* \"#utility.yul\":13831:13849   */\n      tag_301\n      tag_170\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":13815:13851   */\n    tag_300:\n        /* \"#utility.yul\":13667:13858   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13864:14058   */\n    tag_124:\n        /* \"#utility.yul\":13904:13908   */\n      0x00\n        /* \"#utility.yul\":13924:13944   */\n      tag_303\n        /* \"#utility.yul\":13942:13943   */\n      dup3\n        /* \"#utility.yul\":13924:13944   */\n      tag_131\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":13919:13944   */\n      swap2\n      pop\n        /* \"#utility.yul\":13958:13978   */\n      tag_304\n        /* \"#utility.yul\":13976:13977   */\n      dup4\n        /* \"#utility.yul\":13958:13978   */\n      tag_131\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":13953:13978   */\n      swap3\n      pop\n        /* \"#utility.yul\":14002:14003   */\n      dup3\n        /* \"#utility.yul\":13999:14000   */\n      dup3\n        /* \"#utility.yul\":13995:14004   */\n      sub\n        /* \"#utility.yul\":13987:14004   */\n      swap1\n      pop\n        /* \"#utility.yul\":14026:14027   */\n      dup2\n        /* \"#utility.yul\":14020:14024   */\n      dup2\n        /* \"#utility.yul\":14017:14028   */\n      gt\n        /* \"#utility.yul\":14014:14051   */\n      iszero\n      tag_305\n      jumpi\n        /* \"#utility.yul\":14031:14049   */\n      tag_306\n      tag_170\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":14014:14051   */\n    tag_305:\n        /* \"#utility.yul\":13864:14058   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14064:14474   */\n    tag_127:\n        /* \"#utility.yul\":14104:14111   */\n      0x00\n        /* \"#utility.yul\":14127:14147   */\n      tag_308\n        /* \"#utility.yul\":14145:14146   */\n      dup3\n        /* \"#utility.yul\":14127:14147   */\n      tag_131\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":14122:14147   */\n      swap2\n      pop\n        /* \"#utility.yul\":14161:14181   */\n      tag_309\n        /* \"#utility.yul\":14179:14180   */\n      dup4\n        /* \"#utility.yul\":14161:14181   */\n      tag_131\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":14156:14181   */\n      swap3\n      pop\n        /* \"#utility.yul\":14216:14217   */\n      dup3\n        /* \"#utility.yul\":14213:14214   */\n      dup3\n        /* \"#utility.yul\":14209:14218   */\n      mul\n        /* \"#utility.yul\":14238:14268   */\n      tag_310\n        /* \"#utility.yul\":14256:14267   */\n      dup2\n        /* \"#utility.yul\":14238:14268   */\n      tag_131\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":14227:14268   */\n      swap2\n      pop\n        /* \"#utility.yul\":14417:14418   */\n      dup3\n        /* \"#utility.yul\":14408:14415   */\n      dup3\n        /* \"#utility.yul\":14404:14419   */\n      div\n        /* \"#utility.yul\":14401:14402   */\n      dup5\n        /* \"#utility.yul\":14398:14420   */\n      eq\n        /* \"#utility.yul\":14378:14379   */\n      dup4\n        /* \"#utility.yul\":14371:14380   */\n      iszero\n        /* \"#utility.yul\":14351:14434   */\n      or\n        /* \"#utility.yul\":14328:14467   */\n      tag_311\n      jumpi\n        /* \"#utility.yul\":14447:14465   */\n      tag_312\n      tag_170\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":14328:14467   */\n    tag_311:\n        /* \"#utility.yul\":14112:14474   */\n      pop\n        /* \"#utility.yul\":14064:14474   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14480:14660   */\n    tag_171:\n        /* \"#utility.yul\":14528:14605   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14525:14526   */\n      0x00\n        /* \"#utility.yul\":14518:14606   */\n      mstore\n        /* \"#utility.yul\":14625:14629   */\n      0x12\n        /* \"#utility.yul\":14622:14623   */\n      0x04\n        /* \"#utility.yul\":14615:14630   */\n      mstore\n        /* \"#utility.yul\":14649:14653   */\n      0x24\n        /* \"#utility.yul\":14646:14647   */\n      0x00\n        /* \"#utility.yul\":14639:14654   */\n      revert\n        /* \"#utility.yul\":14666:14851   */\n    tag_130:\n        /* \"#utility.yul\":14706:14707   */\n      0x00\n        /* \"#utility.yul\":14723:14743   */\n      tag_315\n        /* \"#utility.yul\":14741:14742   */\n      dup3\n        /* \"#utility.yul\":14723:14743   */\n      tag_131\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":14718:14743   */\n      swap2\n      pop\n        /* \"#utility.yul\":14757:14777   */\n      tag_316\n        /* \"#utility.yul\":14775:14776   */\n      dup4\n        /* \"#utility.yul\":14757:14777   */\n      tag_131\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":14752:14777   */\n      swap3\n      pop\n        /* \"#utility.yul\":14796:14797   */\n      dup3\n        /* \"#utility.yul\":14786:14821   */\n      tag_317\n      jumpi\n        /* \"#utility.yul\":14801:14819   */\n      tag_318\n      tag_171\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":14786:14821   */\n    tag_317:\n        /* \"#utility.yul\":14843:14844   */\n      dup3\n        /* \"#utility.yul\":14840:14841   */\n      dup3\n        /* \"#utility.yul\":14836:14845   */\n      div\n        /* \"#utility.yul\":14831:14845   */\n      swap1\n      pop\n        /* \"#utility.yul\":14666:14851   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122038fe381898f4b411411f8cb30b1e0205aeb68d7377e1424c0d1ebe8b9d05301d64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_18": {
									"entryPoint": null,
									"id": 18,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_920": {
									"entryPoint": null,
									"id": 920,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 218,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 241,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 172,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 140,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 135,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 192,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1199:7",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:7",
														"type": ""
													}
												],
												"src": "334:126:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:7",
														"type": ""
													}
												],
												"src": "466:96:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:7"
															},
															"nodeType": "YulIf",
															"src": "621:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:7",
														"type": ""
													}
												],
												"src": "568:122:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:7"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:7",
														"type": ""
													}
												],
												"src": "696:143:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "922:274:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "968:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "964:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "935:32:7"
															},
															"nodeType": "YulIf",
															"src": "932:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "1061:128:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1105:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "892:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "903:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "915:6:7",
														"type": ""
													}
												],
												"src": "845:351:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162001432380380620014328339818101604052810190620000379190620000f1565b600160008190555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000123565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000b9826200008c565b9050919050565b620000cb81620000ac565b8114620000d757600080fd5b50565b600081519050620000eb81620000c0565b92915050565b6000602082840312156200010a576200010962000087565b5b60006200011a84828501620000da565b91505092915050565b6112ff80620001336000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80632e0f2625116100665780632e0f26251461012357806347ccca02146101415780635997bb371461015f578063a694fc3a1461017d578063b88a802f1461019957610093565b806302657ad014610098578063150b7a02146100b657806316934fc4146100e65780632def662014610119575b600080fd5b6100a06101a3565b6040516100ad9190610b23565b60405180910390f35b6100d060048036038101906100cb9190610c37565b6101aa565b6040516100dd9190610cfa565b60405180910390f35b61010060048036038101906100fb9190610d15565b6101bf565b6040516101109493929190610d5d565b60405180910390f35b6101216101fc565b005b61012b610464565b6040516101389190610b23565b60405180910390f35b610149610469565b6040516101569190610e01565b60405180910390f35b61016761048f565b6040516101749190610b23565b60405180910390f35b61019760048036038101906101929190610e1c565b610494565b005b6101a16108cd565b005b62278d0081565b600063150b7a0260e01b905095945050505050565b60026020528060005260406000206000915090508060000154908060010154908060020154908060030160009054906101000a900460ff16905084565b6102046109df565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060030160009054906101000a900460ff16610298576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028f90610ea6565b60405180910390fd5b6102b262278d008260010154610a2e90919063ffffffff16565b4210156102f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102eb90610f38565b60405180910390fd5b60006103003383610a44565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342842e0e303385600001546040518463ffffffff1660e01b815260040161036593929190610f67565b600060405180830381600087803b15801561037f57600080fd5b505af1158015610393573d6000803e3d6000fd5b50505050600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600080820160009055600182016000905560028201600090556003820160006101000a81549060ff0219169055505081600001543373ffffffffffffffffffffffffffffffffffffffff167f7fc4727e062e336010f2c282598ef5f14facb3de68cf8195c2f23e1454b2b74e836040516104509190610b23565b60405180910390a35050610462610abe565b565b606481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600a81565b61049c6109df565b3373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e836040518263ffffffff1660e01b815260040161050e9190610b23565b602060405180830381865afa15801561052b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054f9190610fb3565b73ffffffffffffffffffffffffffffffffffffffff16146105a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059c9061102c565b60405180910390fd5b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff1615610635576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062c90611098565b60405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663081812fc836040518263ffffffff1660e01b81526004016106a79190610b23565b602060405180830381865afa1580156106c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e89190610fb3565b73ffffffffffffffffffffffffffffffffffffffff161461073e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073590611104565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342842e0e3330846040518463ffffffff1660e01b815260040161079d93929190610f67565b600060405180830381600087803b1580156107b757600080fd5b505af11580156107cb573d6000803e3d6000fd5b50505050604051806080016040528082815260200142815260200142815260200160011515815250600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000155602082015181600101556040820151816002015560608201518160030160006101000a81548160ff021916908315150217905550905050803373ffffffffffffffffffffffffffffffffffffffff167f1449c6dd7851abc30abf37f57715f492010519147cc2652fbc38202c18a6ee90426040516108ba9190610b23565b60405180910390a36108ca610abe565b50565b6108d56109df565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060030160009054906101000a900460ff16610969576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096090610ea6565b60405180910390fd5b60006109753383610a44565b905042826002018190555081600001543373ffffffffffffffffffffffffffffffffffffffff167ff01da32686223933d8a18a391060918c7f11a3648639edd87ae013e2e2731743836040516109cb9190610b23565b60405180910390a350506109dd610abe565b565b600260005403610a24576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1b90611170565b60405180910390fd5b6002600081905550565b60008183610a3c91906111bf565b905092915050565b600080610a5e836002015442610ac890919063ffffffff16565b90506000610ab16064610aa362278d00610a956064610a87600a89610ade90919063ffffffff16565b610ade90919063ffffffff16565b610af490919063ffffffff16565b610af490919063ffffffff16565b9050809250505092915050565b6001600081905550565b60008183610ad691906111f3565b905092915050565b60008183610aec9190611227565b905092915050565b60008183610b029190611298565b905092915050565b6000819050919050565b610b1d81610b0a565b82525050565b6000602082019050610b386000830184610b14565b92915050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b7382610b48565b9050919050565b610b8381610b68565b8114610b8e57600080fd5b50565b600081359050610ba081610b7a565b92915050565b610baf81610b0a565b8114610bba57600080fd5b50565b600081359050610bcc81610ba6565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610bf757610bf6610bd2565b5b8235905067ffffffffffffffff811115610c1457610c13610bd7565b5b602083019150836001820283011115610c3057610c2f610bdc565b5b9250929050565b600080600080600060808688031215610c5357610c52610b3e565b5b6000610c6188828901610b91565b9550506020610c7288828901610b91565b9450506040610c8388828901610bbd565b935050606086013567ffffffffffffffff811115610ca457610ca3610b43565b5b610cb088828901610be1565b92509250509295509295909350565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610cf481610cbf565b82525050565b6000602082019050610d0f6000830184610ceb565b92915050565b600060208284031215610d2b57610d2a610b3e565b5b6000610d3984828501610b91565b91505092915050565b60008115159050919050565b610d5781610d42565b82525050565b6000608082019050610d726000830187610b14565b610d7f6020830186610b14565b610d8c6040830185610b14565b610d996060830184610d4e565b95945050505050565b6000819050919050565b6000610dc7610dc2610dbd84610b48565b610da2565b610b48565b9050919050565b6000610dd982610dac565b9050919050565b6000610deb82610dce565b9050919050565b610dfb81610de0565b82525050565b6000602082019050610e166000830184610df2565b92915050565b600060208284031215610e3257610e31610b3e565b5b6000610e4084828501610bbd565b91505092915050565b600082825260208201905092915050565b7f4e46545374616b696e673a206e6f74207374616b656400000000000000000000600082015250565b6000610e90601683610e49565b9150610e9b82610e5a565b602082019050919050565b60006020820190508181036000830152610ebf81610e83565b9050919050565b7f4e46545374616b696e673a207374616b696e672074696d65206e6f742072656160008201527f6368656400000000000000000000000000000000000000000000000000000000602082015250565b6000610f22602483610e49565b9150610f2d82610ec6565b604082019050919050565b60006020820190508181036000830152610f5181610f15565b9050919050565b610f6181610b68565b82525050565b6000606082019050610f7c6000830186610f58565b610f896020830185610f58565b610f966040830184610b14565b949350505050565b600081519050610fad81610b7a565b92915050565b600060208284031215610fc957610fc8610b3e565b5b6000610fd784828501610f9e565b91505092915050565b7f4e46545374616b696e673a206e6f74206f776e6572206f6620746f6b656e0000600082015250565b6000611016601e83610e49565b915061102182610fe0565b602082019050919050565b6000602082019050818103600083015261104581611009565b9050919050565b7f4e46545374616b696e673a20616c7265616479207374616b6564000000000000600082015250565b6000611082601a83610e49565b915061108d8261104c565b602082019050919050565b600060208201905081810360008301526110b181611075565b9050919050565b7f4e46545374616b696e673a206e6f7420617070726f7665640000000000000000600082015250565b60006110ee601883610e49565b91506110f9826110b8565b602082019050919050565b6000602082019050818103600083015261111d816110e1565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b600061115a601f83610e49565b915061116582611124565b602082019050919050565b600060208201905081810360008301526111898161114d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006111ca82610b0a565b91506111d583610b0a565b92508282019050808211156111ed576111ec611190565b5b92915050565b60006111fe82610b0a565b915061120983610b0a565b925082820390508181111561122157611220611190565b5b92915050565b600061123282610b0a565b915061123d83610b0a565b925082820261124b81610b0a565b9150828204841483151761126257611261611190565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006112a382610b0a565b91506112ae83610b0a565b9250826112be576112bd611269565b5b82820490509291505056fea264697066735822122038fe381898f4b411411f8cb30b1e0205aeb68d7377e1424c0d1ebe8b9d05301d64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1432 CODESIZE SUB DUP1 PUSH3 0x1432 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0xF1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH3 0x123 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xB9 DUP3 PUSH3 0x8C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xCB DUP2 PUSH3 0xAC JUMP JUMPDEST DUP2 EQ PUSH3 0xD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0xEB DUP2 PUSH3 0xC0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x10A JUMPI PUSH3 0x109 PUSH3 0x87 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x11A DUP5 DUP3 DUP6 ADD PUSH3 0xDA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x12FF DUP1 PUSH3 0x133 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2E0F2625 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x2E0F2625 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x47CCCA02 EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x5997BB37 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0xB88A802F EQ PUSH2 0x199 JUMPI PUSH2 0x93 JUMP JUMPDEST DUP1 PUSH4 0x2657AD0 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x16934FC4 EQ PUSH2 0xE6 JUMPI DUP1 PUSH4 0x2DEF6620 EQ PUSH2 0x119 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x1A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD SWAP2 SWAP1 PUSH2 0xB23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCB SWAP2 SWAP1 PUSH2 0xC37 JUMP JUMPDEST PUSH2 0x1AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDD SWAP2 SWAP1 PUSH2 0xCFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x100 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFB SWAP2 SWAP1 PUSH2 0xD15 JUMP JUMPDEST PUSH2 0x1BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x110 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x121 PUSH2 0x1FC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x12B PUSH2 0x464 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x138 SWAP2 SWAP1 PUSH2 0xB23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x149 PUSH2 0x469 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x156 SWAP2 SWAP1 PUSH2 0xE01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x167 PUSH2 0x48F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x174 SWAP2 SWAP1 PUSH2 0xB23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x197 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x192 SWAP2 SWAP1 PUSH2 0xE1C JUMP JUMPDEST PUSH2 0x494 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A1 PUSH2 0x8CD JUMP JUMPDEST STOP JUMPDEST PUSH3 0x278D00 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP5 JUMP JUMPDEST PUSH2 0x204 PUSH2 0x9DF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x298 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28F SWAP1 PUSH2 0xEA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2B2 PUSH3 0x278D00 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0xA2E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x2F4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2EB SWAP1 PUSH2 0xF38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x300 CALLER DUP4 PUSH2 0xA44 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42842E0E ADDRESS CALLER DUP6 PUSH1 0x0 ADD SLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x365 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF67 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x37F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x393 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE POP POP DUP2 PUSH1 0x0 ADD SLOAD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7FC4727E062E336010F2C282598EF5F14FACB3DE68CF8195C2F23E1454B2B74E DUP4 PUSH1 0x40 MLOAD PUSH2 0x450 SWAP2 SWAP1 PUSH2 0xB23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH2 0x462 PUSH2 0xABE JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x64 DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xA DUP2 JUMP JUMPDEST PUSH2 0x49C PUSH2 0x9DF JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50E SWAP2 SWAP1 PUSH2 0xB23 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x52B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x54F SWAP2 SWAP1 PUSH2 0xFB3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x59C SWAP1 PUSH2 0x102C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x635 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x62C SWAP1 PUSH2 0x1098 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x81812FC DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A7 SWAP2 SWAP1 PUSH2 0xB23 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6C4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6E8 SWAP2 SWAP1 PUSH2 0xFB3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x73E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x735 SWAP1 PUSH2 0x1104 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42842E0E CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x79D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF67 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7CB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1449C6DD7851ABC30ABF37F57715F492010519147CC2652FBC38202C18A6EE90 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x8BA SWAP2 SWAP1 PUSH2 0xB23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x8CA PUSH2 0xABE JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x8D5 PUSH2 0x9DF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x969 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x960 SWAP1 PUSH2 0xEA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x975 CALLER DUP4 PUSH2 0xA44 JUMP JUMPDEST SWAP1 POP TIMESTAMP DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 ADD SLOAD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF01DA32686223933D8A18A391060918C7F11A3648639EDD87AE013E2E2731743 DUP4 PUSH1 0x40 MLOAD PUSH2 0x9CB SWAP2 SWAP1 PUSH2 0xB23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH2 0x9DD PUSH2 0xABE JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0xA24 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA1B SWAP1 PUSH2 0x1170 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xA3C SWAP2 SWAP1 PUSH2 0x11BF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xA5E DUP4 PUSH1 0x2 ADD SLOAD TIMESTAMP PUSH2 0xAC8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xAB1 PUSH1 0x64 PUSH2 0xAA3 PUSH3 0x278D00 PUSH2 0xA95 PUSH1 0x64 PUSH2 0xA87 PUSH1 0xA DUP10 PUSH2 0xADE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xADE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xAF4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xAF4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xAD6 SWAP2 SWAP1 PUSH2 0x11F3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xAEC SWAP2 SWAP1 PUSH2 0x1227 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xB02 SWAP2 SWAP1 PUSH2 0x1298 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB1D DUP2 PUSH2 0xB0A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB38 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB14 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB73 DUP3 PUSH2 0xB48 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB83 DUP2 PUSH2 0xB68 JUMP JUMPDEST DUP2 EQ PUSH2 0xB8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBA0 DUP2 PUSH2 0xB7A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBAF DUP2 PUSH2 0xB0A JUMP JUMPDEST DUP2 EQ PUSH2 0xBBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBCC DUP2 PUSH2 0xBA6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xBF7 JUMPI PUSH2 0xBF6 PUSH2 0xBD2 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC14 JUMPI PUSH2 0xC13 PUSH2 0xBD7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xC30 JUMPI PUSH2 0xC2F PUSH2 0xBDC JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xC53 JUMPI PUSH2 0xC52 PUSH2 0xB3E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC61 DUP9 DUP3 DUP10 ADD PUSH2 0xB91 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0xC72 DUP9 DUP3 DUP10 ADD PUSH2 0xB91 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0xC83 DUP9 DUP3 DUP10 ADD PUSH2 0xBBD JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCA4 JUMPI PUSH2 0xCA3 PUSH2 0xB43 JUMP JUMPDEST JUMPDEST PUSH2 0xCB0 DUP9 DUP3 DUP10 ADD PUSH2 0xBE1 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCF4 DUP2 PUSH2 0xCBF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD0F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCEB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD2B JUMPI PUSH2 0xD2A PUSH2 0xB3E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD39 DUP5 DUP3 DUP6 ADD PUSH2 0xB91 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD57 DUP2 PUSH2 0xD42 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0xD72 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0xB14 JUMP JUMPDEST PUSH2 0xD7F PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0xB14 JUMP JUMPDEST PUSH2 0xD8C PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xB14 JUMP JUMPDEST PUSH2 0xD99 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0xD4E JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDC7 PUSH2 0xDC2 PUSH2 0xDBD DUP5 PUSH2 0xB48 JUMP JUMPDEST PUSH2 0xDA2 JUMP JUMPDEST PUSH2 0xB48 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDD9 DUP3 PUSH2 0xDAC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDEB DUP3 PUSH2 0xDCE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDFB DUP2 PUSH2 0xDE0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE16 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDF2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE32 JUMPI PUSH2 0xE31 PUSH2 0xB3E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE40 DUP5 DUP3 DUP6 ADD PUSH2 0xBBD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E46545374616B696E673A206E6F74207374616B656400000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE90 PUSH1 0x16 DUP4 PUSH2 0xE49 JUMP JUMPDEST SWAP2 POP PUSH2 0xE9B DUP3 PUSH2 0xE5A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEBF DUP2 PUSH2 0xE83 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E46545374616B696E673A207374616B696E672074696D65206E6F7420726561 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6368656400000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF22 PUSH1 0x24 DUP4 PUSH2 0xE49 JUMP JUMPDEST SWAP2 POP PUSH2 0xF2D DUP3 PUSH2 0xEC6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF51 DUP2 PUSH2 0xF15 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF61 DUP2 PUSH2 0xB68 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xF7C PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xF58 JUMP JUMPDEST PUSH2 0xF89 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xF58 JUMP JUMPDEST PUSH2 0xF96 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xB14 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xFAD DUP2 PUSH2 0xB7A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFC9 JUMPI PUSH2 0xFC8 PUSH2 0xB3E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFD7 DUP5 DUP3 DUP6 ADD PUSH2 0xF9E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E46545374616B696E673A206E6F74206F776E6572206F6620746F6B656E0000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1016 PUSH1 0x1E DUP4 PUSH2 0xE49 JUMP JUMPDEST SWAP2 POP PUSH2 0x1021 DUP3 PUSH2 0xFE0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1045 DUP2 PUSH2 0x1009 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E46545374616B696E673A20616C7265616479207374616B6564000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1082 PUSH1 0x1A DUP4 PUSH2 0xE49 JUMP JUMPDEST SWAP2 POP PUSH2 0x108D DUP3 PUSH2 0x104C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10B1 DUP2 PUSH2 0x1075 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E46545374616B696E673A206E6F7420617070726F7665640000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10EE PUSH1 0x18 DUP4 PUSH2 0xE49 JUMP JUMPDEST SWAP2 POP PUSH2 0x10F9 DUP3 PUSH2 0x10B8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x111D DUP2 PUSH2 0x10E1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x115A PUSH1 0x1F DUP4 PUSH2 0xE49 JUMP JUMPDEST SWAP2 POP PUSH2 0x1165 DUP3 PUSH2 0x1124 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1189 DUP2 PUSH2 0x114D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x11CA DUP3 PUSH2 0xB0A JUMP JUMPDEST SWAP2 POP PUSH2 0x11D5 DUP4 PUSH2 0xB0A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x11ED JUMPI PUSH2 0x11EC PUSH2 0x1190 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11FE DUP3 PUSH2 0xB0A JUMP JUMPDEST SWAP2 POP PUSH2 0x1209 DUP4 PUSH2 0xB0A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1221 JUMPI PUSH2 0x1220 PUSH2 0x1190 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1232 DUP3 PUSH2 0xB0A JUMP JUMPDEST SWAP2 POP PUSH2 0x123D DUP4 PUSH2 0xB0A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x124B DUP2 PUSH2 0xB0A JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1262 JUMPI PUSH2 0x1261 PUSH2 0x1190 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x12A3 DUP3 PUSH2 0xB0A JUMP JUMPDEST SWAP2 POP PUSH2 0x12AE DUP4 PUSH2 0xB0A JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x12BE JUMPI PUSH2 0x12BD PUSH2 0x1269 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODESIZE INVALID CODESIZE XOR SWAP9 DELEGATECALL 0xB4 GT COINBASE 0x1F DUP13 0xB3 SIGNEXTEND 0x1E MUL SDIV 0xAE 0xB6 DUP14 PUSH20 0x77E1424C0D1EBE8B9D05301D64736F6C63430008 SLT STOP CALLER ",
							"sourceMap": "357:2738:6:-:0;;;1104:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1716:1:0;1821:7;:22;;;;1161:11:6;1147:3;;:26;;;;;;;;;;;;;;;;;;1104:76;357:2738;;88:117:7;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;357:2738:6:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DECIMALS_867": {
									"entryPoint": 1124,
									"id": 867,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MINIMUM_STAKING_TIME_861": {
									"entryPoint": 419,
									"id": 861,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@REWARD_RATE_864": {
									"entryPoint": 1167,
									"id": 864,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantAfter_52": {
									"entryPoint": 2750,
									"id": 52,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_44": {
									"entryPoint": 2527,
									"id": 44,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@add_705": {
									"entryPoint": 2606,
									"id": 705,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@calculateReward_1144": {
									"entryPoint": 2628,
									"id": 1144,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@claimReward_1106": {
									"entryPoint": 2253,
									"id": 1106,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@div_750": {
									"entryPoint": 2804,
									"id": 750,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mul_735": {
									"entryPoint": 2782,
									"id": 735,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@nft_879": {
									"entryPoint": 1129,
									"id": 879,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@onERC721Received_1163": {
									"entryPoint": 426,
									"id": 1163,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@stake_996": {
									"entryPoint": 1172,
									"id": 996,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stakes_884": {
									"entryPoint": 447,
									"id": 884,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sub_720": {
									"entryPoint": 2760,
									"id": 720,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unstake_1063": {
									"entryPoint": 508,
									"id": 1063,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 2961,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 3998,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_calldata_ptr": {
									"entryPoint": 3041,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3005,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3349,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 4019,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr": {
									"entryPoint": 3127,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3612,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3928,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3406,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes4_to_t_bytes4_fromStack": {
									"entryPoint": 3307,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC721_$169_to_t_address_fromStack": {
									"entryPoint": 3570,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_57ace88f6b29b408b5264955a1a63df689cdbd5dead36262afdf785bc4acc8d9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3715,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c20202affc11a053167ee51e7a4f251d2310022a958c58aed2d1a010bbd93abf_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3861,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cbaaa21b7b3072888a2a4c2de3f36c77c8cd20938ab707224ca7407a4001377b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4213,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4429,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f1a367140edd5e86c987d3809db2b9eeb2fcdfa2ec04d1a7436f0d79aa2b6aa6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4321,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f5e038f4f16f4dc36fdb6877e7275cbf792a1fe12953bce11e9f7522676be8e2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4105,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2836,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3943,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": 3322,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC721_$169__to_t_address__fromStack_reversed": {
									"entryPoint": 3585,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_57ace88f6b29b408b5264955a1a63df689cdbd5dead36262afdf785bc4acc8d9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3750,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c20202affc11a053167ee51e7a4f251d2310022a958c58aed2d1a010bbd93abf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3896,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cbaaa21b7b3072888a2a4c2de3f36c77c8cd20938ab707224ca7407a4001377b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4248,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4464,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f1a367140edd5e86c987d3809db2b9eeb2fcdfa2ec04d1a7436f0d79aa2b6aa6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4356,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f5e038f4f16f4dc36fdb6877e7275cbf792a1fe12953bce11e9f7522676be8e2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4140,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2851,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed": {
									"entryPoint": 3421,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3657,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4543,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 4760,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4647,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4595,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2920,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3394,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 3263,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2888,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2826,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC721_$169_to_t_address": {
									"entryPoint": 3552,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 3534,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 3500,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 3490,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4496,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 4713,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 3031,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 3026,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 3036,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 2883,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2878,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_57ace88f6b29b408b5264955a1a63df689cdbd5dead36262afdf785bc4acc8d9": {
									"entryPoint": 3674,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c20202affc11a053167ee51e7a4f251d2310022a958c58aed2d1a010bbd93abf": {
									"entryPoint": 3782,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cbaaa21b7b3072888a2a4c2de3f36c77c8cd20938ab707224ca7407a4001377b": {
									"entryPoint": 4172,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 4388,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f1a367140edd5e86c987d3809db2b9eeb2fcdfa2ec04d1a7436f0d79aa2b6aa6": {
									"entryPoint": 4280,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f5e038f4f16f4dc36fdb6877e7275cbf792a1fe12953bce11e9f7522676be8e2": {
									"entryPoint": 4064,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2938,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2982,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:14854:7",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:32:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:16:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "73:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:7",
														"type": ""
													}
												],
												"src": "7:77:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "155:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:37:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "165:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "143:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "150:3:7",
														"type": ""
													}
												],
												"src": "90:118:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "312:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "322:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "345:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "330:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "426:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "358:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "358:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "284:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "296:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "307:4:7",
														"type": ""
													}
												],
												"src": "214:222:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "482:35:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "492:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "508:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "502:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "502:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "492:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "475:6:7",
														"type": ""
													}
												],
												"src": "442:75:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "612:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "629:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "632:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "622:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "622:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "622:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "523:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "735:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "752:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "755:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "745:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "745:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "745:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "646:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "814:81:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "824:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "839:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "846:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "835:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "835:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "824:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "796:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "806:7:7",
														"type": ""
													}
												],
												"src": "769:126:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "946:51:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "956:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "985:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "967:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "967:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "956:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "928:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "938:7:7",
														"type": ""
													}
												],
												"src": "901:96:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1046:79:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1103:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1112:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1115:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1105:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1105:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1105:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1069:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1094:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1076:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1076:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1066:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1066:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1059:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1059:43:7"
															},
															"nodeType": "YulIf",
															"src": "1056:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1039:5:7",
														"type": ""
													}
												],
												"src": "1003:122:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1183:87:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1193:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1202:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1202:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1193:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1258:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1231:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1231:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1231:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1161:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1169:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1177:5:7",
														"type": ""
													}
												],
												"src": "1131:139:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1319:79:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1376:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1385:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1388:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1378:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1378:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1378:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1342:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1367:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1349:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1349:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1339:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1339:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1332:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1332:43:7"
															},
															"nodeType": "YulIf",
															"src": "1329:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1312:5:7",
														"type": ""
													}
												],
												"src": "1276:122:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1456:87:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1466:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1488:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1475:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1475:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1466:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1531:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1504:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1504:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1504:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1434:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1442:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1450:5:7",
														"type": ""
													}
												],
												"src": "1404:139:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1638:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1655:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1658:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1648:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1648:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1648:12:7"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "1549:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1761:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1778:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1781:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1771:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1771:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1771:12:7"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nodeType": "YulFunctionDefinition",
												"src": "1672:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1884:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1901:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1904:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1894:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1894:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1894:12:7"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "1795:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2005:478:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2054:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "2056:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2056:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2056:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2033:6:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2041:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2029:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2029:17:7"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2048:3:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2025:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2025:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2018:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2018:35:7"
															},
															"nodeType": "YulIf",
															"src": "2015:122:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2146:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2169:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2156:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2156:20:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2146:6:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2219:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nodeType": "YulIdentifier",
																				"src": "2221:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2221:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2221:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2191:6:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2199:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2188:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2188:30:7"
															},
															"nodeType": "YulIf",
															"src": "2185:117:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2311:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2327:6:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2335:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2323:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2323:17:7"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nodeType": "YulIdentifier",
																	"src": "2311:8:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2394:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "2396:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2396:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2396:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nodeType": "YulIdentifier",
																				"src": "2359:8:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "2373:6:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2381:4:7",
																						"type": "",
																						"value": "0x01"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "2369:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2369:17:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2355:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2355:32:7"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2389:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2352:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2352:41:7"
															},
															"nodeType": "YulIf",
															"src": "2349:128:7"
														}
													]
												},
												"name": "abi_decode_t_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1972:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1980:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nodeType": "YulTypedName",
														"src": "1988:8:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1998:6:7",
														"type": ""
													}
												],
												"src": "1931:552:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2625:827:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2672:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2674:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2674:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2674:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2646:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2655:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2642:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2642:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2667:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2638:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2638:33:7"
															},
															"nodeType": "YulIf",
															"src": "2635:120:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "2765:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2780:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2794:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2784:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2809:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2844:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2855:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2840:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2840:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2864:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2819:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2819:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2809:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2892:118:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2907:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2921:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2911:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2937:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2972:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2983:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2968:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2968:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2992:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2947:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2947:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2937:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3020:118:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3035:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3049:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3039:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3065:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3100:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3111:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3096:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3096:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3120:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3075:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3075:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "3065:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3148:297:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3163:46:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3194:9:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3205:2:7",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3190:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3190:18:7"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "3177:12:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3177:32:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3167:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3256:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3258:77:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3258:79:7"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3258:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3228:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3236:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3225:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3225:30:7"
																	},
																	"nodeType": "YulIf",
																	"src": "3222:117:7"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3353:82:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3407:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3418:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3403:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3403:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3427:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_calldata_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "3371:31:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3371:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "3353:6:7"
																		},
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "3361:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2563:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2574:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2586:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2594:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2602:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2610:6:7",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "2618:6:7",
														"type": ""
													}
												],
												"src": "2489:963:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3502:105:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3512:89:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3527:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3534:66:7",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3523:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3523:78:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3512:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3484:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3494:7:7",
														"type": ""
													}
												],
												"src": "3458:149:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3676:52:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3693:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3715:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "3698:16:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3698:23:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3686:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3686:36:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3686:36:7"
														}
													]
												},
												"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3664:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3671:3:7",
														"type": ""
													}
												],
												"src": "3613:115:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3830:122:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3840:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3852:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3863:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3848:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3848:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3840:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3918:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3931:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3942:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3927:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3927:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3876:41:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3876:69:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3876:69:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3802:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3814:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3825:4:7",
														"type": ""
													}
												],
												"src": "3734:218:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4024:263:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4070:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4072:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4072:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4072:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4045:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4054:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4041:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4041:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4066:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4037:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4037:32:7"
															},
															"nodeType": "YulIf",
															"src": "4034:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "4163:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4178:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4192:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4182:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4207:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4242:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4253:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4238:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4238:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4262:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4217:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4217:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4207:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3994:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4005:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4017:6:7",
														"type": ""
													}
												],
												"src": "3958:329:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4335:48:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4345:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4370:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "4363:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4363:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4356:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4356:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4345:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4317:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4327:7:7",
														"type": ""
													}
												],
												"src": "4293:90:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4448:50:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4465:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4485:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "4470:14:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4470:21:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4458:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4458:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4458:34:7"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4436:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4443:3:7",
														"type": ""
													}
												],
												"src": "4389:109:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4680:365:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4690:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4702:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4713:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4698:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4698:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4690:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4771:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4784:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4795:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4780:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4780:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4727:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4727:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4727:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4852:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4865:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4876:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4861:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4861:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4808:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4808:72:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4808:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "4934:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4947:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4958:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4943:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4943:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4890:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4890:72:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4890:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "5010:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5023:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5034:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5019:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5019:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4972:37:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4972:66:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4972:66:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4628:9:7",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4640:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4648:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4656:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4664:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4675:4:7",
														"type": ""
													}
												],
												"src": "4504:541:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5083:28:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5093:12:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5100:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5093:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5069:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5079:3:7",
														"type": ""
													}
												],
												"src": "5051:60:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5177:82:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5187:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5245:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "5227:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5227:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "5218:8:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5218:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "5200:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5200:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "5187:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5157:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "5167:9:7",
														"type": ""
													}
												],
												"src": "5117:142:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5325:66:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5335:50:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5379:5:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "5348:30:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5348:37:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "5335:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5305:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "5315:9:7",
														"type": ""
													}
												],
												"src": "5265:126:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5472:66:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5482:50:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5526:5:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "5495:30:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5495:37:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "5482:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC721_$169_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5452:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "5462:9:7",
														"type": ""
													}
												],
												"src": "5397:141:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5624:81:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5641:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5692:5:7"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC721_$169_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5646:45:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5646:52:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5634:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5634:65:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5634:65:7"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC721_$169_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5612:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5619:3:7",
														"type": ""
													}
												],
												"src": "5544:161:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5824:139:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5834:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5846:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5857:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5842:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5842:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5834:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5929:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5942:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5953:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5938:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5938:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC721_$169_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5870:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5870:86:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5870:86:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC721_$169__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5796:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5808:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5819:4:7",
														"type": ""
													}
												],
												"src": "5711:252:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6035:263:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6081:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6083:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6083:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6083:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6056:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6065:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6052:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6052:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6077:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6048:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6048:32:7"
															},
															"nodeType": "YulIf",
															"src": "6045:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "6174:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6189:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6203:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6193:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6218:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6253:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6264:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6249:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6249:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6273:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6228:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6228:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6218:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6005:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6016:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6028:6:7",
														"type": ""
													}
												],
												"src": "5969:329:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6400:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6417:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6422:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6410:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6410:19:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6410:19:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6438:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6457:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6462:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6453:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6453:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "6438:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6372:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6377:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "6388:11:7",
														"type": ""
													}
												],
												"src": "6304:169:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6585:66:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6607:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6615:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6603:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6603:14:7"
																	},
																	{
																		"hexValue": "4e46545374616b696e673a206e6f74207374616b6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6619:24:7",
																		"type": "",
																		"value": "NFTStaking: not staked"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6596:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6596:48:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6596:48:7"
														}
													]
												},
												"name": "store_literal_in_memory_57ace88f6b29b408b5264955a1a63df689cdbd5dead36262afdf785bc4acc8d9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6577:6:7",
														"type": ""
													}
												],
												"src": "6479:172:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6803:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6813:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6879:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6884:2:7",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6820:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6820:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6813:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6985:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_57ace88f6b29b408b5264955a1a63df689cdbd5dead36262afdf785bc4acc8d9",
																	"nodeType": "YulIdentifier",
																	"src": "6896:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6896:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6896:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6998:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7009:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7014:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7005:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7005:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6998:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_57ace88f6b29b408b5264955a1a63df689cdbd5dead36262afdf785bc4acc8d9_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6791:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6799:3:7",
														"type": ""
													}
												],
												"src": "6657:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7200:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7210:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7222:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7233:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7218:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7218:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7210:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7257:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7268:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7253:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7253:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7276:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7282:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7272:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7272:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7246:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7246:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7246:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7302:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7436:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_57ace88f6b29b408b5264955a1a63df689cdbd5dead36262afdf785bc4acc8d9_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7310:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7310:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7302:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_57ace88f6b29b408b5264955a1a63df689cdbd5dead36262afdf785bc4acc8d9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7180:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7195:4:7",
														"type": ""
													}
												],
												"src": "7029:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7560:117:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7582:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7590:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7578:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7578:14:7"
																	},
																	{
																		"hexValue": "4e46545374616b696e673a207374616b696e672074696d65206e6f7420726561",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7594:34:7",
																		"type": "",
																		"value": "NFTStaking: staking time not rea"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7571:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7571:58:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7571:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7650:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7658:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7646:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7646:15:7"
																	},
																	{
																		"hexValue": "63686564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7663:6:7",
																		"type": "",
																		"value": "ched"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7639:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7639:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7639:31:7"
														}
													]
												},
												"name": "store_literal_in_memory_c20202affc11a053167ee51e7a4f251d2310022a958c58aed2d1a010bbd93abf",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7552:6:7",
														"type": ""
													}
												],
												"src": "7454:223:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7829:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7839:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7905:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7910:2:7",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7846:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7846:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7839:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8011:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c20202affc11a053167ee51e7a4f251d2310022a958c58aed2d1a010bbd93abf",
																	"nodeType": "YulIdentifier",
																	"src": "7922:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7922:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7922:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8024:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8035:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8040:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8031:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8031:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8024:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c20202affc11a053167ee51e7a4f251d2310022a958c58aed2d1a010bbd93abf_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7817:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7825:3:7",
														"type": ""
													}
												],
												"src": "7683:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8226:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8236:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8248:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8259:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8244:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8244:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8236:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8283:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8294:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8279:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8279:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8302:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8308:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8298:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8298:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8272:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8272:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8272:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8328:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8462:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c20202affc11a053167ee51e7a4f251d2310022a958c58aed2d1a010bbd93abf_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8336:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8336:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8328:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c20202affc11a053167ee51e7a4f251d2310022a958c58aed2d1a010bbd93abf__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8206:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8221:4:7",
														"type": ""
													}
												],
												"src": "8055:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8545:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8562:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8585:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "8567:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8567:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8555:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8555:37:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8555:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8533:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8540:3:7",
														"type": ""
													}
												],
												"src": "8480:118:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8758:288:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8768:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8780:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8791:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8776:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8776:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8768:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8848:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8861:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8872:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8857:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8857:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8804:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8804:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8804:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8929:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8942:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8953:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8938:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8938:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8885:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8885:72:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8885:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "9011:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9024:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9035:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9020:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9020:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8967:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8967:72:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8967:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8714:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8726:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8734:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8742:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8753:4:7",
														"type": ""
													}
												],
												"src": "8604:442:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9115:80:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9125:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "9140:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9134:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9134:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "9125:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9183:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "9156:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9156:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9156:33:7"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "9093:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9101:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9109:5:7",
														"type": ""
													}
												],
												"src": "9052:143:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9278:274:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9324:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "9326:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9326:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9326:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9299:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9308:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9295:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9295:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9320:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9291:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9291:32:7"
															},
															"nodeType": "YulIf",
															"src": "9288:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "9417:128:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9432:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9446:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9436:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9461:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9507:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9518:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9503:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9503:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9527:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "9471:31:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9471:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "9461:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9248:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9259:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9271:6:7",
														"type": ""
													}
												],
												"src": "9201:351:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9664:74:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9686:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9694:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9682:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9682:14:7"
																	},
																	{
																		"hexValue": "4e46545374616b696e673a206e6f74206f776e6572206f6620746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9698:32:7",
																		"type": "",
																		"value": "NFTStaking: not owner of token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9675:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9675:56:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9675:56:7"
														}
													]
												},
												"name": "store_literal_in_memory_f5e038f4f16f4dc36fdb6877e7275cbf792a1fe12953bce11e9f7522676be8e2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9656:6:7",
														"type": ""
													}
												],
												"src": "9558:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9890:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9900:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9966:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9971:2:7",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9907:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9907:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9900:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10072:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f5e038f4f16f4dc36fdb6877e7275cbf792a1fe12953bce11e9f7522676be8e2",
																	"nodeType": "YulIdentifier",
																	"src": "9983:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9983:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9983:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10085:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10096:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10101:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10092:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10092:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10085:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f5e038f4f16f4dc36fdb6877e7275cbf792a1fe12953bce11e9f7522676be8e2_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9878:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9886:3:7",
														"type": ""
													}
												],
												"src": "9744:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10287:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10297:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10309:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10320:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10305:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10305:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10297:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10344:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10355:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10340:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10340:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10363:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10369:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10359:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10359:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10333:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10333:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10333:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10389:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10523:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f5e038f4f16f4dc36fdb6877e7275cbf792a1fe12953bce11e9f7522676be8e2_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10397:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10397:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10389:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f5e038f4f16f4dc36fdb6877e7275cbf792a1fe12953bce11e9f7522676be8e2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10267:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10282:4:7",
														"type": ""
													}
												],
												"src": "10116:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10647:70:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10669:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10677:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10665:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10665:14:7"
																	},
																	{
																		"hexValue": "4e46545374616b696e673a20616c7265616479207374616b6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10681:28:7",
																		"type": "",
																		"value": "NFTStaking: already staked"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10658:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10658:52:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10658:52:7"
														}
													]
												},
												"name": "store_literal_in_memory_cbaaa21b7b3072888a2a4c2de3f36c77c8cd20938ab707224ca7407a4001377b",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10639:6:7",
														"type": ""
													}
												],
												"src": "10541:176:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10869:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10879:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10945:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10950:2:7",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10886:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10886:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10879:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11051:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cbaaa21b7b3072888a2a4c2de3f36c77c8cd20938ab707224ca7407a4001377b",
																	"nodeType": "YulIdentifier",
																	"src": "10962:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10962:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10962:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11064:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11075:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11080:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11071:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11071:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11064:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cbaaa21b7b3072888a2a4c2de3f36c77c8cd20938ab707224ca7407a4001377b_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10857:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10865:3:7",
														"type": ""
													}
												],
												"src": "10723:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11266:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11276:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11288:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11299:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11284:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11284:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11276:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11323:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11334:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11319:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11319:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11342:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11348:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11338:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11338:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11312:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11312:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11312:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11368:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11502:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cbaaa21b7b3072888a2a4c2de3f36c77c8cd20938ab707224ca7407a4001377b_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11376:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11376:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11368:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cbaaa21b7b3072888a2a4c2de3f36c77c8cd20938ab707224ca7407a4001377b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11246:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11261:4:7",
														"type": ""
													}
												],
												"src": "11095:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11626:68:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11648:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11656:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11644:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11644:14:7"
																	},
																	{
																		"hexValue": "4e46545374616b696e673a206e6f7420617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11660:26:7",
																		"type": "",
																		"value": "NFTStaking: not approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11637:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11637:50:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11637:50:7"
														}
													]
												},
												"name": "store_literal_in_memory_f1a367140edd5e86c987d3809db2b9eeb2fcdfa2ec04d1a7436f0d79aa2b6aa6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11618:6:7",
														"type": ""
													}
												],
												"src": "11520:174:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11846:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11856:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11922:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11927:2:7",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11863:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11863:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11856:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12028:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f1a367140edd5e86c987d3809db2b9eeb2fcdfa2ec04d1a7436f0d79aa2b6aa6",
																	"nodeType": "YulIdentifier",
																	"src": "11939:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11939:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11939:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12041:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12052:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12057:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12048:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12048:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12041:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f1a367140edd5e86c987d3809db2b9eeb2fcdfa2ec04d1a7436f0d79aa2b6aa6_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11834:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11842:3:7",
														"type": ""
													}
												],
												"src": "11700:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12243:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12253:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12265:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12276:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12261:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12261:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12253:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12300:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12311:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12296:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12296:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12319:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12325:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12315:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12315:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12289:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12289:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12289:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12345:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12479:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f1a367140edd5e86c987d3809db2b9eeb2fcdfa2ec04d1a7436f0d79aa2b6aa6_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12353:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12353:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12345:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f1a367140edd5e86c987d3809db2b9eeb2fcdfa2ec04d1a7436f0d79aa2b6aa6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12223:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12238:4:7",
														"type": ""
													}
												],
												"src": "12072:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12603:75:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12625:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12633:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12621:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12621:14:7"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12637:33:7",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12614:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12614:57:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12614:57:7"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12595:6:7",
														"type": ""
													}
												],
												"src": "12497:181:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12830:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12840:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12906:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12911:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12847:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12847:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12840:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13012:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nodeType": "YulIdentifier",
																	"src": "12923:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12923:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12923:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13025:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13036:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13041:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13032:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13032:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13025:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12818:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12826:3:7",
														"type": ""
													}
												],
												"src": "12684:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13227:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13237:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13249:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13260:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13245:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13245:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13237:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13284:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13295:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13280:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13280:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13303:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13309:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13299:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13299:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13273:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13273:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13273:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13329:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13463:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13337:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13337:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13329:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13207:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13222:4:7",
														"type": ""
													}
												],
												"src": "13056:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13509:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13526:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13529:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13519:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13519:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13519:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13623:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13626:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13616:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13616:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13616:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13647:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13650:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13640:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13640:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13640:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "13481:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13711:147:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13721:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13744:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13726:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13726:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "13721:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13755:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13778:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13760:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13760:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "13755:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13789:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13800:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13803:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13796:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13796:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "13789:3:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13829:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "13831:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13831:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13831:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13821:1:7"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "13824:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "13818:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13818:10:7"
															},
															"nodeType": "YulIf",
															"src": "13815:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "13698:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "13701:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "13707:3:7",
														"type": ""
													}
												],
												"src": "13667:191:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13909:149:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13919:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13942:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13924:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13924:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "13919:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13953:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13976:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13958:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13958:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "13953:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13987:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13999:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14002:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "13995:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13995:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "13987:4:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14029:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "14031:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14031:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14031:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "14020:4:7"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14026:1:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14017:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14017:11:7"
															},
															"nodeType": "YulIf",
															"src": "14014:37:7"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "13895:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "13898:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "13904:4:7",
														"type": ""
													}
												],
												"src": "13864:194:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14112:362:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14122:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14145:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "14127:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14127:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "14122:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14156:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14179:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "14161:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14161:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "14156:1:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14190:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14213:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14216:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "14209:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14209:9:7"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "14194:11:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14227:41:7",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "14256:11:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "14238:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14238:30:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "14227:7:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14445:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "14447:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14447:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14447:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "14378:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "14371:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14371:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "14401:1:7"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "14408:7:7"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "14417:1:7"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "14404:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "14404:15:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "14398:2:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14398:22:7"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "14351:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14351:83:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14331:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14331:113:7"
															},
															"nodeType": "YulIf",
															"src": "14328:139:7"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "14095:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "14098:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "14104:7:7",
														"type": ""
													}
												],
												"src": "14064:410:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14508:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14525:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14528:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14518:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14518:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14518:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14622:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14625:4:7",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14615:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14615:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14615:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14646:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14649:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "14639:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14639:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14639:15:7"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "14480:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14708:143:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14718:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14741:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "14723:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14723:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "14718:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14752:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14775:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "14757:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14757:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "14752:1:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14799:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "14801:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14801:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14801:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14796:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14789:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14789:9:7"
															},
															"nodeType": "YulIf",
															"src": "14786:35:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14831:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14840:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14843:1:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "14836:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14836:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "14831:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "14697:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "14700:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "14706:1:7",
														"type": ""
													}
												],
												"src": "14666:185:7"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3, value4 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC721_$169_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC721_$169_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC721_$169_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC721_$169__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC721_$169_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_57ace88f6b29b408b5264955a1a63df689cdbd5dead36262afdf785bc4acc8d9(memPtr) {\n\n        mstore(add(memPtr, 0), \"NFTStaking: not staked\")\n\n    }\n\n    function abi_encode_t_stringliteral_57ace88f6b29b408b5264955a1a63df689cdbd5dead36262afdf785bc4acc8d9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_57ace88f6b29b408b5264955a1a63df689cdbd5dead36262afdf785bc4acc8d9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_57ace88f6b29b408b5264955a1a63df689cdbd5dead36262afdf785bc4acc8d9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_57ace88f6b29b408b5264955a1a63df689cdbd5dead36262afdf785bc4acc8d9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c20202affc11a053167ee51e7a4f251d2310022a958c58aed2d1a010bbd93abf(memPtr) {\n\n        mstore(add(memPtr, 0), \"NFTStaking: staking time not rea\")\n\n        mstore(add(memPtr, 32), \"ched\")\n\n    }\n\n    function abi_encode_t_stringliteral_c20202affc11a053167ee51e7a4f251d2310022a958c58aed2d1a010bbd93abf_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c20202affc11a053167ee51e7a4f251d2310022a958c58aed2d1a010bbd93abf(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c20202affc11a053167ee51e7a4f251d2310022a958c58aed2d1a010bbd93abf__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c20202affc11a053167ee51e7a4f251d2310022a958c58aed2d1a010bbd93abf_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_f5e038f4f16f4dc36fdb6877e7275cbf792a1fe12953bce11e9f7522676be8e2(memPtr) {\n\n        mstore(add(memPtr, 0), \"NFTStaking: not owner of token\")\n\n    }\n\n    function abi_encode_t_stringliteral_f5e038f4f16f4dc36fdb6877e7275cbf792a1fe12953bce11e9f7522676be8e2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_f5e038f4f16f4dc36fdb6877e7275cbf792a1fe12953bce11e9f7522676be8e2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f5e038f4f16f4dc36fdb6877e7275cbf792a1fe12953bce11e9f7522676be8e2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f5e038f4f16f4dc36fdb6877e7275cbf792a1fe12953bce11e9f7522676be8e2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_cbaaa21b7b3072888a2a4c2de3f36c77c8cd20938ab707224ca7407a4001377b(memPtr) {\n\n        mstore(add(memPtr, 0), \"NFTStaking: already staked\")\n\n    }\n\n    function abi_encode_t_stringliteral_cbaaa21b7b3072888a2a4c2de3f36c77c8cd20938ab707224ca7407a4001377b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_cbaaa21b7b3072888a2a4c2de3f36c77c8cd20938ab707224ca7407a4001377b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cbaaa21b7b3072888a2a4c2de3f36c77c8cd20938ab707224ca7407a4001377b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cbaaa21b7b3072888a2a4c2de3f36c77c8cd20938ab707224ca7407a4001377b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_f1a367140edd5e86c987d3809db2b9eeb2fcdfa2ec04d1a7436f0d79aa2b6aa6(memPtr) {\n\n        mstore(add(memPtr, 0), \"NFTStaking: not approved\")\n\n    }\n\n    function abi_encode_t_stringliteral_f1a367140edd5e86c987d3809db2b9eeb2fcdfa2ec04d1a7436f0d79aa2b6aa6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_f1a367140edd5e86c987d3809db2b9eeb2fcdfa2ec04d1a7436f0d79aa2b6aa6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f1a367140edd5e86c987d3809db2b9eeb2fcdfa2ec04d1a7436f0d79aa2b6aa6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f1a367140edd5e86c987d3809db2b9eeb2fcdfa2ec04d1a7436f0d79aa2b6aa6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100935760003560e01c80632e0f2625116100665780632e0f26251461012357806347ccca02146101415780635997bb371461015f578063a694fc3a1461017d578063b88a802f1461019957610093565b806302657ad014610098578063150b7a02146100b657806316934fc4146100e65780632def662014610119575b600080fd5b6100a06101a3565b6040516100ad9190610b23565b60405180910390f35b6100d060048036038101906100cb9190610c37565b6101aa565b6040516100dd9190610cfa565b60405180910390f35b61010060048036038101906100fb9190610d15565b6101bf565b6040516101109493929190610d5d565b60405180910390f35b6101216101fc565b005b61012b610464565b6040516101389190610b23565b60405180910390f35b610149610469565b6040516101569190610e01565b60405180910390f35b61016761048f565b6040516101749190610b23565b60405180910390f35b61019760048036038101906101929190610e1c565b610494565b005b6101a16108cd565b005b62278d0081565b600063150b7a0260e01b905095945050505050565b60026020528060005260406000206000915090508060000154908060010154908060020154908060030160009054906101000a900460ff16905084565b6102046109df565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060030160009054906101000a900460ff16610298576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028f90610ea6565b60405180910390fd5b6102b262278d008260010154610a2e90919063ffffffff16565b4210156102f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102eb90610f38565b60405180910390fd5b60006103003383610a44565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342842e0e303385600001546040518463ffffffff1660e01b815260040161036593929190610f67565b600060405180830381600087803b15801561037f57600080fd5b505af1158015610393573d6000803e3d6000fd5b50505050600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600080820160009055600182016000905560028201600090556003820160006101000a81549060ff0219169055505081600001543373ffffffffffffffffffffffffffffffffffffffff167f7fc4727e062e336010f2c282598ef5f14facb3de68cf8195c2f23e1454b2b74e836040516104509190610b23565b60405180910390a35050610462610abe565b565b606481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600a81565b61049c6109df565b3373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e836040518263ffffffff1660e01b815260040161050e9190610b23565b602060405180830381865afa15801561052b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054f9190610fb3565b73ffffffffffffffffffffffffffffffffffffffff16146105a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059c9061102c565b60405180910390fd5b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff1615610635576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062c90611098565b60405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663081812fc836040518263ffffffff1660e01b81526004016106a79190610b23565b602060405180830381865afa1580156106c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e89190610fb3565b73ffffffffffffffffffffffffffffffffffffffff161461073e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073590611104565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342842e0e3330846040518463ffffffff1660e01b815260040161079d93929190610f67565b600060405180830381600087803b1580156107b757600080fd5b505af11580156107cb573d6000803e3d6000fd5b50505050604051806080016040528082815260200142815260200142815260200160011515815250600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000155602082015181600101556040820151816002015560608201518160030160006101000a81548160ff021916908315150217905550905050803373ffffffffffffffffffffffffffffffffffffffff167f1449c6dd7851abc30abf37f57715f492010519147cc2652fbc38202c18a6ee90426040516108ba9190610b23565b60405180910390a36108ca610abe565b50565b6108d56109df565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060030160009054906101000a900460ff16610969576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096090610ea6565b60405180910390fd5b60006109753383610a44565b905042826002018190555081600001543373ffffffffffffffffffffffffffffffffffffffff167ff01da32686223933d8a18a391060918c7f11a3648639edd87ae013e2e2731743836040516109cb9190610b23565b60405180910390a350506109dd610abe565b565b600260005403610a24576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1b90611170565b60405180910390fd5b6002600081905550565b60008183610a3c91906111bf565b905092915050565b600080610a5e836002015442610ac890919063ffffffff16565b90506000610ab16064610aa362278d00610a956064610a87600a89610ade90919063ffffffff16565b610ade90919063ffffffff16565b610af490919063ffffffff16565b610af490919063ffffffff16565b9050809250505092915050565b6001600081905550565b60008183610ad691906111f3565b905092915050565b60008183610aec9190611227565b905092915050565b60008183610b029190611298565b905092915050565b6000819050919050565b610b1d81610b0a565b82525050565b6000602082019050610b386000830184610b14565b92915050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b7382610b48565b9050919050565b610b8381610b68565b8114610b8e57600080fd5b50565b600081359050610ba081610b7a565b92915050565b610baf81610b0a565b8114610bba57600080fd5b50565b600081359050610bcc81610ba6565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610bf757610bf6610bd2565b5b8235905067ffffffffffffffff811115610c1457610c13610bd7565b5b602083019150836001820283011115610c3057610c2f610bdc565b5b9250929050565b600080600080600060808688031215610c5357610c52610b3e565b5b6000610c6188828901610b91565b9550506020610c7288828901610b91565b9450506040610c8388828901610bbd565b935050606086013567ffffffffffffffff811115610ca457610ca3610b43565b5b610cb088828901610be1565b92509250509295509295909350565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610cf481610cbf565b82525050565b6000602082019050610d0f6000830184610ceb565b92915050565b600060208284031215610d2b57610d2a610b3e565b5b6000610d3984828501610b91565b91505092915050565b60008115159050919050565b610d5781610d42565b82525050565b6000608082019050610d726000830187610b14565b610d7f6020830186610b14565b610d8c6040830185610b14565b610d996060830184610d4e565b95945050505050565b6000819050919050565b6000610dc7610dc2610dbd84610b48565b610da2565b610b48565b9050919050565b6000610dd982610dac565b9050919050565b6000610deb82610dce565b9050919050565b610dfb81610de0565b82525050565b6000602082019050610e166000830184610df2565b92915050565b600060208284031215610e3257610e31610b3e565b5b6000610e4084828501610bbd565b91505092915050565b600082825260208201905092915050565b7f4e46545374616b696e673a206e6f74207374616b656400000000000000000000600082015250565b6000610e90601683610e49565b9150610e9b82610e5a565b602082019050919050565b60006020820190508181036000830152610ebf81610e83565b9050919050565b7f4e46545374616b696e673a207374616b696e672074696d65206e6f742072656160008201527f6368656400000000000000000000000000000000000000000000000000000000602082015250565b6000610f22602483610e49565b9150610f2d82610ec6565b604082019050919050565b60006020820190508181036000830152610f5181610f15565b9050919050565b610f6181610b68565b82525050565b6000606082019050610f7c6000830186610f58565b610f896020830185610f58565b610f966040830184610b14565b949350505050565b600081519050610fad81610b7a565b92915050565b600060208284031215610fc957610fc8610b3e565b5b6000610fd784828501610f9e565b91505092915050565b7f4e46545374616b696e673a206e6f74206f776e6572206f6620746f6b656e0000600082015250565b6000611016601e83610e49565b915061102182610fe0565b602082019050919050565b6000602082019050818103600083015261104581611009565b9050919050565b7f4e46545374616b696e673a20616c7265616479207374616b6564000000000000600082015250565b6000611082601a83610e49565b915061108d8261104c565b602082019050919050565b600060208201905081810360008301526110b181611075565b9050919050565b7f4e46545374616b696e673a206e6f7420617070726f7665640000000000000000600082015250565b60006110ee601883610e49565b91506110f9826110b8565b602082019050919050565b6000602082019050818103600083015261111d816110e1565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b600061115a601f83610e49565b915061116582611124565b602082019050919050565b600060208201905081810360008301526111898161114d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006111ca82610b0a565b91506111d583610b0a565b92508282019050808211156111ed576111ec611190565b5b92915050565b60006111fe82610b0a565b915061120983610b0a565b925082820390508181111561122157611220611190565b5b92915050565b600061123282610b0a565b915061123d83610b0a565b925082820261124b81610b0a565b9150828204841483151761126257611261611190565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006112a382610b0a565b91506112ae83610b0a565b9250826112be576112bd611269565b5b82820490509291505056fea264697066735822122038fe381898f4b411411f8cb30b1e0205aeb68d7377e1424c0d1ebe8b9d05301d64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2E0F2625 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x2E0F2625 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x47CCCA02 EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x5997BB37 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0xB88A802F EQ PUSH2 0x199 JUMPI PUSH2 0x93 JUMP JUMPDEST DUP1 PUSH4 0x2657AD0 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x16934FC4 EQ PUSH2 0xE6 JUMPI DUP1 PUSH4 0x2DEF6620 EQ PUSH2 0x119 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x1A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD SWAP2 SWAP1 PUSH2 0xB23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCB SWAP2 SWAP1 PUSH2 0xC37 JUMP JUMPDEST PUSH2 0x1AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDD SWAP2 SWAP1 PUSH2 0xCFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x100 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFB SWAP2 SWAP1 PUSH2 0xD15 JUMP JUMPDEST PUSH2 0x1BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x110 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x121 PUSH2 0x1FC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x12B PUSH2 0x464 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x138 SWAP2 SWAP1 PUSH2 0xB23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x149 PUSH2 0x469 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x156 SWAP2 SWAP1 PUSH2 0xE01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x167 PUSH2 0x48F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x174 SWAP2 SWAP1 PUSH2 0xB23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x197 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x192 SWAP2 SWAP1 PUSH2 0xE1C JUMP JUMPDEST PUSH2 0x494 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A1 PUSH2 0x8CD JUMP JUMPDEST STOP JUMPDEST PUSH3 0x278D00 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP5 JUMP JUMPDEST PUSH2 0x204 PUSH2 0x9DF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x298 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28F SWAP1 PUSH2 0xEA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2B2 PUSH3 0x278D00 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0xA2E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x2F4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2EB SWAP1 PUSH2 0xF38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x300 CALLER DUP4 PUSH2 0xA44 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42842E0E ADDRESS CALLER DUP6 PUSH1 0x0 ADD SLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x365 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF67 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x37F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x393 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE POP POP DUP2 PUSH1 0x0 ADD SLOAD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7FC4727E062E336010F2C282598EF5F14FACB3DE68CF8195C2F23E1454B2B74E DUP4 PUSH1 0x40 MLOAD PUSH2 0x450 SWAP2 SWAP1 PUSH2 0xB23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH2 0x462 PUSH2 0xABE JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x64 DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xA DUP2 JUMP JUMPDEST PUSH2 0x49C PUSH2 0x9DF JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50E SWAP2 SWAP1 PUSH2 0xB23 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x52B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x54F SWAP2 SWAP1 PUSH2 0xFB3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x59C SWAP1 PUSH2 0x102C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x635 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x62C SWAP1 PUSH2 0x1098 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x81812FC DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A7 SWAP2 SWAP1 PUSH2 0xB23 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6C4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6E8 SWAP2 SWAP1 PUSH2 0xFB3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x73E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x735 SWAP1 PUSH2 0x1104 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42842E0E CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x79D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF67 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7CB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1449C6DD7851ABC30ABF37F57715F492010519147CC2652FBC38202C18A6EE90 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x8BA SWAP2 SWAP1 PUSH2 0xB23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x8CA PUSH2 0xABE JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x8D5 PUSH2 0x9DF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x969 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x960 SWAP1 PUSH2 0xEA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x975 CALLER DUP4 PUSH2 0xA44 JUMP JUMPDEST SWAP1 POP TIMESTAMP DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 ADD SLOAD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF01DA32686223933D8A18A391060918C7F11A3648639EDD87AE013E2E2731743 DUP4 PUSH1 0x40 MLOAD PUSH2 0x9CB SWAP2 SWAP1 PUSH2 0xB23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH2 0x9DD PUSH2 0xABE JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0xA24 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA1B SWAP1 PUSH2 0x1170 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xA3C SWAP2 SWAP1 PUSH2 0x11BF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xA5E DUP4 PUSH1 0x2 ADD SLOAD TIMESTAMP PUSH2 0xAC8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xAB1 PUSH1 0x64 PUSH2 0xAA3 PUSH3 0x278D00 PUSH2 0xA95 PUSH1 0x64 PUSH2 0xA87 PUSH1 0xA DUP10 PUSH2 0xADE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xADE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xAF4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xAF4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xAD6 SWAP2 SWAP1 PUSH2 0x11F3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xAEC SWAP2 SWAP1 PUSH2 0x1227 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xB02 SWAP2 SWAP1 PUSH2 0x1298 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB1D DUP2 PUSH2 0xB0A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB38 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB14 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB73 DUP3 PUSH2 0xB48 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB83 DUP2 PUSH2 0xB68 JUMP JUMPDEST DUP2 EQ PUSH2 0xB8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBA0 DUP2 PUSH2 0xB7A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBAF DUP2 PUSH2 0xB0A JUMP JUMPDEST DUP2 EQ PUSH2 0xBBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBCC DUP2 PUSH2 0xBA6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xBF7 JUMPI PUSH2 0xBF6 PUSH2 0xBD2 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC14 JUMPI PUSH2 0xC13 PUSH2 0xBD7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xC30 JUMPI PUSH2 0xC2F PUSH2 0xBDC JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xC53 JUMPI PUSH2 0xC52 PUSH2 0xB3E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC61 DUP9 DUP3 DUP10 ADD PUSH2 0xB91 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0xC72 DUP9 DUP3 DUP10 ADD PUSH2 0xB91 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0xC83 DUP9 DUP3 DUP10 ADD PUSH2 0xBBD JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCA4 JUMPI PUSH2 0xCA3 PUSH2 0xB43 JUMP JUMPDEST JUMPDEST PUSH2 0xCB0 DUP9 DUP3 DUP10 ADD PUSH2 0xBE1 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCF4 DUP2 PUSH2 0xCBF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD0F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCEB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD2B JUMPI PUSH2 0xD2A PUSH2 0xB3E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD39 DUP5 DUP3 DUP6 ADD PUSH2 0xB91 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD57 DUP2 PUSH2 0xD42 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0xD72 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0xB14 JUMP JUMPDEST PUSH2 0xD7F PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0xB14 JUMP JUMPDEST PUSH2 0xD8C PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xB14 JUMP JUMPDEST PUSH2 0xD99 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0xD4E JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDC7 PUSH2 0xDC2 PUSH2 0xDBD DUP5 PUSH2 0xB48 JUMP JUMPDEST PUSH2 0xDA2 JUMP JUMPDEST PUSH2 0xB48 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDD9 DUP3 PUSH2 0xDAC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDEB DUP3 PUSH2 0xDCE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDFB DUP2 PUSH2 0xDE0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE16 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDF2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE32 JUMPI PUSH2 0xE31 PUSH2 0xB3E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE40 DUP5 DUP3 DUP6 ADD PUSH2 0xBBD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E46545374616B696E673A206E6F74207374616B656400000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE90 PUSH1 0x16 DUP4 PUSH2 0xE49 JUMP JUMPDEST SWAP2 POP PUSH2 0xE9B DUP3 PUSH2 0xE5A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEBF DUP2 PUSH2 0xE83 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E46545374616B696E673A207374616B696E672074696D65206E6F7420726561 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6368656400000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF22 PUSH1 0x24 DUP4 PUSH2 0xE49 JUMP JUMPDEST SWAP2 POP PUSH2 0xF2D DUP3 PUSH2 0xEC6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF51 DUP2 PUSH2 0xF15 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF61 DUP2 PUSH2 0xB68 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xF7C PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xF58 JUMP JUMPDEST PUSH2 0xF89 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xF58 JUMP JUMPDEST PUSH2 0xF96 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xB14 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xFAD DUP2 PUSH2 0xB7A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFC9 JUMPI PUSH2 0xFC8 PUSH2 0xB3E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFD7 DUP5 DUP3 DUP6 ADD PUSH2 0xF9E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E46545374616B696E673A206E6F74206F776E6572206F6620746F6B656E0000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1016 PUSH1 0x1E DUP4 PUSH2 0xE49 JUMP JUMPDEST SWAP2 POP PUSH2 0x1021 DUP3 PUSH2 0xFE0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1045 DUP2 PUSH2 0x1009 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E46545374616B696E673A20616C7265616479207374616B6564000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1082 PUSH1 0x1A DUP4 PUSH2 0xE49 JUMP JUMPDEST SWAP2 POP PUSH2 0x108D DUP3 PUSH2 0x104C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10B1 DUP2 PUSH2 0x1075 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E46545374616B696E673A206E6F7420617070726F7665640000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10EE PUSH1 0x18 DUP4 PUSH2 0xE49 JUMP JUMPDEST SWAP2 POP PUSH2 0x10F9 DUP3 PUSH2 0x10B8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x111D DUP2 PUSH2 0x10E1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x115A PUSH1 0x1F DUP4 PUSH2 0xE49 JUMP JUMPDEST SWAP2 POP PUSH2 0x1165 DUP3 PUSH2 0x1124 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1189 DUP2 PUSH2 0x114D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x11CA DUP3 PUSH2 0xB0A JUMP JUMPDEST SWAP2 POP PUSH2 0x11D5 DUP4 PUSH2 0xB0A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x11ED JUMPI PUSH2 0x11EC PUSH2 0x1190 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11FE DUP3 PUSH2 0xB0A JUMP JUMPDEST SWAP2 POP PUSH2 0x1209 DUP4 PUSH2 0xB0A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1221 JUMPI PUSH2 0x1220 PUSH2 0x1190 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1232 DUP3 PUSH2 0xB0A JUMP JUMPDEST SWAP2 POP PUSH2 0x123D DUP4 PUSH2 0xB0A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x124B DUP2 PUSH2 0xB0A JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1262 JUMPI PUSH2 0x1261 PUSH2 0x1190 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x12A3 DUP3 PUSH2 0xB0A JUMP JUMPDEST SWAP2 POP PUSH2 0x12AE DUP4 PUSH2 0xB0A JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x12BE JUMPI PUSH2 0x12BD PUSH2 0x1269 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODESIZE INVALID CODESIZE XOR SWAP9 DELEGATECALL 0xB4 GT COINBASE 0x1F DUP13 0xB3 SIGNEXTEND 0x1E MUL SDIV 0xAE 0xB6 DUP14 PUSH20 0x77E1424C0D1EBE8B9D05301D64736F6C63430008 SLT STOP CALLER ",
							"sourceMap": "357:2738:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;483:54;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2892:201;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;798:39;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;1729:503;;;:::i;:::-;;596:38;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;774:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;543:40;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1186:537;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2238:334;;;:::i;:::-;;483:54;530:7;483:54;:::o;2892:201::-;3031:6;3056:30;;;3049:37;;2892:201;;;;;;;:::o;798:39::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1729:503::-;2261:21:0;:19;:21::i;:::-;1780:19:6::1;1802:6;:18;1809:10;1802:18;;;;;;;;;;;;;;;1780:40;;1838:5;:12;;;;;;;;;;;;1830:47;;;;;;;;;;;;:::i;:::-;;;;;;;;;1914:42;530:7;1914:5;:16;;;:20;;:42;;;;:::i;:::-;1895:15;:61;;1887:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;2008:14;2025:34;2041:10;2053:5;2025:15;:34::i;:::-;2008:51;;2069:3;;;;;;;;;;;:20;;;2098:4;2105:10;2117:5;:13;;;2069:62;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;2148:6;:18;2155:10;2148:18;;;;;;;;;;;;;;;;2141:25:::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2203:5;:13;;;2191:10;2182:43;;;2218:6;2182:43;;;;;;:::i;:::-;;;;;;;;1770:462;;2303:20:0::0;:18;:20::i;:::-;1729:503:6:o;596:38::-;631:3;596:38;:::o;774:18::-;;;;;;;;;;;;;:::o;543:40::-;581:2;543:40;:::o;1186:537::-;2261:21:0;:19;:21::i;:::-;1284:10:6::1;1259:35;;:3;;;;;;;;;;;:11;;;1271:8;1259:21;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:35;;;1251:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;1348:6;:18;1355:10;1348:18;;;;;;;;;;;;;;;:25;;;;;;;;;;;;1347:26;1339:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;1459:4;1422:42;;:3;;;;;;;;;;;:15;;;1438:8;1422:25;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:42;;;1414:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;1512:3;;;;;;;;;;;:20;;;1533:10;1553:4;1560:8;1512:57;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1600:55;;;;;;;;1606:8;1600:55;;;;1616:15;1600:55;;;;1633:15;1600:55;;;;1650:4;1600:55;;;;::::0;1579:6:::1;:18;1586:10;1579:18;;;;;;;;;;;;;;;:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1690:8;1678:10;1671:45;;;1700:15;1671:45;;;;;;:::i;:::-;;;;;;;;2303:20:0::0;:18;:20::i;:::-;1186:537:6;:::o;2238:334::-;2261:21:0;:19;:21::i;:::-;2293:19:6::1;2315:6;:18;2322:10;2315:18;;;;;;;;;;;;;;;2293:40;;2351:5;:12;;;;;;;;;;;;2343:47;;;;;;;;;;;;:::i;:::-;;;;;;;;;2401:14;2418:34;2434:10;2446:5;2418:15;:34::i;:::-;2401:51;;2486:15;2462:5;:21;;:39;;;;2543:5;:13;;;2531:10;2517:48;;;2558:6;2517:48;;;;;;:::i;:::-;;;;;;;;2283:289;;2303:20:0::0;:18;:20::i;:::-;2238:334:6:o;2336:287:0:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;2755:96:5:-;2813:7;2843:1;2839;:5;;;;:::i;:::-;2832:12;;2755:96;;;;:::o;2578:308:6:-;2664:7;2683:18;2704:43;2724:6;:22;;;2704:15;:19;;:43;;;;:::i;:::-;2683:64;;2757:14;2774:81;631:3;2774:67;530:7;2774:41;631:3;2774:27;581:2;2774:10;:14;;:27;;;;:::i;:::-;:31;;:41;;;;:::i;:::-;:45;;:67;;;;:::i;:::-;:71;;:81;;;;:::i;:::-;2757:98;;2873:6;2866:13;;;;2578:308;;;;:::o;2629:209:0:-;1716:1;2809:7;:22;;;;2629:209::o;3122:96:5:-;3180:7;3210:1;3206;:5;;;;:::i;:::-;3199:12;;3122:96;;;;:::o;3465:::-;3523:7;3553:1;3549;:5;;;;:::i;:::-;3542:12;;3465:96;;;;:::o;3850:::-;3908:7;3938:1;3934;:5;;;;:::i;:::-;3927:12;;3850:96;;;;:::o;7:77:7:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;646:117;755:1;752;745:12;769:126;806:7;846:42;839:5;835:54;824:65;;769:126;;;:::o;901:96::-;938:7;967:24;985:5;967:24;:::i;:::-;956:35;;901:96;;;:::o;1003:122::-;1076:24;1094:5;1076:24;:::i;:::-;1069:5;1066:35;1056:63;;1115:1;1112;1105:12;1056:63;1003:122;:::o;1131:139::-;1177:5;1215:6;1202:20;1193:29;;1231:33;1258:5;1231:33;:::i;:::-;1131:139;;;;:::o;1276:122::-;1349:24;1367:5;1349:24;:::i;:::-;1342:5;1339:35;1329:63;;1388:1;1385;1378:12;1329:63;1276:122;:::o;1404:139::-;1450:5;1488:6;1475:20;1466:29;;1504:33;1531:5;1504:33;:::i;:::-;1404:139;;;;:::o;1549:117::-;1658:1;1655;1648:12;1672:117;1781:1;1778;1771:12;1795:117;1904:1;1901;1894:12;1931:552;1988:8;1998:6;2048:3;2041:4;2033:6;2029:17;2025:27;2015:122;;2056:79;;:::i;:::-;2015:122;2169:6;2156:20;2146:30;;2199:18;2191:6;2188:30;2185:117;;;2221:79;;:::i;:::-;2185:117;2335:4;2327:6;2323:17;2311:29;;2389:3;2381:4;2373:6;2369:17;2359:8;2355:32;2352:41;2349:128;;;2396:79;;:::i;:::-;2349:128;1931:552;;;;;:::o;2489:963::-;2586:6;2594;2602;2610;2618;2667:3;2655:9;2646:7;2642:23;2638:33;2635:120;;;2674:79;;:::i;:::-;2635:120;2794:1;2819:53;2864:7;2855:6;2844:9;2840:22;2819:53;:::i;:::-;2809:63;;2765:117;2921:2;2947:53;2992:7;2983:6;2972:9;2968:22;2947:53;:::i;:::-;2937:63;;2892:118;3049:2;3075:53;3120:7;3111:6;3100:9;3096:22;3075:53;:::i;:::-;3065:63;;3020:118;3205:2;3194:9;3190:18;3177:32;3236:18;3228:6;3225:30;3222:117;;;3258:79;;:::i;:::-;3222:117;3371:64;3427:7;3418:6;3407:9;3403:22;3371:64;:::i;:::-;3353:82;;;;3148:297;2489:963;;;;;;;;:::o;3458:149::-;3494:7;3534:66;3527:5;3523:78;3512:89;;3458:149;;;:::o;3613:115::-;3698:23;3715:5;3698:23;:::i;:::-;3693:3;3686:36;3613:115;;:::o;3734:218::-;3825:4;3863:2;3852:9;3848:18;3840:26;;3876:69;3942:1;3931:9;3927:17;3918:6;3876:69;:::i;:::-;3734:218;;;;:::o;3958:329::-;4017:6;4066:2;4054:9;4045:7;4041:23;4037:32;4034:119;;;4072:79;;:::i;:::-;4034:119;4192:1;4217:53;4262:7;4253:6;4242:9;4238:22;4217:53;:::i;:::-;4207:63;;4163:117;3958:329;;;;:::o;4293:90::-;4327:7;4370:5;4363:13;4356:21;4345:32;;4293:90;;;:::o;4389:109::-;4470:21;4485:5;4470:21;:::i;:::-;4465:3;4458:34;4389:109;;:::o;4504:541::-;4675:4;4713:3;4702:9;4698:19;4690:27;;4727:71;4795:1;4784:9;4780:17;4771:6;4727:71;:::i;:::-;4808:72;4876:2;4865:9;4861:18;4852:6;4808:72;:::i;:::-;4890;4958:2;4947:9;4943:18;4934:6;4890:72;:::i;:::-;4972:66;5034:2;5023:9;5019:18;5010:6;4972:66;:::i;:::-;4504:541;;;;;;;:::o;5051:60::-;5079:3;5100:5;5093:12;;5051:60;;;:::o;5117:142::-;5167:9;5200:53;5218:34;5227:24;5245:5;5227:24;:::i;:::-;5218:34;:::i;:::-;5200:53;:::i;:::-;5187:66;;5117:142;;;:::o;5265:126::-;5315:9;5348:37;5379:5;5348:37;:::i;:::-;5335:50;;5265:126;;;:::o;5397:141::-;5462:9;5495:37;5526:5;5495:37;:::i;:::-;5482:50;;5397:141;;;:::o;5544:161::-;5646:52;5692:5;5646:52;:::i;:::-;5641:3;5634:65;5544:161;;:::o;5711:252::-;5819:4;5857:2;5846:9;5842:18;5834:26;;5870:86;5953:1;5942:9;5938:17;5929:6;5870:86;:::i;:::-;5711:252;;;;:::o;5969:329::-;6028:6;6077:2;6065:9;6056:7;6052:23;6048:32;6045:119;;;6083:79;;:::i;:::-;6045:119;6203:1;6228:53;6273:7;6264:6;6253:9;6249:22;6228:53;:::i;:::-;6218:63;;6174:117;5969:329;;;;:::o;6304:169::-;6388:11;6422:6;6417:3;6410:19;6462:4;6457:3;6453:14;6438:29;;6304:169;;;;:::o;6479:172::-;6619:24;6615:1;6607:6;6603:14;6596:48;6479:172;:::o;6657:366::-;6799:3;6820:67;6884:2;6879:3;6820:67;:::i;:::-;6813:74;;6896:93;6985:3;6896:93;:::i;:::-;7014:2;7009:3;7005:12;6998:19;;6657:366;;;:::o;7029:419::-;7195:4;7233:2;7222:9;7218:18;7210:26;;7282:9;7276:4;7272:20;7268:1;7257:9;7253:17;7246:47;7310:131;7436:4;7310:131;:::i;:::-;7302:139;;7029:419;;;:::o;7454:223::-;7594:34;7590:1;7582:6;7578:14;7571:58;7663:6;7658:2;7650:6;7646:15;7639:31;7454:223;:::o;7683:366::-;7825:3;7846:67;7910:2;7905:3;7846:67;:::i;:::-;7839:74;;7922:93;8011:3;7922:93;:::i;:::-;8040:2;8035:3;8031:12;8024:19;;7683:366;;;:::o;8055:419::-;8221:4;8259:2;8248:9;8244:18;8236:26;;8308:9;8302:4;8298:20;8294:1;8283:9;8279:17;8272:47;8336:131;8462:4;8336:131;:::i;:::-;8328:139;;8055:419;;;:::o;8480:118::-;8567:24;8585:5;8567:24;:::i;:::-;8562:3;8555:37;8480:118;;:::o;8604:442::-;8753:4;8791:2;8780:9;8776:18;8768:26;;8804:71;8872:1;8861:9;8857:17;8848:6;8804:71;:::i;:::-;8885:72;8953:2;8942:9;8938:18;8929:6;8885:72;:::i;:::-;8967;9035:2;9024:9;9020:18;9011:6;8967:72;:::i;:::-;8604:442;;;;;;:::o;9052:143::-;9109:5;9140:6;9134:13;9125:22;;9156:33;9183:5;9156:33;:::i;:::-;9052:143;;;;:::o;9201:351::-;9271:6;9320:2;9308:9;9299:7;9295:23;9291:32;9288:119;;;9326:79;;:::i;:::-;9288:119;9446:1;9471:64;9527:7;9518:6;9507:9;9503:22;9471:64;:::i;:::-;9461:74;;9417:128;9201:351;;;;:::o;9558:180::-;9698:32;9694:1;9686:6;9682:14;9675:56;9558:180;:::o;9744:366::-;9886:3;9907:67;9971:2;9966:3;9907:67;:::i;:::-;9900:74;;9983:93;10072:3;9983:93;:::i;:::-;10101:2;10096:3;10092:12;10085:19;;9744:366;;;:::o;10116:419::-;10282:4;10320:2;10309:9;10305:18;10297:26;;10369:9;10363:4;10359:20;10355:1;10344:9;10340:17;10333:47;10397:131;10523:4;10397:131;:::i;:::-;10389:139;;10116:419;;;:::o;10541:176::-;10681:28;10677:1;10669:6;10665:14;10658:52;10541:176;:::o;10723:366::-;10865:3;10886:67;10950:2;10945:3;10886:67;:::i;:::-;10879:74;;10962:93;11051:3;10962:93;:::i;:::-;11080:2;11075:3;11071:12;11064:19;;10723:366;;;:::o;11095:419::-;11261:4;11299:2;11288:9;11284:18;11276:26;;11348:9;11342:4;11338:20;11334:1;11323:9;11319:17;11312:47;11376:131;11502:4;11376:131;:::i;:::-;11368:139;;11095:419;;;:::o;11520:174::-;11660:26;11656:1;11648:6;11644:14;11637:50;11520:174;:::o;11700:366::-;11842:3;11863:67;11927:2;11922:3;11863:67;:::i;:::-;11856:74;;11939:93;12028:3;11939:93;:::i;:::-;12057:2;12052:3;12048:12;12041:19;;11700:366;;;:::o;12072:419::-;12238:4;12276:2;12265:9;12261:18;12253:26;;12325:9;12319:4;12315:20;12311:1;12300:9;12296:17;12289:47;12353:131;12479:4;12353:131;:::i;:::-;12345:139;;12072:419;;;:::o;12497:181::-;12637:33;12633:1;12625:6;12621:14;12614:57;12497:181;:::o;12684:366::-;12826:3;12847:67;12911:2;12906:3;12847:67;:::i;:::-;12840:74;;12923:93;13012:3;12923:93;:::i;:::-;13041:2;13036:3;13032:12;13025:19;;12684:366;;;:::o;13056:419::-;13222:4;13260:2;13249:9;13245:18;13237:26;;13309:9;13303:4;13299:20;13295:1;13284:9;13280:17;13273:47;13337:131;13463:4;13337:131;:::i;:::-;13329:139;;13056:419;;;:::o;13481:180::-;13529:77;13526:1;13519:88;13626:4;13623:1;13616:15;13650:4;13647:1;13640:15;13667:191;13707:3;13726:20;13744:1;13726:20;:::i;:::-;13721:25;;13760:20;13778:1;13760:20;:::i;:::-;13755:25;;13803:1;13800;13796:9;13789:16;;13824:3;13821:1;13818:10;13815:36;;;13831:18;;:::i;:::-;13815:36;13667:191;;;;:::o;13864:194::-;13904:4;13924:20;13942:1;13924:20;:::i;:::-;13919:25;;13958:20;13976:1;13958:20;:::i;:::-;13953:25;;14002:1;13999;13995:9;13987:17;;14026:1;14020:4;14017:11;14014:37;;;14031:18;;:::i;:::-;14014:37;13864:194;;;;:::o;14064:410::-;14104:7;14127:20;14145:1;14127:20;:::i;:::-;14122:25;;14161:20;14179:1;14161:20;:::i;:::-;14156:25;;14216:1;14213;14209:9;14238:30;14256:11;14238:30;:::i;:::-;14227:41;;14417:1;14408:7;14404:15;14401:1;14398:22;14378:1;14371:9;14351:83;14328:139;;14447:18;;:::i;:::-;14328:139;14112:362;14064:410;;;;:::o;14480:180::-;14528:77;14525:1;14518:88;14625:4;14622:1;14615:15;14649:4;14646:1;14639:15;14666:185;14706:1;14723:20;14741:1;14723:20;:::i;:::-;14718:25;;14757:20;14775:1;14757:20;:::i;:::-;14752:25;;14796:1;14786:35;;14801:18;;:::i;:::-;14786:35;14843:1;14840;14836:9;14831:14;;14666:185;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "972600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DECIMALS()": "329",
								"MINIMUM_STAKING_TIME()": "330",
								"REWARD_RATE()": "373",
								"claimReward()": "infinite",
								"nft()": "infinite",
								"onERC721Received(address,address,uint256,bytes)": "infinite",
								"stake(uint256)": "infinite",
								"stakes(address)": "infinite",
								"unstake()": "infinite"
							},
							"internal": {
								"calculateReward(address,struct NFTStaking.Stake storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 357,
									"end": 3095,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 357,
									"end": 3095,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 357,
									"end": 3095,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1104,
									"end": 1180,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 1104,
									"end": 1180,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1104,
									"end": 1180,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1104,
									"end": 1180,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1104,
									"end": 1180,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1104,
									"end": 1180,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1104,
									"end": 1180,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1104,
									"end": 1180,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1104,
									"end": 1180,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1104,
									"end": 1180,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1104,
									"end": 1180,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1104,
									"end": 1180,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1104,
									"end": 1180,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1104,
									"end": 1180,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1104,
									"end": 1180,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 1104,
									"end": 1180,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1104,
									"end": 1180,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1104,
									"end": 1180,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1104,
									"end": 1180,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1104,
									"end": 1180,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 1104,
									"end": 1180,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1104,
									"end": 1180,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1104,
									"end": 1180,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1104,
									"end": 1180,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1104,
									"end": 1180,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1104,
									"end": 1180,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1104,
									"end": 1180,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1104,
									"end": 1180,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1104,
									"end": 1180,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1104,
									"end": 1180,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1104,
									"end": 1180,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1104,
									"end": 1180,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1104,
									"end": 1180,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1104,
									"end": 1180,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1104,
									"end": 1180,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1161,
									"end": 1172,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1147,
									"end": 1150,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1147,
									"end": 1150,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1147,
									"end": 1173,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 1147,
									"end": 1173,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 1147,
									"end": 1173,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1147,
									"end": 1173,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 1147,
									"end": 1173,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1147,
									"end": 1173,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1147,
									"end": 1173,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1147,
									"end": 1173,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1147,
									"end": 1173,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1147,
									"end": 1173,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1147,
									"end": 1173,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1147,
									"end": 1173,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1147,
									"end": 1173,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1147,
									"end": 1173,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1147,
									"end": 1173,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1147,
									"end": 1173,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1147,
									"end": 1173,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1147,
									"end": 1173,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1104,
									"end": 1180,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 357,
									"end": 3095,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 357,
									"end": 3095,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 357,
									"end": 3095,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 357,
									"end": 3095,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 357,
									"end": 3095,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 357,
									"end": 3095,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 357,
									"end": 3095,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 357,
									"end": 3095,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 357,
									"end": 3095,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 357,
									"end": 3095,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 357,
									"end": 3095,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122038fe381898f4b411411f8cb30b1e0205aeb68d7377e1424c0d1ebe8b9d05301d64736f6c63430008120033",
									".code": [
										{
											"begin": 357,
											"end": 3095,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 357,
											"end": 3095,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 357,
											"end": 3095,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 357,
											"end": 3095,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 357,
											"end": 3095,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 357,
											"end": 3095,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 357,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 357,
											"end": 3095,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 357,
											"end": 3095,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 357,
											"end": 3095,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 357,
											"end": 3095,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 357,
											"end": 3095,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 357,
											"end": 3095,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 357,
											"end": 3095,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 357,
											"end": 3095,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 357,
											"end": 3095,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 357,
											"end": 3095,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 357,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 357,
											"end": 3095,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 357,
											"end": 3095,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 357,
											"end": 3095,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 357,
											"end": 3095,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 357,
											"end": 3095,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 357,
											"end": 3095,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 357,
											"end": 3095,
											"name": "PUSH",
											"source": 6,
											"value": "2E0F2625"
										},
										{
											"begin": 357,
											"end": 3095,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 357,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 357,
											"end": 3095,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 357,
											"end": 3095,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 357,
											"end": 3095,
											"name": "PUSH",
											"source": 6,
											"value": "2E0F2625"
										},
										{
											"begin": 357,
											"end": 3095,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 357,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 357,
											"end": 3095,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 357,
											"end": 3095,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 357,
											"end": 3095,
											"name": "PUSH",
											"source": 6,
											"value": "47CCCA02"
										},
										{
											"begin": 357,
											"end": 3095,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 357,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 357,
											"end": 3095,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 357,
											"end": 3095,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 357,
											"end": 3095,
											"name": "PUSH",
											"source": 6,
											"value": "5997BB37"
										},
										{
											"begin": 357,
											"end": 3095,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 357,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 357,
											"end": 3095,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 357,
											"end": 3095,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 357,
											"end": 3095,
											"name": "PUSH",
											"source": 6,
											"value": "A694FC3A"
										},
										{
											"begin": 357,
											"end": 3095,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 357,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 357,
											"end": 3095,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 357,
											"end": 3095,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 357,
											"end": 3095,
											"name": "PUSH",
											"source": 6,
											"value": "B88A802F"
										},
										{
											"begin": 357,
											"end": 3095,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 357,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 357,
											"end": 3095,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 357,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 357,
											"end": 3095,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 357,
											"end": 3095,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 357,
											"end": 3095,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 357,
											"end": 3095,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 357,
											"end": 3095,
											"name": "PUSH",
											"source": 6,
											"value": "2657AD0"
										},
										{
											"begin": 357,
											"end": 3095,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 357,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 357,
											"end": 3095,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 357,
											"end": 3095,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 357,
											"end": 3095,
											"name": "PUSH",
											"source": 6,
											"value": "150B7A02"
										},
										{
											"begin": 357,
											"end": 3095,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 357,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 357,
											"end": 3095,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 357,
											"end": 3095,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 357,
											"end": 3095,
											"name": "PUSH",
											"source": 6,
											"value": "16934FC4"
										},
										{
											"begin": 357,
											"end": 3095,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 357,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 357,
											"end": 3095,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 357,
											"end": 3095,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 357,
											"end": 3095,
											"name": "PUSH",
											"source": 6,
											"value": "2DEF6620"
										},
										{
											"begin": 357,
											"end": 3095,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 357,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 357,
											"end": 3095,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 357,
											"end": 3095,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 357,
											"end": 3095,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 357,
											"end": 3095,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 357,
											"end": 3095,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 357,
											"end": 3095,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 483,
											"end": 537,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 483,
											"end": 537,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 483,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 483,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 483,
											"end": 537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 483,
											"end": 537,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 483,
											"end": 537,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 483,
											"end": 537,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 483,
											"end": 537,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 483,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 483,
											"end": 537,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 483,
											"end": 537,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 483,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 483,
											"end": 537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 483,
											"end": 537,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 483,
											"end": 537,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 483,
											"end": 537,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 483,
											"end": 537,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 483,
											"end": 537,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 483,
											"end": 537,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 483,
											"end": 537,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 483,
											"end": 537,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 483,
											"end": 537,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2892,
											"end": 3093,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2892,
											"end": 3093,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2892,
											"end": 3093,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 2892,
											"end": 3093,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2892,
											"end": 3093,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2892,
											"end": 3093,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2892,
											"end": 3093,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2892,
											"end": 3093,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2892,
											"end": 3093,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2892,
											"end": 3093,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2892,
											"end": 3093,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 2892,
											"end": 3093,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2892,
											"end": 3093,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2892,
											"end": 3093,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 2892,
											"end": 3093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2892,
											"end": 3093,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 2892,
											"end": 3093,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2892,
											"end": 3093,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2892,
											"end": 3093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2892,
											"end": 3093,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 2892,
											"end": 3093,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2892,
											"end": 3093,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2892,
											"end": 3093,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2892,
											"end": 3093,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 2892,
											"end": 3093,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2892,
											"end": 3093,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2892,
											"end": 3093,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 2892,
											"end": 3093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2892,
											"end": 3093,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 2892,
											"end": 3093,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2892,
											"end": 3093,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2892,
											"end": 3093,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2892,
											"end": 3093,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2892,
											"end": 3093,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2892,
											"end": 3093,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2892,
											"end": 3093,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2892,
											"end": 3093,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 798,
											"end": 837,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 798,
											"end": 837,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 798,
											"end": 837,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 798,
											"end": 837,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 798,
											"end": 837,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 798,
											"end": 837,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 798,
											"end": 837,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 798,
											"end": 837,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 798,
											"end": 837,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 798,
											"end": 837,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 798,
											"end": 837,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 798,
											"end": 837,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 798,
											"end": 837,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 798,
											"end": 837,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 798,
											"end": 837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 798,
											"end": 837,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 798,
											"end": 837,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 798,
											"end": 837,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 798,
											"end": 837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 798,
											"end": 837,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 798,
											"end": 837,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 798,
											"end": 837,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 798,
											"end": 837,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 798,
											"end": 837,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 798,
											"end": 837,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 798,
											"end": 837,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 798,
											"end": 837,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 798,
											"end": 837,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 798,
											"end": 837,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 798,
											"end": 837,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 798,
											"end": 837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 798,
											"end": 837,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 798,
											"end": 837,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 798,
											"end": 837,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 798,
											"end": 837,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 798,
											"end": 837,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 798,
											"end": 837,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 798,
											"end": 837,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 798,
											"end": 837,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 798,
											"end": 837,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1729,
											"end": 2232,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1729,
											"end": 2232,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1729,
											"end": 2232,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 1729,
											"end": 2232,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 1729,
											"end": 2232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1729,
											"end": 2232,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 1729,
											"end": 2232,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1729,
											"end": 2232,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 596,
											"end": 634,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 596,
											"end": 634,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 596,
											"end": 634,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 596,
											"end": 634,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 596,
											"end": 634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 596,
											"end": 634,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 596,
											"end": 634,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 596,
											"end": 634,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 596,
											"end": 634,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 596,
											"end": 634,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 596,
											"end": 634,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 596,
											"end": 634,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 596,
											"end": 634,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 596,
											"end": 634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 596,
											"end": 634,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 596,
											"end": 634,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 596,
											"end": 634,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 596,
											"end": 634,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 596,
											"end": 634,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 596,
											"end": 634,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 596,
											"end": 634,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 596,
											"end": 634,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 596,
											"end": 634,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 774,
											"end": 792,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 774,
											"end": 792,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 774,
											"end": 792,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 774,
											"end": 792,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 774,
											"end": 792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 774,
											"end": 792,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 774,
											"end": 792,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 774,
											"end": 792,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 774,
											"end": 792,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 774,
											"end": 792,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 774,
											"end": 792,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 774,
											"end": 792,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 774,
											"end": 792,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 774,
											"end": 792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 774,
											"end": 792,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 774,
											"end": 792,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 774,
											"end": 792,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 774,
											"end": 792,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 774,
											"end": 792,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 774,
											"end": 792,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 774,
											"end": 792,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 774,
											"end": 792,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 774,
											"end": 792,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 543,
											"end": 583,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 543,
											"end": 583,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 543,
											"end": 583,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 543,
											"end": 583,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 543,
											"end": 583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 543,
											"end": 583,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 543,
											"end": 583,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 543,
											"end": 583,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 543,
											"end": 583,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 543,
											"end": 583,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 543,
											"end": 583,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 543,
											"end": 583,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 543,
											"end": 583,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 543,
											"end": 583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 543,
											"end": 583,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 543,
											"end": 583,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 543,
											"end": 583,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 543,
											"end": 583,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 543,
											"end": 583,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 543,
											"end": 583,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 543,
											"end": 583,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 543,
											"end": 583,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 543,
											"end": 583,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1723,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 1186,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 1186,
											"end": 1723,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1186,
											"end": 1723,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1723,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1723,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1723,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1723,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1723,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 1186,
											"end": 1723,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1723,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 1186,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1723,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 1186,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 1186,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1723,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 1186,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1723,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2572,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 2238,
											"end": 2572,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2572,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 2238,
											"end": 2572,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 2238,
											"end": 2572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2572,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 2238,
											"end": 2572,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2572,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 483,
											"end": 537,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 483,
											"end": 537,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 530,
											"end": 537,
											"name": "PUSH",
											"source": 6,
											"value": "278D00"
										},
										{
											"begin": 483,
											"end": 537,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 483,
											"end": 537,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2892,
											"end": 3093,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2892,
											"end": 3093,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3031,
											"end": 3037,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3056,
											"end": 3086,
											"name": "PUSH",
											"source": 6,
											"value": "150B7A02"
										},
										{
											"begin": 3056,
											"end": 3086,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 3056,
											"end": 3086,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 3049,
											"end": 3086,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3049,
											"end": 3086,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2892,
											"end": 3093,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 2892,
											"end": 3093,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 2892,
											"end": 3093,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2892,
											"end": 3093,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2892,
											"end": 3093,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2892,
											"end": 3093,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2892,
											"end": 3093,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2892,
											"end": 3093,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 798,
											"end": 837,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 798,
											"end": 837,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 798,
											"end": 837,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 798,
											"end": 837,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 798,
											"end": 837,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 798,
											"end": 837,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 798,
											"end": 837,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 837,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 798,
											"end": 837,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 798,
											"end": 837,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 837,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 798,
											"end": 837,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 837,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 798,
											"end": 837,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 798,
											"end": 837,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 798,
											"end": 837,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 798,
											"end": 837,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 798,
											"end": 837,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 837,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 798,
											"end": 837,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 798,
											"end": 837,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 798,
											"end": 837,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 798,
											"end": 837,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 798,
											"end": 837,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 798,
											"end": 837,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 798,
											"end": 837,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 798,
											"end": 837,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 798,
											"end": 837,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 798,
											"end": 837,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 798,
											"end": 837,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 798,
											"end": 837,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 798,
											"end": 837,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 798,
											"end": 837,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 798,
											"end": 837,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 798,
											"end": 837,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 837,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 798,
											"end": 837,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 798,
											"end": 837,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 798,
											"end": 837,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 798,
											"end": 837,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 798,
											"end": 837,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 798,
											"end": 837,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 798,
											"end": 837,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 798,
											"end": 837,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 798,
											"end": 837,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 798,
											"end": 837,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 798,
											"end": 837,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 798,
											"end": 837,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1729,
											"end": 2232,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 1729,
											"end": 2232,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1780,
											"end": 1799,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1802,
											"end": 1808,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1802,
											"end": 1820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1809,
											"end": 1819,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1802,
											"end": 1820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1802,
											"end": 1820,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1802,
											"end": 1820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1802,
											"end": 1820,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1802,
											"end": 1820,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1802,
											"end": 1820,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1802,
											"end": 1820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1802,
											"end": 1820,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1802,
											"end": 1820,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1802,
											"end": 1820,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1802,
											"end": 1820,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1802,
											"end": 1820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1802,
											"end": 1820,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1802,
											"end": 1820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1802,
											"end": 1820,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1780,
											"end": 1820,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1780,
											"end": 1820,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1838,
											"end": 1843,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1838,
											"end": 1850,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1838,
											"end": 1850,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1838,
											"end": 1850,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1838,
											"end": 1850,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1838,
											"end": 1850,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1838,
											"end": 1850,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1838,
											"end": 1850,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1838,
											"end": 1850,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1838,
											"end": 1850,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1838,
											"end": 1850,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1838,
											"end": 1850,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 1838,
											"end": 1850,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1877,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 1830,
											"end": 1877,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1877,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1877,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1877,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1830,
											"end": 1877,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1877,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1877,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1830,
											"end": 1877,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1877,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 1830,
											"end": 1877,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1877,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 1830,
											"end": 1877,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1877,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 1830,
											"end": 1877,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1877,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1877,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1877,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1877,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1877,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1877,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1877,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1877,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 1830,
											"end": 1877,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1914,
											"end": 1956,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 530,
											"end": 537,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "278D00"
										},
										{
											"begin": 1914,
											"end": 1919,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1914,
											"end": 1930,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1914,
											"end": 1930,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1914,
											"end": 1930,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1914,
											"end": 1934,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 1914,
											"end": 1934,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1914,
											"end": 1956,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1914,
											"end": 1956,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1914,
											"end": 1956,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1914,
											"end": 1956,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1914,
											"end": 1956,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1914,
											"end": 1956,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 1914,
											"end": 1956,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1895,
											"end": 1910,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 1895,
											"end": 1956,
											"modifierDepth": 1,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1895,
											"end": 1956,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1887,
											"end": 1997,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 1887,
											"end": 1997,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1887,
											"end": 1997,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1887,
											"end": 1997,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1887,
											"end": 1997,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1887,
											"end": 1997,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1887,
											"end": 1997,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1887,
											"end": 1997,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1887,
											"end": 1997,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1887,
											"end": 1997,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 1887,
											"end": 1997,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1887,
											"end": 1997,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 1887,
											"end": 1997,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1887,
											"end": 1997,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 1887,
											"end": 1997,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1887,
											"end": 1997,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1887,
											"end": 1997,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1887,
											"end": 1997,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1887,
											"end": 1997,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1887,
											"end": 1997,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1887,
											"end": 1997,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1887,
											"end": 1997,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1887,
											"end": 1997,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 1887,
											"end": 1997,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2008,
											"end": 2022,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2025,
											"end": 2059,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2041,
											"end": 2051,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2058,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2025,
											"end": 2040,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 2025,
											"end": 2059,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2025,
											"end": 2059,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2025,
											"end": 2059,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2008,
											"end": 2059,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2008,
											"end": 2059,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2069,
											"end": 2072,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2069,
											"end": 2072,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2069,
											"end": 2072,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2069,
											"end": 2072,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2069,
											"end": 2072,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2069,
											"end": 2072,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2069,
											"end": 2072,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2069,
											"end": 2072,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2069,
											"end": 2072,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2069,
											"end": 2072,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2069,
											"end": 2072,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2069,
											"end": 2089,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2069,
											"end": 2089,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2069,
											"end": 2089,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "42842E0E"
										},
										{
											"begin": 2098,
											"end": 2102,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 2105,
											"end": 2115,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2117,
											"end": 2122,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2117,
											"end": 2130,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2117,
											"end": 2130,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2117,
											"end": 2130,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2069,
											"end": 2131,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2069,
											"end": 2131,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2069,
											"end": 2131,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2069,
											"end": 2131,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2069,
											"end": 2131,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2069,
											"end": 2131,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 2069,
											"end": 2131,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 2069,
											"end": 2131,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2069,
											"end": 2131,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2069,
											"end": 2131,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2069,
											"end": 2131,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2069,
											"end": 2131,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 2069,
											"end": 2131,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2069,
											"end": 2131,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2069,
											"end": 2131,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2069,
											"end": 2131,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2069,
											"end": 2131,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 2069,
											"end": 2131,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2069,
											"end": 2131,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 2069,
											"end": 2131,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2069,
											"end": 2131,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2069,
											"end": 2131,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2069,
											"end": 2131,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2069,
											"end": 2131,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2069,
											"end": 2131,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2069,
											"end": 2131,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2069,
											"end": 2131,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2069,
											"end": 2131,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2069,
											"end": 2131,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2069,
											"end": 2131,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2069,
											"end": 2131,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 2069,
											"end": 2131,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2069,
											"end": 2131,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2069,
											"end": 2131,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2069,
											"end": 2131,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2069,
											"end": 2131,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2069,
											"end": 2131,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2069,
											"end": 2131,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2069,
											"end": 2131,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2069,
											"end": 2131,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2069,
											"end": 2131,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2069,
											"end": 2131,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2069,
											"end": 2131,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 2069,
											"end": 2131,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 2069,
											"end": 2131,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2069,
											"end": 2131,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2069,
											"end": 2131,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2069,
											"end": 2131,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 2069,
											"end": 2131,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2069,
											"end": 2131,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2069,
											"end": 2131,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2069,
											"end": 2131,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2069,
											"end": 2131,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 2069,
											"end": 2131,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2069,
											"end": 2131,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2069,
											"end": 2131,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2069,
											"end": 2131,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 2069,
											"end": 2131,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2069,
											"end": 2131,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2069,
											"end": 2131,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2069,
											"end": 2131,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2069,
											"end": 2131,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2148,
											"end": 2154,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2148,
											"end": 2166,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2155,
											"end": 2165,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2148,
											"end": 2166,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2148,
											"end": 2166,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2148,
											"end": 2166,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2148,
											"end": 2166,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2148,
											"end": 2166,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2148,
											"end": 2166,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2148,
											"end": 2166,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2148,
											"end": 2166,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2148,
											"end": 2166,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2148,
											"end": 2166,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2148,
											"end": 2166,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2148,
											"end": 2166,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2148,
											"end": 2166,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2148,
											"end": 2166,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2148,
											"end": 2166,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2148,
											"end": 2166,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2141,
											"end": 2166,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2141,
											"end": 2166,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2141,
											"end": 2166,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2141,
											"end": 2166,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2141,
											"end": 2166,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2141,
											"end": 2166,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2141,
											"end": 2166,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2141,
											"end": 2166,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2141,
											"end": 2166,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2141,
											"end": 2166,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2141,
											"end": 2166,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2141,
											"end": 2166,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2141,
											"end": 2166,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2141,
											"end": 2166,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2141,
											"end": 2166,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2141,
											"end": 2166,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2141,
											"end": 2166,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2141,
											"end": 2166,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2141,
											"end": 2166,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2141,
											"end": 2166,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2141,
											"end": 2166,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2141,
											"end": 2166,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2141,
											"end": 2166,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2141,
											"end": 2166,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2141,
											"end": 2166,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2141,
											"end": 2166,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2141,
											"end": 2166,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2141,
											"end": 2166,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2141,
											"end": 2166,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2141,
											"end": 2166,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2141,
											"end": 2166,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2141,
											"end": 2166,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2141,
											"end": 2166,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2141,
											"end": 2166,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2141,
											"end": 2166,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2203,
											"end": 2208,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2203,
											"end": 2216,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2203,
											"end": 2216,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2203,
											"end": 2216,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2191,
											"end": 2201,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2182,
											"end": 2225,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2182,
											"end": 2225,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2182,
											"end": 2225,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "7FC4727E062E336010F2C282598EF5F14FACB3DE68CF8195C2F23E1454B2B74E"
										},
										{
											"begin": 2218,
											"end": 2224,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2182,
											"end": 2225,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2182,
											"end": 2225,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2182,
											"end": 2225,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 2182,
											"end": 2225,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2182,
											"end": 2225,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2182,
											"end": 2225,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 2182,
											"end": 2225,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2182,
											"end": 2225,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 2182,
											"end": 2225,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2182,
											"end": 2225,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2182,
											"end": 2225,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2182,
											"end": 2225,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2182,
											"end": 2225,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2182,
											"end": 2225,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2182,
											"end": 2225,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2182,
											"end": 2225,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 1770,
											"end": 2232,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1770,
											"end": 2232,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1729,
											"end": 2232,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 596,
											"end": 634,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 596,
											"end": 634,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 631,
											"end": 634,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 596,
											"end": 634,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 596,
											"end": 634,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 774,
											"end": 792,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 774,
											"end": 792,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 774,
											"end": 792,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 774,
											"end": 792,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 774,
											"end": 792,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 774,
											"end": 792,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 774,
											"end": 792,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 774,
											"end": 792,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 774,
											"end": 792,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 774,
											"end": 792,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 774,
											"end": 792,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 774,
											"end": 792,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 774,
											"end": 792,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 774,
											"end": 792,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 774,
											"end": 792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 543,
											"end": 583,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 543,
											"end": 583,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 581,
											"end": 583,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 543,
											"end": 583,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 543,
											"end": 583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1723,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 1186,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1284,
											"end": 1294,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1259,
											"end": 1294,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1262,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1259,
											"end": 1262,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1259,
											"end": 1262,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1262,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1262,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1262,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1259,
											"end": 1262,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1262,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1262,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1262,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1259,
											"end": 1262,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1270,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1259,
											"end": 1270,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1270,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "6352211E"
										},
										{
											"begin": 1271,
											"end": 1279,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1280,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1259,
											"end": 1280,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1280,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1280,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1259,
											"end": 1280,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1280,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1259,
											"end": 1280,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1280,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1280,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1280,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1259,
											"end": 1280,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 1259,
											"end": 1280,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1280,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 1259,
											"end": 1280,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1280,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 1259,
											"end": 1280,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1280,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1259,
											"end": 1280,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1259,
											"end": 1280,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1280,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1280,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1280,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1280,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1280,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1280,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1280,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1280,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1280,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1280,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 1259,
											"end": 1280,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1280,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1280,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1259,
											"end": 1280,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1280,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1280,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1280,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1259,
											"end": 1280,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1280,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 1259,
											"end": 1280,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1280,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1280,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1280,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1280,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1280,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1259,
											"end": 1280,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1280,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1280,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1259,
											"end": 1280,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1280,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1259,
											"end": 1280,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1280,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1280,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1280,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1280,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1280,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1280,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1259,
											"end": 1280,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1280,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1280,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1280,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1280,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 1259,
											"end": 1280,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1280,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 1259,
											"end": 1280,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1280,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 1259,
											"end": 1280,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1259,
											"end": 1294,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1294,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1251,
											"end": 1329,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 1251,
											"end": 1329,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1251,
											"end": 1329,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1251,
											"end": 1329,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1251,
											"end": 1329,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1251,
											"end": 1329,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1251,
											"end": 1329,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1251,
											"end": 1329,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1251,
											"end": 1329,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1251,
											"end": 1329,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 1251,
											"end": 1329,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1251,
											"end": 1329,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 1251,
											"end": 1329,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1251,
											"end": 1329,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 1251,
											"end": 1329,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1251,
											"end": 1329,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1251,
											"end": 1329,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1251,
											"end": 1329,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1251,
											"end": 1329,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1251,
											"end": 1329,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1251,
											"end": 1329,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1251,
											"end": 1329,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1251,
											"end": 1329,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 1251,
											"end": 1329,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1348,
											"end": 1354,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1348,
											"end": 1366,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1355,
											"end": 1365,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1348,
											"end": 1366,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1348,
											"end": 1366,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1348,
											"end": 1366,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1348,
											"end": 1366,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1348,
											"end": 1366,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1348,
											"end": 1366,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1348,
											"end": 1366,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1348,
											"end": 1366,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1348,
											"end": 1366,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1348,
											"end": 1366,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1348,
											"end": 1366,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1348,
											"end": 1366,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1348,
											"end": 1366,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1348,
											"end": 1366,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1348,
											"end": 1366,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1348,
											"end": 1373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1348,
											"end": 1373,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1348,
											"end": 1373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1348,
											"end": 1373,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1348,
											"end": 1373,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1348,
											"end": 1373,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1348,
											"end": 1373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1348,
											"end": 1373,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1348,
											"end": 1373,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1348,
											"end": 1373,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1348,
											"end": 1373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 1348,
											"end": 1373,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1347,
											"end": 1373,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1339,
											"end": 1404,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 1339,
											"end": 1404,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1339,
											"end": 1404,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1339,
											"end": 1404,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1339,
											"end": 1404,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1339,
											"end": 1404,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1339,
											"end": 1404,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1339,
											"end": 1404,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1339,
											"end": 1404,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1339,
											"end": 1404,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 1339,
											"end": 1404,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1339,
											"end": 1404,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 1339,
											"end": 1404,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1339,
											"end": 1404,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 1339,
											"end": 1404,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1339,
											"end": 1404,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1339,
											"end": 1404,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1339,
											"end": 1404,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1339,
											"end": 1404,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1339,
											"end": 1404,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1339,
											"end": 1404,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1339,
											"end": 1404,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1339,
											"end": 1404,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 1339,
											"end": 1404,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1459,
											"end": 1463,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 1422,
											"end": 1464,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1464,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1422,
											"end": 1425,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1422,
											"end": 1425,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1422,
											"end": 1425,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1422,
											"end": 1425,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1422,
											"end": 1425,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1422,
											"end": 1425,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1422,
											"end": 1425,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1422,
											"end": 1425,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1422,
											"end": 1425,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1422,
											"end": 1425,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1425,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1422,
											"end": 1437,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1437,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1422,
											"end": 1437,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "81812FC"
										},
										{
											"begin": 1438,
											"end": 1446,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1422,
											"end": 1447,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1422,
											"end": 1447,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1422,
											"end": 1447,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1422,
											"end": 1447,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1447,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1422,
											"end": 1447,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1422,
											"end": 1447,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1422,
											"end": 1447,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1422,
											"end": 1447,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1422,
											"end": 1447,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1422,
											"end": 1447,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1422,
											"end": 1447,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 1422,
											"end": 1447,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1422,
											"end": 1447,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1422,
											"end": 1447,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 1422,
											"end": 1447,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1422,
											"end": 1447,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 1422,
											"end": 1447,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1422,
											"end": 1447,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1422,
											"end": 1447,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1422,
											"end": 1447,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1422,
											"end": 1447,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1422,
											"end": 1447,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1422,
											"end": 1447,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1422,
											"end": 1447,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1422,
											"end": 1447,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1422,
											"end": 1447,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 1422,
											"end": 1447,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 1422,
											"end": 1447,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1422,
											"end": 1447,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1422,
											"end": 1447,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1422,
											"end": 1447,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 1422,
											"end": 1447,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1422,
											"end": 1447,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1422,
											"end": 1447,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1422,
											"end": 1447,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1422,
											"end": 1447,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 1422,
											"end": 1447,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1422,
											"end": 1447,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1422,
											"end": 1447,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1422,
											"end": 1447,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 1422,
											"end": 1447,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1422,
											"end": 1447,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1422,
											"end": 1447,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1422,
											"end": 1447,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1422,
											"end": 1447,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1422,
											"end": 1447,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1422,
											"end": 1447,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1422,
											"end": 1447,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1422,
											"end": 1447,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1422,
											"end": 1447,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1422,
											"end": 1447,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1422,
											"end": 1447,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1422,
											"end": 1447,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1422,
											"end": 1447,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1422,
											"end": 1447,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1422,
											"end": 1447,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1422,
											"end": 1447,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1422,
											"end": 1447,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1422,
											"end": 1447,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1422,
											"end": 1447,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1422,
											"end": 1447,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1422,
											"end": 1447,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1422,
											"end": 1447,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1422,
											"end": 1447,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 1422,
											"end": 1447,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1422,
											"end": 1447,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1422,
											"end": 1447,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 1422,
											"end": 1447,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1422,
											"end": 1447,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 1422,
											"end": 1447,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1422,
											"end": 1464,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1464,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1422,
											"end": 1464,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1414,
											"end": 1493,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 1414,
											"end": 1493,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1414,
											"end": 1493,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1493,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1414,
											"end": 1493,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1414,
											"end": 1493,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1414,
											"end": 1493,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1414,
											"end": 1493,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1493,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1414,
											"end": 1493,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 1414,
											"end": 1493,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1414,
											"end": 1493,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 1414,
											"end": 1493,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1414,
											"end": 1493,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 1414,
											"end": 1493,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1414,
											"end": 1493,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1493,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1414,
											"end": 1493,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1414,
											"end": 1493,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1414,
											"end": 1493,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1414,
											"end": 1493,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1414,
											"end": 1493,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1414,
											"end": 1493,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 1414,
											"end": 1493,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1512,
											"end": 1515,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1512,
											"end": 1515,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1515,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1512,
											"end": 1515,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1512,
											"end": 1515,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1512,
											"end": 1515,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1512,
											"end": 1515,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1512,
											"end": 1515,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1512,
											"end": 1515,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1512,
											"end": 1515,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1512,
											"end": 1515,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1512,
											"end": 1532,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1512,
											"end": 1532,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1512,
											"end": 1532,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "42842E0E"
										},
										{
											"begin": 1533,
											"end": 1543,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1553,
											"end": 1557,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 1560,
											"end": 1568,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1512,
											"end": 1569,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1512,
											"end": 1569,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1512,
											"end": 1569,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1512,
											"end": 1569,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1512,
											"end": 1569,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1512,
											"end": 1569,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1512,
											"end": 1569,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1512,
											"end": 1569,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1512,
											"end": 1569,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1512,
											"end": 1569,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1512,
											"end": 1569,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1512,
											"end": 1569,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 1512,
											"end": 1569,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1512,
											"end": 1569,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1512,
											"end": 1569,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1512,
											"end": 1569,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1512,
											"end": 1569,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 1512,
											"end": 1569,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1512,
											"end": 1569,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 1512,
											"end": 1569,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1512,
											"end": 1569,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1569,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1512,
											"end": 1569,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1512,
											"end": 1569,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1512,
											"end": 1569,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1512,
											"end": 1569,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1512,
											"end": 1569,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1512,
											"end": 1569,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1569,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 1512,
											"end": 1569,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1512,
											"end": 1569,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 1512,
											"end": 1569,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1512,
											"end": 1569,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1512,
											"end": 1569,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1512,
											"end": 1569,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 1512,
											"end": 1569,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1512,
											"end": 1569,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1569,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1512,
											"end": 1569,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1512,
											"end": 1569,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 1512,
											"end": 1569,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1512,
											"end": 1569,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1512,
											"end": 1569,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 1512,
											"end": 1569,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 1512,
											"end": 1569,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1512,
											"end": 1569,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1512,
											"end": 1569,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1512,
											"end": 1569,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 1512,
											"end": 1569,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1512,
											"end": 1569,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1512,
											"end": 1569,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1569,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1512,
											"end": 1569,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 1512,
											"end": 1569,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1512,
											"end": 1569,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1569,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1512,
											"end": 1569,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 1512,
											"end": 1569,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1512,
											"end": 1569,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1512,
											"end": 1569,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1512,
											"end": 1569,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1512,
											"end": 1569,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1655,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1600,
											"end": 1655,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1655,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1655,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 1600,
											"end": 1655,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1655,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1600,
											"end": 1655,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1655,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1606,
											"end": 1614,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1655,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1655,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1655,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1600,
											"end": 1655,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1616,
											"end": 1631,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1655,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1655,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1655,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1600,
											"end": 1655,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1633,
											"end": 1648,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1655,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1655,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1655,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1600,
											"end": 1655,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1650,
											"end": 1654,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1600,
											"end": 1655,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1655,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1655,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1655,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1655,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1579,
											"end": 1585,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1579,
											"end": 1597,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1586,
											"end": 1596,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1579,
											"end": 1597,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1579,
											"end": 1597,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1579,
											"end": 1597,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1579,
											"end": 1597,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1579,
											"end": 1597,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1579,
											"end": 1597,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1579,
											"end": 1597,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1579,
											"end": 1597,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1579,
											"end": 1597,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1579,
											"end": 1597,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1579,
											"end": 1597,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1579,
											"end": 1597,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1579,
											"end": 1597,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1579,
											"end": 1597,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1579,
											"end": 1597,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1579,
											"end": 1655,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1579,
											"end": 1655,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1579,
											"end": 1655,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1579,
											"end": 1655,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1579,
											"end": 1655,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1579,
											"end": 1655,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1579,
											"end": 1655,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1579,
											"end": 1655,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1579,
											"end": 1655,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1579,
											"end": 1655,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1579,
											"end": 1655,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1579,
											"end": 1655,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1579,
											"end": 1655,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1579,
											"end": 1655,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1579,
											"end": 1655,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1579,
											"end": 1655,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1579,
											"end": 1655,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1579,
											"end": 1655,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1579,
											"end": 1655,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1579,
											"end": 1655,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1579,
											"end": 1655,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1579,
											"end": 1655,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1579,
											"end": 1655,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1579,
											"end": 1655,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1579,
											"end": 1655,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1579,
											"end": 1655,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1579,
											"end": 1655,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1579,
											"end": 1655,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1579,
											"end": 1655,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1579,
											"end": 1655,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1579,
											"end": 1655,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1579,
											"end": 1655,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1579,
											"end": 1655,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1579,
											"end": 1655,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1579,
											"end": 1655,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1579,
											"end": 1655,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1579,
											"end": 1655,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1579,
											"end": 1655,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 1579,
											"end": 1655,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1579,
											"end": 1655,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1579,
											"end": 1655,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1579,
											"end": 1655,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1579,
											"end": 1655,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1579,
											"end": 1655,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1579,
											"end": 1655,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1579,
											"end": 1655,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1579,
											"end": 1655,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1579,
											"end": 1655,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1579,
											"end": 1655,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1579,
											"end": 1655,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1579,
											"end": 1655,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1579,
											"end": 1655,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1579,
											"end": 1655,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1690,
											"end": 1698,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1678,
											"end": 1688,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1671,
											"end": 1716,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1671,
											"end": 1716,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1671,
											"end": 1716,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1449C6DD7851ABC30ABF37F57715F492010519147CC2652FBC38202C18A6EE90"
										},
										{
											"begin": 1700,
											"end": 1715,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 1671,
											"end": 1716,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1671,
											"end": 1716,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1671,
											"end": 1716,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 1671,
											"end": 1716,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1671,
											"end": 1716,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1671,
											"end": 1716,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 1671,
											"end": 1716,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1671,
											"end": 1716,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 1671,
											"end": 1716,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1671,
											"end": 1716,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1671,
											"end": 1716,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1671,
											"end": 1716,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1671,
											"end": 1716,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1671,
											"end": 1716,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1671,
											"end": 1716,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1671,
											"end": 1716,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1186,
											"end": 1723,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2572,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 2238,
											"end": 2572,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2312,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2315,
											"end": 2321,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2315,
											"end": 2333,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2322,
											"end": 2332,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2315,
											"end": 2333,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2315,
											"end": 2333,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2315,
											"end": 2333,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2315,
											"end": 2333,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2315,
											"end": 2333,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2315,
											"end": 2333,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2315,
											"end": 2333,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2315,
											"end": 2333,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2315,
											"end": 2333,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2315,
											"end": 2333,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2315,
											"end": 2333,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2315,
											"end": 2333,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2315,
											"end": 2333,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2315,
											"end": 2333,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2315,
											"end": 2333,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2293,
											"end": 2333,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2293,
											"end": 2333,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2356,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2363,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2351,
											"end": 2363,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2363,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2351,
											"end": 2363,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2363,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2363,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2363,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2351,
											"end": 2363,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2363,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2363,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2363,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2351,
											"end": 2363,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2343,
											"end": 2390,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2343,
											"end": 2390,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2343,
											"end": 2390,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2343,
											"end": 2390,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2343,
											"end": 2390,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2343,
											"end": 2390,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2343,
											"end": 2390,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2343,
											"end": 2390,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2343,
											"end": 2390,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2343,
											"end": 2390,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 2343,
											"end": 2390,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2343,
											"end": 2390,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 2343,
											"end": 2390,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2343,
											"end": 2390,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 2343,
											"end": 2390,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2343,
											"end": 2390,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2343,
											"end": 2390,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2343,
											"end": 2390,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2343,
											"end": 2390,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2343,
											"end": 2390,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2343,
											"end": 2390,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2343,
											"end": 2390,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2343,
											"end": 2390,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2343,
											"end": 2390,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2401,
											"end": 2415,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2418,
											"end": 2452,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 2434,
											"end": 2444,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2446,
											"end": 2451,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2418,
											"end": 2433,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 2418,
											"end": 2452,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2418,
											"end": 2452,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 2418,
											"end": 2452,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2401,
											"end": 2452,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2401,
											"end": 2452,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2486,
											"end": 2501,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 2462,
											"end": 2467,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2462,
											"end": 2483,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2462,
											"end": 2483,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2462,
											"end": 2501,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2462,
											"end": 2501,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2462,
											"end": 2501,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2462,
											"end": 2501,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2548,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2556,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2556,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2556,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2531,
											"end": 2541,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2517,
											"end": 2565,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "F01DA32686223933D8A18A391060918C7F11A3648639EDD87AE013E2E2731743"
										},
										{
											"begin": 2558,
											"end": 2564,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2517,
											"end": 2565,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 2517,
											"end": 2565,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2565,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 2517,
											"end": 2565,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2565,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 2517,
											"end": 2565,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2517,
											"end": 2565,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2565,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2565,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2565,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2565,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2565,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 2283,
											"end": 2572,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2283,
											"end": 2572,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2238,
											"end": 2572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 2839,
											"end": 2844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2755,
											"end": 2851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2578,
											"end": 2886,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 2578,
											"end": 2886,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2664,
											"end": 2671,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2683,
											"end": 2701,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2704,
											"end": 2747,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 2724,
											"end": 2730,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2724,
											"end": 2746,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2724,
											"end": 2746,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2724,
											"end": 2746,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2704,
											"end": 2719,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 2704,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 2704,
											"end": 2723,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2704,
											"end": 2747,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2704,
											"end": 2747,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2704,
											"end": 2747,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2704,
											"end": 2747,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2704,
											"end": 2747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2704,
											"end": 2747,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 2704,
											"end": 2747,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2683,
											"end": 2747,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2683,
											"end": 2747,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2757,
											"end": 2771,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2774,
											"end": 2855,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 631,
											"end": 634,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2774,
											"end": 2841,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 530,
											"end": 537,
											"name": "PUSH",
											"source": 6,
											"value": "278D00"
										},
										{
											"begin": 2774,
											"end": 2815,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 631,
											"end": 634,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2774,
											"end": 2801,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 581,
											"end": 583,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 2774,
											"end": 2784,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 2774,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 2774,
											"end": 2788,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2774,
											"end": 2801,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2774,
											"end": 2801,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2774,
											"end": 2801,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2774,
											"end": 2801,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2774,
											"end": 2801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2774,
											"end": 2801,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 2774,
											"end": 2801,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2774,
											"end": 2805,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 2774,
											"end": 2805,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2774,
											"end": 2815,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2774,
											"end": 2815,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2774,
											"end": 2815,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2774,
											"end": 2815,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2774,
											"end": 2815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2774,
											"end": 2815,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 2774,
											"end": 2815,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2774,
											"end": 2819,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 2774,
											"end": 2819,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2774,
											"end": 2841,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2774,
											"end": 2841,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2774,
											"end": 2841,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2774,
											"end": 2841,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2774,
											"end": 2841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2774,
											"end": 2841,
											"name": "tag",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 2774,
											"end": 2841,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2774,
											"end": 2845,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 2774,
											"end": 2845,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2774,
											"end": 2855,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2774,
											"end": 2855,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2774,
											"end": 2855,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2774,
											"end": 2855,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2774,
											"end": 2855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2774,
											"end": 2855,
											"name": "tag",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 2774,
											"end": 2855,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2757,
											"end": 2855,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2757,
											"end": 2855,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2873,
											"end": 2879,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2866,
											"end": 2879,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2866,
											"end": 2879,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2866,
											"end": 2879,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2866,
											"end": 2879,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2578,
											"end": 2886,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2578,
											"end": 2886,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2578,
											"end": 2886,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2578,
											"end": 2886,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2578,
											"end": 2886,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "tag",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3180,
											"end": 3187,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3210,
											"end": 3211,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 3206,
											"end": 3211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3122,
											"end": 3218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "tag",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3523,
											"end": 3530,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3553,
											"end": 3554,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 3549,
											"end": 3554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3465,
											"end": 3561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3908,
											"end": 3915,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3938,
											"end": 3939,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3934,
											"end": 3935,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 3934,
											"end": 3939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3850,
											"end": 3946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 523,
											"end": 640,
											"name": "tag",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 523,
											"end": 640,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 632,
											"end": 633,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 630,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 622,
											"end": 634,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 646,
											"end": 763,
											"name": "tag",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 646,
											"end": 763,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 755,
											"end": 756,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 752,
											"end": 753,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 745,
											"end": 757,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 769,
											"end": 895,
											"name": "tag",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 769,
											"end": 895,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 806,
											"end": 813,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 846,
											"end": 888,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 839,
											"end": 844,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 835,
											"end": 889,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 824,
											"end": 889,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 824,
											"end": 889,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 769,
											"end": 895,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 769,
											"end": 895,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 769,
											"end": 895,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 769,
											"end": 895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 901,
											"end": 997,
											"name": "tag",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 901,
											"end": 997,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 938,
											"end": 945,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 967,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 985,
											"end": 990,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 967,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 967,
											"end": 991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 967,
											"end": 991,
											"name": "tag",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 967,
											"end": 991,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 956,
											"end": 991,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 956,
											"end": 991,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 901,
											"end": 997,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 901,
											"end": 997,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 901,
											"end": 997,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 901,
											"end": 997,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "tag",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 1094,
											"end": 1099,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 1076,
											"end": 1100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "tag",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1069,
											"end": 1074,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1066,
											"end": 1101,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1115,
											"end": 1116,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1112,
											"end": 1113,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1105,
											"end": 1117,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "tag",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1003,
											"end": 1125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "tag",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1177,
											"end": 1182,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1202,
											"end": 1222,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 1258,
											"end": 1263,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 1231,
											"end": 1264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "tag",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1131,
											"end": 1270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1276,
											"end": 1398,
											"name": "tag",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 1276,
											"end": 1398,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1349,
											"end": 1373,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 1367,
											"end": 1372,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1349,
											"end": 1373,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 1349,
											"end": 1373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1349,
											"end": 1373,
											"name": "tag",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 1349,
											"end": 1373,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1342,
											"end": 1347,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1339,
											"end": 1374,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1392,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 1329,
											"end": 1392,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1388,
											"end": 1389,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1385,
											"end": 1386,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1378,
											"end": 1390,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1392,
											"name": "tag",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 1329,
											"end": 1392,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1276,
											"end": 1398,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1276,
											"end": 1398,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1404,
											"end": 1543,
											"name": "tag",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 1404,
											"end": 1543,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1450,
											"end": 1455,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1488,
											"end": 1494,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1475,
											"end": 1495,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1466,
											"end": 1495,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1466,
											"end": 1495,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1504,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 1531,
											"end": 1536,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1504,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 1504,
											"end": 1537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1504,
											"end": 1537,
											"name": "tag",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 1504,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1404,
											"end": 1543,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1404,
											"end": 1543,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1404,
											"end": 1543,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1404,
											"end": 1543,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1404,
											"end": 1543,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1549,
											"end": 1666,
											"name": "tag",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 1549,
											"end": 1666,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1658,
											"end": 1659,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1655,
											"end": 1656,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1648,
											"end": 1660,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1672,
											"end": 1789,
											"name": "tag",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 1672,
											"end": 1789,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1781,
											"end": 1782,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1778,
											"end": 1779,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1771,
											"end": 1783,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1795,
											"end": 1912,
											"name": "tag",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 1795,
											"end": 1912,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1904,
											"end": 1905,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1901,
											"end": 1902,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1894,
											"end": 1906,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2483,
											"name": "tag",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 1931,
											"end": 2483,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1988,
											"end": 1996,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1998,
											"end": 2004,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2048,
											"end": 2051,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2041,
											"end": 2045,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2033,
											"end": 2039,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2029,
											"end": 2046,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2025,
											"end": 2052,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2015,
											"end": 2137,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 2015,
											"end": 2137,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2135,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 2056,
											"end": 2135,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 2056,
											"end": 2135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2135,
											"name": "tag",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 2056,
											"end": 2135,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2015,
											"end": 2137,
											"name": "tag",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 2015,
											"end": 2137,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2169,
											"end": 2175,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2156,
											"end": 2176,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2146,
											"end": 2176,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2146,
											"end": 2176,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2199,
											"end": 2217,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2191,
											"end": 2197,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2188,
											"end": 2218,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2185,
											"end": 2302,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2185,
											"end": 2302,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 2185,
											"end": 2302,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2221,
											"end": 2300,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 2221,
											"end": 2300,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 2221,
											"end": 2300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2221,
											"end": 2300,
											"name": "tag",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 2221,
											"end": 2300,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2185,
											"end": 2302,
											"name": "tag",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 2185,
											"end": 2302,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2335,
											"end": 2339,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2327,
											"end": 2333,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2340,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2311,
											"end": 2340,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2311,
											"end": 2340,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2389,
											"end": 2392,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2381,
											"end": 2385,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2373,
											"end": 2379,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2369,
											"end": 2386,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 2359,
											"end": 2367,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2355,
											"end": 2387,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2352,
											"end": 2393,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2349,
											"end": 2477,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2349,
											"end": 2477,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 2349,
											"end": 2477,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2396,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 2396,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 2396,
											"end": 2475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2396,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 2396,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2349,
											"end": 2477,
											"name": "tag",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 2349,
											"end": 2477,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2483,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2483,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2483,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2483,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2483,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2489,
											"end": 3452,
											"name": "tag",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 2489,
											"end": 3452,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2592,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2594,
											"end": 2600,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2602,
											"end": 2608,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2610,
											"end": 2616,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2618,
											"end": 2624,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2667,
											"end": 2670,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 2655,
											"end": 2664,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2646,
											"end": 2653,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 2642,
											"end": 2665,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2638,
											"end": 2671,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2635,
											"end": 2755,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2635,
											"end": 2755,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 2635,
											"end": 2755,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2674,
											"end": 2753,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 2674,
											"end": 2753,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 2674,
											"end": 2753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2674,
											"end": 2753,
											"name": "tag",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 2674,
											"end": 2753,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2635,
											"end": 2755,
											"name": "tag",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 2635,
											"end": 2755,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2794,
											"end": 2795,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2819,
											"end": 2872,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 2864,
											"end": 2871,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 2855,
											"end": 2861,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2844,
											"end": 2853,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 2840,
											"end": 2862,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2819,
											"end": 2872,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 2819,
											"end": 2872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2819,
											"end": 2872,
											"name": "tag",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 2819,
											"end": 2872,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2809,
											"end": 2872,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 2809,
											"end": 2872,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2765,
											"end": 2882,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2921,
											"end": 2923,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2947,
											"end": 3000,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 2992,
											"end": 2999,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 2983,
											"end": 2989,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2972,
											"end": 2981,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 2968,
											"end": 2990,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2947,
											"end": 3000,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 2947,
											"end": 3000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2947,
											"end": 3000,
											"name": "tag",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 2947,
											"end": 3000,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2937,
											"end": 3000,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 2937,
											"end": 3000,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2892,
											"end": 3010,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3049,
											"end": 3051,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3075,
											"end": 3128,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 3120,
											"end": 3127,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 3111,
											"end": 3117,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3100,
											"end": 3109,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 3096,
											"end": 3118,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3075,
											"end": 3128,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 3075,
											"end": 3128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3075,
											"end": 3128,
											"name": "tag",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 3075,
											"end": 3128,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3065,
											"end": 3128,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3065,
											"end": 3128,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3020,
											"end": 3138,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3205,
											"end": 3207,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3194,
											"end": 3203,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3190,
											"end": 3208,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3177,
											"end": 3209,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 3236,
											"end": 3254,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3228,
											"end": 3234,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3225,
											"end": 3255,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3222,
											"end": 3339,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3222,
											"end": 3339,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 3222,
											"end": 3339,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3258,
											"end": 3337,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 3258,
											"end": 3337,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 3258,
											"end": 3337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3258,
											"end": 3337,
											"name": "tag",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 3258,
											"end": 3337,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3222,
											"end": 3339,
											"name": "tag",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 3222,
											"end": 3339,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3371,
											"end": 3435,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 3427,
											"end": 3434,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 3418,
											"end": 3424,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3407,
											"end": 3416,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 3403,
											"end": 3425,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3371,
											"end": 3435,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 3371,
											"end": 3435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3371,
											"end": 3435,
											"name": "tag",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 3371,
											"end": 3435,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3353,
											"end": 3435,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3353,
											"end": 3435,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3353,
											"end": 3435,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3353,
											"end": 3435,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3148,
											"end": 3445,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2489,
											"end": 3452,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2489,
											"end": 3452,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 2489,
											"end": 3452,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2489,
											"end": 3452,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2489,
											"end": 3452,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 2489,
											"end": 3452,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2489,
											"end": 3452,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2489,
											"end": 3452,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2489,
											"end": 3452,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3458,
											"end": 3607,
											"name": "tag",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 3458,
											"end": 3607,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3494,
											"end": 3501,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3534,
											"end": 3600,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3527,
											"end": 3532,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3523,
											"end": 3601,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3512,
											"end": 3601,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3512,
											"end": 3601,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3458,
											"end": 3607,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3458,
											"end": 3607,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3458,
											"end": 3607,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3458,
											"end": 3607,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3613,
											"end": 3728,
											"name": "tag",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 3613,
											"end": 3728,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3698,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 3715,
											"end": 3720,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3698,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 3698,
											"end": 3721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3698,
											"end": 3721,
											"name": "tag",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 3698,
											"end": 3721,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3693,
											"end": 3696,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3686,
											"end": 3722,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3613,
											"end": 3728,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3613,
											"end": 3728,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3613,
											"end": 3728,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3734,
											"end": 3952,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 3734,
											"end": 3952,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3825,
											"end": 3829,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3863,
											"end": 3865,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3852,
											"end": 3861,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3848,
											"end": 3866,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3840,
											"end": 3866,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3840,
											"end": 3866,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3876,
											"end": 3945,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 3942,
											"end": 3943,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3931,
											"end": 3940,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3927,
											"end": 3944,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3918,
											"end": 3924,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3876,
											"end": 3945,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 3876,
											"end": 3945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3876,
											"end": 3945,
											"name": "tag",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 3876,
											"end": 3945,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3734,
											"end": 3952,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3734,
											"end": 3952,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3734,
											"end": 3952,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3734,
											"end": 3952,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3734,
											"end": 3952,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3958,
											"end": 4287,
											"name": "tag",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 3958,
											"end": 4287,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4017,
											"end": 4023,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4066,
											"end": 4068,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4054,
											"end": 4063,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4045,
											"end": 4052,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4041,
											"end": 4064,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4037,
											"end": 4069,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4034,
											"end": 4153,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4034,
											"end": 4153,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 4034,
											"end": 4153,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4072,
											"end": 4151,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 4072,
											"end": 4151,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 4072,
											"end": 4151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4072,
											"end": 4151,
											"name": "tag",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 4072,
											"end": 4151,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4034,
											"end": 4153,
											"name": "tag",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 4034,
											"end": 4153,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4192,
											"end": 4193,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4217,
											"end": 4270,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 4262,
											"end": 4269,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4253,
											"end": 4259,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4242,
											"end": 4251,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4238,
											"end": 4260,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4217,
											"end": 4270,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 4217,
											"end": 4270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4217,
											"end": 4270,
											"name": "tag",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 4217,
											"end": 4270,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4207,
											"end": 4270,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4207,
											"end": 4270,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4163,
											"end": 4280,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3958,
											"end": 4287,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3958,
											"end": 4287,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3958,
											"end": 4287,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3958,
											"end": 4287,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3958,
											"end": 4287,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4293,
											"end": 4383,
											"name": "tag",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 4293,
											"end": 4383,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4327,
											"end": 4334,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4370,
											"end": 4375,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4363,
											"end": 4376,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4356,
											"end": 4377,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4345,
											"end": 4377,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4345,
											"end": 4377,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4293,
											"end": 4383,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4293,
											"end": 4383,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4293,
											"end": 4383,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4293,
											"end": 4383,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4389,
											"end": 4498,
											"name": "tag",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 4389,
											"end": 4498,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4470,
											"end": 4491,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 4485,
											"end": 4490,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4470,
											"end": 4491,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 4470,
											"end": 4491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4470,
											"end": 4491,
											"name": "tag",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 4470,
											"end": 4491,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4465,
											"end": 4468,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4458,
											"end": 4492,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4389,
											"end": 4498,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4389,
											"end": 4498,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4389,
											"end": 4498,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4504,
											"end": 5045,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 4504,
											"end": 5045,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4675,
											"end": 4679,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4713,
											"end": 4716,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 4702,
											"end": 4711,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4698,
											"end": 4717,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4690,
											"end": 4717,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4690,
											"end": 4717,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4727,
											"end": 4798,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 4795,
											"end": 4796,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4784,
											"end": 4793,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4780,
											"end": 4797,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4771,
											"end": 4777,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4727,
											"end": 4798,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 4727,
											"end": 4798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4727,
											"end": 4798,
											"name": "tag",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 4727,
											"end": 4798,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4808,
											"end": 4880,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 4876,
											"end": 4878,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4865,
											"end": 4874,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4861,
											"end": 4879,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4852,
											"end": 4858,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4808,
											"end": 4880,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 4808,
											"end": 4880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4808,
											"end": 4880,
											"name": "tag",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 4808,
											"end": 4880,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4890,
											"end": 4962,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 4958,
											"end": 4960,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4947,
											"end": 4956,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4943,
											"end": 4961,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4934,
											"end": 4940,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4890,
											"end": 4962,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 4890,
											"end": 4962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4890,
											"end": 4962,
											"name": "tag",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 4890,
											"end": 4962,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4972,
											"end": 5038,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 5034,
											"end": 5036,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 5023,
											"end": 5032,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5019,
											"end": 5037,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5010,
											"end": 5016,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4972,
											"end": 5038,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 4972,
											"end": 5038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4972,
											"end": 5038,
											"name": "tag",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 4972,
											"end": 5038,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4504,
											"end": 5045,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 4504,
											"end": 5045,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 4504,
											"end": 5045,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4504,
											"end": 5045,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4504,
											"end": 5045,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4504,
											"end": 5045,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4504,
											"end": 5045,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4504,
											"end": 5045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5051,
											"end": 5111,
											"name": "tag",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 5051,
											"end": 5111,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5079,
											"end": 5082,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5100,
											"end": 5105,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5093,
											"end": 5105,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5093,
											"end": 5105,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5051,
											"end": 5111,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5051,
											"end": 5111,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5051,
											"end": 5111,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5051,
											"end": 5111,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5117,
											"end": 5259,
											"name": "tag",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 5117,
											"end": 5259,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5167,
											"end": 5176,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5200,
											"end": 5253,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 5218,
											"end": 5252,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 5227,
											"end": 5251,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 5245,
											"end": 5250,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5227,
											"end": 5251,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 5227,
											"end": 5251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5227,
											"end": 5251,
											"name": "tag",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 5227,
											"end": 5251,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5218,
											"end": 5252,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 5218,
											"end": 5252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5218,
											"end": 5252,
											"name": "tag",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 5218,
											"end": 5252,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5200,
											"end": 5253,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 5200,
											"end": 5253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5200,
											"end": 5253,
											"name": "tag",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 5200,
											"end": 5253,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5187,
											"end": 5253,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5187,
											"end": 5253,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5117,
											"end": 5259,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5117,
											"end": 5259,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5117,
											"end": 5259,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5117,
											"end": 5259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5265,
											"end": 5391,
											"name": "tag",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 5265,
											"end": 5391,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5315,
											"end": 5324,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5348,
											"end": 5385,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 5379,
											"end": 5384,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5348,
											"end": 5385,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 5348,
											"end": 5385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5348,
											"end": 5385,
											"name": "tag",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 5348,
											"end": 5385,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5335,
											"end": 5385,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5335,
											"end": 5385,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5265,
											"end": 5391,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5265,
											"end": 5391,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5265,
											"end": 5391,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5265,
											"end": 5391,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5397,
											"end": 5538,
											"name": "tag",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 5397,
											"end": 5538,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5462,
											"end": 5471,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5495,
											"end": 5532,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 5526,
											"end": 5531,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5495,
											"end": 5532,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 5495,
											"end": 5532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5495,
											"end": 5532,
											"name": "tag",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 5495,
											"end": 5532,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5482,
											"end": 5532,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5482,
											"end": 5532,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5397,
											"end": 5538,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5397,
											"end": 5538,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5397,
											"end": 5538,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5397,
											"end": 5538,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5544,
											"end": 5705,
											"name": "tag",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 5544,
											"end": 5705,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5646,
											"end": 5698,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 5692,
											"end": 5697,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5646,
											"end": 5698,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 5646,
											"end": 5698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5646,
											"end": 5698,
											"name": "tag",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 5646,
											"end": 5698,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5641,
											"end": 5644,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5634,
											"end": 5699,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5544,
											"end": 5705,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5544,
											"end": 5705,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5544,
											"end": 5705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5711,
											"end": 5963,
											"name": "tag",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 5711,
											"end": 5963,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5819,
											"end": 5823,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5857,
											"end": 5859,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5846,
											"end": 5855,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5842,
											"end": 5860,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5834,
											"end": 5860,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5834,
											"end": 5860,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5870,
											"end": 5956,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 5953,
											"end": 5954,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5942,
											"end": 5951,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5938,
											"end": 5955,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5929,
											"end": 5935,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5870,
											"end": 5956,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 5870,
											"end": 5956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5870,
											"end": 5956,
											"name": "tag",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 5870,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5711,
											"end": 5963,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5711,
											"end": 5963,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5711,
											"end": 5963,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5711,
											"end": 5963,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5711,
											"end": 5963,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5969,
											"end": 6298,
											"name": "tag",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 5969,
											"end": 6298,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6028,
											"end": 6034,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6077,
											"end": 6079,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6065,
											"end": 6074,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6056,
											"end": 6063,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6052,
											"end": 6075,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6048,
											"end": 6080,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 6045,
											"end": 6164,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6045,
											"end": 6164,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 6045,
											"end": 6164,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6083,
											"end": 6162,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 6083,
											"end": 6162,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 6083,
											"end": 6162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6083,
											"end": 6162,
											"name": "tag",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 6083,
											"end": 6162,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6045,
											"end": 6164,
											"name": "tag",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 6045,
											"end": 6164,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6203,
											"end": 6204,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6228,
											"end": 6281,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 6273,
											"end": 6280,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6264,
											"end": 6270,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6253,
											"end": 6262,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6249,
											"end": 6271,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6228,
											"end": 6281,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 6228,
											"end": 6281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6228,
											"end": 6281,
											"name": "tag",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 6228,
											"end": 6281,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6218,
											"end": 6281,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6218,
											"end": 6281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6174,
											"end": 6291,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5969,
											"end": 6298,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5969,
											"end": 6298,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5969,
											"end": 6298,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5969,
											"end": 6298,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5969,
											"end": 6298,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6304,
											"end": 6473,
											"name": "tag",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 6304,
											"end": 6473,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6388,
											"end": 6399,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6422,
											"end": 6428,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6417,
											"end": 6420,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6410,
											"end": 6429,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6462,
											"end": 6466,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6457,
											"end": 6460,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6453,
											"end": 6467,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6438,
											"end": 6467,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6438,
											"end": 6467,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6304,
											"end": 6473,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6304,
											"end": 6473,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6304,
											"end": 6473,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6304,
											"end": 6473,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6304,
											"end": 6473,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6479,
											"end": 6651,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 6479,
											"end": 6651,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6619,
											"end": 6643,
											"name": "PUSH",
											"source": 7,
											"value": "4E46545374616B696E673A206E6F74207374616B656400000000000000000000"
										},
										{
											"begin": 6615,
											"end": 6616,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6607,
											"end": 6613,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6603,
											"end": 6617,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6596,
											"end": 6644,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6479,
											"end": 6651,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6479,
											"end": 6651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6657,
											"end": 7023,
											"name": "tag",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 6657,
											"end": 7023,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6799,
											"end": 6802,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6820,
											"end": 6887,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 6884,
											"end": 6886,
											"name": "PUSH",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 6879,
											"end": 6882,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6820,
											"end": 6887,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 6820,
											"end": 6887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6820,
											"end": 6887,
											"name": "tag",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 6820,
											"end": 6887,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6813,
											"end": 6887,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6813,
											"end": 6887,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6896,
											"end": 6989,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 6985,
											"end": 6988,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6896,
											"end": 6989,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 6896,
											"end": 6989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6896,
											"end": 6989,
											"name": "tag",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 6896,
											"end": 6989,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7014,
											"end": 7016,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7009,
											"end": 7012,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7005,
											"end": 7017,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6998,
											"end": 7017,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6998,
											"end": 7017,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6657,
											"end": 7023,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6657,
											"end": 7023,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6657,
											"end": 7023,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6657,
											"end": 7023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7029,
											"end": 7448,
											"name": "tag",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 7029,
											"end": 7448,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7195,
											"end": 7199,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7233,
											"end": 7235,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7222,
											"end": 7231,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7218,
											"end": 7236,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7210,
											"end": 7236,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7210,
											"end": 7236,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7282,
											"end": 7291,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7280,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7272,
											"end": 7292,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7268,
											"end": 7269,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7257,
											"end": 7266,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7253,
											"end": 7270,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7246,
											"end": 7293,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7310,
											"end": 7441,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 7436,
											"end": 7440,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7310,
											"end": 7441,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 7310,
											"end": 7441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7310,
											"end": 7441,
											"name": "tag",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 7310,
											"end": 7441,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7302,
											"end": 7441,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7302,
											"end": 7441,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7029,
											"end": 7448,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7029,
											"end": 7448,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7029,
											"end": 7448,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7029,
											"end": 7448,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7454,
											"end": 7677,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 7454,
											"end": 7677,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7594,
											"end": 7628,
											"name": "PUSH",
											"source": 7,
											"value": "4E46545374616B696E673A207374616B696E672074696D65206E6F7420726561"
										},
										{
											"begin": 7590,
											"end": 7591,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7582,
											"end": 7588,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7578,
											"end": 7592,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7571,
											"end": 7629,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7663,
											"end": 7669,
											"name": "PUSH",
											"source": 7,
											"value": "6368656400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7658,
											"end": 7660,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7650,
											"end": 7656,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7646,
											"end": 7661,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7639,
											"end": 7670,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7454,
											"end": 7677,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7454,
											"end": 7677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7683,
											"end": 8049,
											"name": "tag",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 7683,
											"end": 8049,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7825,
											"end": 7828,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7846,
											"end": 7913,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 7910,
											"end": 7912,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 7905,
											"end": 7908,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7846,
											"end": 7913,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 7846,
											"end": 7913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7846,
											"end": 7913,
											"name": "tag",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 7846,
											"end": 7913,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7839,
											"end": 7913,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7839,
											"end": 7913,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7922,
											"end": 8015,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 8011,
											"end": 8014,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7922,
											"end": 8015,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 7922,
											"end": 8015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7922,
											"end": 8015,
											"name": "tag",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 7922,
											"end": 8015,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8040,
											"end": 8042,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8035,
											"end": 8038,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8031,
											"end": 8043,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8024,
											"end": 8043,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8024,
											"end": 8043,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7683,
											"end": 8049,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7683,
											"end": 8049,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7683,
											"end": 8049,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7683,
											"end": 8049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8055,
											"end": 8474,
											"name": "tag",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 8055,
											"end": 8474,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8221,
											"end": 8225,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8259,
											"end": 8261,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8248,
											"end": 8257,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8244,
											"end": 8262,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8236,
											"end": 8262,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8236,
											"end": 8262,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8308,
											"end": 8317,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8302,
											"end": 8306,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8298,
											"end": 8318,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8294,
											"end": 8295,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8283,
											"end": 8292,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8279,
											"end": 8296,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8272,
											"end": 8319,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8336,
											"end": 8467,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 8462,
											"end": 8466,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8336,
											"end": 8467,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 8336,
											"end": 8467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8336,
											"end": 8467,
											"name": "tag",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 8336,
											"end": 8467,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8328,
											"end": 8467,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8328,
											"end": 8467,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8055,
											"end": 8474,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8055,
											"end": 8474,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8055,
											"end": 8474,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8055,
											"end": 8474,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8480,
											"end": 8598,
											"name": "tag",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 8480,
											"end": 8598,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8567,
											"end": 8591,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 8585,
											"end": 8590,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8567,
											"end": 8591,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 8567,
											"end": 8591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8567,
											"end": 8591,
											"name": "tag",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 8567,
											"end": 8591,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8562,
											"end": 8565,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8555,
											"end": 8592,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8480,
											"end": 8598,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8480,
											"end": 8598,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8480,
											"end": 8598,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8604,
											"end": 9046,
											"name": "tag",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 8604,
											"end": 9046,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8753,
											"end": 8757,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8791,
											"end": 8793,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 8780,
											"end": 8789,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8776,
											"end": 8794,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8768,
											"end": 8794,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8768,
											"end": 8794,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8804,
											"end": 8875,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 8872,
											"end": 8873,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8861,
											"end": 8870,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8857,
											"end": 8874,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8848,
											"end": 8854,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 8804,
											"end": 8875,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 8804,
											"end": 8875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8804,
											"end": 8875,
											"name": "tag",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 8804,
											"end": 8875,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8885,
											"end": 8957,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 8953,
											"end": 8955,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8942,
											"end": 8951,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8938,
											"end": 8956,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8929,
											"end": 8935,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8885,
											"end": 8957,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 8885,
											"end": 8957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8885,
											"end": 8957,
											"name": "tag",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 8885,
											"end": 8957,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8967,
											"end": 9039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 9035,
											"end": 9037,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9024,
											"end": 9033,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9020,
											"end": 9038,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9011,
											"end": 9017,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8967,
											"end": 9039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 8967,
											"end": 9039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8967,
											"end": 9039,
											"name": "tag",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 8967,
											"end": 9039,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8604,
											"end": 9046,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 8604,
											"end": 9046,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 8604,
											"end": 9046,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8604,
											"end": 9046,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8604,
											"end": 9046,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8604,
											"end": 9046,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8604,
											"end": 9046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9052,
											"end": 9195,
											"name": "tag",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 9052,
											"end": 9195,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9109,
											"end": 9114,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9140,
											"end": 9146,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9134,
											"end": 9147,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9125,
											"end": 9147,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9125,
											"end": 9147,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9156,
											"end": 9189,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 9183,
											"end": 9188,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9156,
											"end": 9189,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 9156,
											"end": 9189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9156,
											"end": 9189,
											"name": "tag",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 9156,
											"end": 9189,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9052,
											"end": 9195,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9052,
											"end": 9195,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9052,
											"end": 9195,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9052,
											"end": 9195,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9052,
											"end": 9195,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9201,
											"end": 9552,
											"name": "tag",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 9201,
											"end": 9552,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9271,
											"end": 9277,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9320,
											"end": 9322,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9308,
											"end": 9317,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9299,
											"end": 9306,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9295,
											"end": 9318,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9291,
											"end": 9323,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 9288,
											"end": 9407,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9288,
											"end": 9407,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 9288,
											"end": 9407,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9326,
											"end": 9405,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 9326,
											"end": 9405,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 9326,
											"end": 9405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9326,
											"end": 9405,
											"name": "tag",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 9326,
											"end": 9405,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9288,
											"end": 9407,
											"name": "tag",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 9288,
											"end": 9407,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9446,
											"end": 9447,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9471,
											"end": 9535,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 9527,
											"end": 9534,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9518,
											"end": 9524,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9507,
											"end": 9516,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 9503,
											"end": 9525,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9471,
											"end": 9535,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 9471,
											"end": 9535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9471,
											"end": 9535,
											"name": "tag",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 9471,
											"end": 9535,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9461,
											"end": 9535,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9461,
											"end": 9535,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9417,
											"end": 9545,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9201,
											"end": 9552,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9201,
											"end": 9552,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9201,
											"end": 9552,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9201,
											"end": 9552,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9201,
											"end": 9552,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9558,
											"end": 9738,
											"name": "tag",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 9558,
											"end": 9738,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9698,
											"end": 9730,
											"name": "PUSH",
											"source": 7,
											"value": "4E46545374616B696E673A206E6F74206F776E6572206F6620746F6B656E0000"
										},
										{
											"begin": 9694,
											"end": 9695,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9686,
											"end": 9692,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9682,
											"end": 9696,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9675,
											"end": 9731,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9558,
											"end": 9738,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9558,
											"end": 9738,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9744,
											"end": 10110,
											"name": "tag",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 9744,
											"end": 10110,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9886,
											"end": 9889,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9907,
											"end": 9974,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 9971,
											"end": 9973,
											"name": "PUSH",
											"source": 7,
											"value": "1E"
										},
										{
											"begin": 9966,
											"end": 9969,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9907,
											"end": 9974,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 9907,
											"end": 9974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9907,
											"end": 9974,
											"name": "tag",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 9907,
											"end": 9974,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9900,
											"end": 9974,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9900,
											"end": 9974,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9983,
											"end": 10076,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 10072,
											"end": 10075,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9983,
											"end": 10076,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 9983,
											"end": 10076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9983,
											"end": 10076,
											"name": "tag",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 9983,
											"end": 10076,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10101,
											"end": 10103,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10096,
											"end": 10099,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10092,
											"end": 10104,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10085,
											"end": 10104,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10085,
											"end": 10104,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9744,
											"end": 10110,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9744,
											"end": 10110,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9744,
											"end": 10110,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9744,
											"end": 10110,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10116,
											"end": 10535,
											"name": "tag",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 10116,
											"end": 10535,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10282,
											"end": 10286,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10320,
											"end": 10322,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10309,
											"end": 10318,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10305,
											"end": 10323,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10297,
											"end": 10323,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10297,
											"end": 10323,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10369,
											"end": 10378,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10363,
											"end": 10367,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10359,
											"end": 10379,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10355,
											"end": 10356,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10344,
											"end": 10353,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10340,
											"end": 10357,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10333,
											"end": 10380,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10397,
											"end": 10528,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 10523,
											"end": 10527,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10397,
											"end": 10528,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 10397,
											"end": 10528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10397,
											"end": 10528,
											"name": "tag",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 10397,
											"end": 10528,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10389,
											"end": 10528,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10389,
											"end": 10528,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10116,
											"end": 10535,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10116,
											"end": 10535,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10116,
											"end": 10535,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10116,
											"end": 10535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10541,
											"end": 10717,
											"name": "tag",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 10541,
											"end": 10717,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10681,
											"end": 10709,
											"name": "PUSH",
											"source": 7,
											"value": "4E46545374616B696E673A20616C7265616479207374616B6564000000000000"
										},
										{
											"begin": 10677,
											"end": 10678,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10669,
											"end": 10675,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10665,
											"end": 10679,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10658,
											"end": 10710,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10541,
											"end": 10717,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10541,
											"end": 10717,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10723,
											"end": 11089,
											"name": "tag",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 10723,
											"end": 11089,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10865,
											"end": 10868,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10886,
											"end": 10953,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 10950,
											"end": 10952,
											"name": "PUSH",
											"source": 7,
											"value": "1A"
										},
										{
											"begin": 10945,
											"end": 10948,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10886,
											"end": 10953,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 10886,
											"end": 10953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10886,
											"end": 10953,
											"name": "tag",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 10886,
											"end": 10953,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10879,
											"end": 10953,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10879,
											"end": 10953,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10962,
											"end": 11055,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 11051,
											"end": 11054,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10962,
											"end": 11055,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 10962,
											"end": 11055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10962,
											"end": 11055,
											"name": "tag",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 10962,
											"end": 11055,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11080,
											"end": 11082,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11075,
											"end": 11078,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11071,
											"end": 11083,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11064,
											"end": 11083,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11064,
											"end": 11083,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10723,
											"end": 11089,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10723,
											"end": 11089,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10723,
											"end": 11089,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10723,
											"end": 11089,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11095,
											"end": 11514,
											"name": "tag",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 11095,
											"end": 11514,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11261,
											"end": 11265,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11299,
											"end": 11301,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11288,
											"end": 11297,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11284,
											"end": 11302,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11276,
											"end": 11302,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11276,
											"end": 11302,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11348,
											"end": 11357,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11342,
											"end": 11346,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11338,
											"end": 11358,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 11334,
											"end": 11335,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11323,
											"end": 11332,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11319,
											"end": 11336,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11312,
											"end": 11359,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11376,
											"end": 11507,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 11502,
											"end": 11506,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11376,
											"end": 11507,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 11376,
											"end": 11507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11376,
											"end": 11507,
											"name": "tag",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 11376,
											"end": 11507,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11368,
											"end": 11507,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11368,
											"end": 11507,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11095,
											"end": 11514,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11095,
											"end": 11514,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11095,
											"end": 11514,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11095,
											"end": 11514,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11520,
											"end": 11694,
											"name": "tag",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 11520,
											"end": 11694,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11660,
											"end": 11686,
											"name": "PUSH",
											"source": 7,
											"value": "4E46545374616B696E673A206E6F7420617070726F7665640000000000000000"
										},
										{
											"begin": 11656,
											"end": 11657,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11648,
											"end": 11654,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11644,
											"end": 11658,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11637,
											"end": 11687,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11520,
											"end": 11694,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11520,
											"end": 11694,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11700,
											"end": 12066,
											"name": "tag",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 11700,
											"end": 12066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11842,
											"end": 11845,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11863,
											"end": 11930,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 11927,
											"end": 11929,
											"name": "PUSH",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 11922,
											"end": 11925,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11863,
											"end": 11930,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 11863,
											"end": 11930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11863,
											"end": 11930,
											"name": "tag",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 11863,
											"end": 11930,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11856,
											"end": 11930,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11856,
											"end": 11930,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11939,
											"end": 12032,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 12028,
											"end": 12031,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11939,
											"end": 12032,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 11939,
											"end": 12032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11939,
											"end": 12032,
											"name": "tag",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 11939,
											"end": 12032,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12057,
											"end": 12059,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12052,
											"end": 12055,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12048,
											"end": 12060,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12041,
											"end": 12060,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12041,
											"end": 12060,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11700,
											"end": 12066,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11700,
											"end": 12066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11700,
											"end": 12066,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11700,
											"end": 12066,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12072,
											"end": 12491,
											"name": "tag",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 12072,
											"end": 12491,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12238,
											"end": 12242,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12276,
											"end": 12278,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12265,
											"end": 12274,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12261,
											"end": 12279,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12253,
											"end": 12279,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12253,
											"end": 12279,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12325,
											"end": 12334,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12319,
											"end": 12323,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12315,
											"end": 12335,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 12311,
											"end": 12312,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12300,
											"end": 12309,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12296,
											"end": 12313,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12289,
											"end": 12336,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12353,
											"end": 12484,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 12479,
											"end": 12483,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12353,
											"end": 12484,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 12353,
											"end": 12484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12353,
											"end": 12484,
											"name": "tag",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 12353,
											"end": 12484,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12345,
											"end": 12484,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12345,
											"end": 12484,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12072,
											"end": 12491,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12072,
											"end": 12491,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12072,
											"end": 12491,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12072,
											"end": 12491,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12497,
											"end": 12678,
											"name": "tag",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 12497,
											"end": 12678,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12637,
											"end": 12670,
											"name": "PUSH",
											"source": 7,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 12633,
											"end": 12634,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12625,
											"end": 12631,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12621,
											"end": 12635,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12614,
											"end": 12671,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12497,
											"end": 12678,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12497,
											"end": 12678,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12684,
											"end": 13050,
											"name": "tag",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 12684,
											"end": 13050,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12826,
											"end": 12829,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12847,
											"end": 12914,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 12911,
											"end": 12913,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 12906,
											"end": 12909,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12847,
											"end": 12914,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 12847,
											"end": 12914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12847,
											"end": 12914,
											"name": "tag",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 12847,
											"end": 12914,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12840,
											"end": 12914,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12840,
											"end": 12914,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12923,
											"end": 13016,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 13012,
											"end": 13015,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12923,
											"end": 13016,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 12923,
											"end": 13016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12923,
											"end": 13016,
											"name": "tag",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 12923,
											"end": 13016,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13041,
											"end": 13043,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13036,
											"end": 13039,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13032,
											"end": 13044,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13025,
											"end": 13044,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13025,
											"end": 13044,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12684,
											"end": 13050,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12684,
											"end": 13050,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12684,
											"end": 13050,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12684,
											"end": 13050,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13056,
											"end": 13475,
											"name": "tag",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 13056,
											"end": 13475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13222,
											"end": 13226,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13260,
											"end": 13262,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13249,
											"end": 13258,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13245,
											"end": 13263,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13237,
											"end": 13263,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13237,
											"end": 13263,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13309,
											"end": 13318,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13303,
											"end": 13307,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13299,
											"end": 13319,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 13295,
											"end": 13296,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13284,
											"end": 13293,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13280,
											"end": 13297,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13273,
											"end": 13320,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13337,
											"end": 13468,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 13463,
											"end": 13467,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13337,
											"end": 13468,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 13337,
											"end": 13468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13337,
											"end": 13468,
											"name": "tag",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 13337,
											"end": 13468,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13329,
											"end": 13468,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13329,
											"end": 13468,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13056,
											"end": 13475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13056,
											"end": 13475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13056,
											"end": 13475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13056,
											"end": 13475,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13481,
											"end": 13661,
											"name": "tag",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 13481,
											"end": 13661,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13529,
											"end": 13606,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13526,
											"end": 13527,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13519,
											"end": 13607,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13626,
											"end": 13630,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 13623,
											"end": 13624,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 13616,
											"end": 13631,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13650,
											"end": 13654,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 13647,
											"end": 13648,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13640,
											"end": 13655,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 13667,
											"end": 13858,
											"name": "tag",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 13667,
											"end": 13858,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13707,
											"end": 13710,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13726,
											"end": 13746,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 13744,
											"end": 13745,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13726,
											"end": 13746,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 13726,
											"end": 13746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13726,
											"end": 13746,
											"name": "tag",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 13726,
											"end": 13746,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13721,
											"end": 13746,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13721,
											"end": 13746,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13760,
											"end": 13780,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 13778,
											"end": 13779,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13760,
											"end": 13780,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 13760,
											"end": 13780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13760,
											"end": 13780,
											"name": "tag",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 13760,
											"end": 13780,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13755,
											"end": 13780,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 13755,
											"end": 13780,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13803,
											"end": 13804,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13800,
											"end": 13801,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13796,
											"end": 13805,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13789,
											"end": 13805,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13789,
											"end": 13805,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13824,
											"end": 13827,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 13821,
											"end": 13822,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13818,
											"end": 13828,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 13815,
											"end": 13851,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 13815,
											"end": 13851,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 13815,
											"end": 13851,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 13831,
											"end": 13849,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 13831,
											"end": 13849,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 13831,
											"end": 13849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13831,
											"end": 13849,
											"name": "tag",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 13831,
											"end": 13849,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13815,
											"end": 13851,
											"name": "tag",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 13815,
											"end": 13851,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13667,
											"end": 13858,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 13667,
											"end": 13858,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13667,
											"end": 13858,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13667,
											"end": 13858,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13667,
											"end": 13858,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13864,
											"end": 14058,
											"name": "tag",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 13864,
											"end": 14058,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13904,
											"end": 13908,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13924,
											"end": 13944,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 13942,
											"end": 13943,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13924,
											"end": 13944,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 13924,
											"end": 13944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13924,
											"end": 13944,
											"name": "tag",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 13924,
											"end": 13944,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13919,
											"end": 13944,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13919,
											"end": 13944,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13958,
											"end": 13978,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 13976,
											"end": 13977,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13958,
											"end": 13978,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 13958,
											"end": 13978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13958,
											"end": 13978,
											"name": "tag",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 13958,
											"end": 13978,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13953,
											"end": 13978,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 13953,
											"end": 13978,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14002,
											"end": 14003,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13999,
											"end": 14000,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13995,
											"end": 14004,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 13987,
											"end": 14004,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13987,
											"end": 14004,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14026,
											"end": 14027,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14020,
											"end": 14024,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14017,
											"end": 14028,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 14014,
											"end": 14051,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 14014,
											"end": 14051,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 14014,
											"end": 14051,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 14031,
											"end": 14049,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 14031,
											"end": 14049,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 14031,
											"end": 14049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14031,
											"end": 14049,
											"name": "tag",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 14031,
											"end": 14049,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14014,
											"end": 14051,
											"name": "tag",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 14014,
											"end": 14051,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13864,
											"end": 14058,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 13864,
											"end": 14058,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13864,
											"end": 14058,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13864,
											"end": 14058,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13864,
											"end": 14058,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14064,
											"end": 14474,
											"name": "tag",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 14064,
											"end": 14474,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14104,
											"end": 14111,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14127,
											"end": 14147,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 14145,
											"end": 14146,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14127,
											"end": 14147,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 14127,
											"end": 14147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14127,
											"end": 14147,
											"name": "tag",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 14127,
											"end": 14147,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14122,
											"end": 14147,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14122,
											"end": 14147,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14161,
											"end": 14181,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 14179,
											"end": 14180,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14161,
											"end": 14181,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 14161,
											"end": 14181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14161,
											"end": 14181,
											"name": "tag",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 14161,
											"end": 14181,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14156,
											"end": 14181,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 14156,
											"end": 14181,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14216,
											"end": 14217,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14213,
											"end": 14214,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14209,
											"end": 14218,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 14238,
											"end": 14268,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 14256,
											"end": 14267,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14238,
											"end": 14268,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 14238,
											"end": 14268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14238,
											"end": 14268,
											"name": "tag",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 14238,
											"end": 14268,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14227,
											"end": 14268,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14227,
											"end": 14268,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14417,
											"end": 14418,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14408,
											"end": 14415,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14404,
											"end": 14419,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 14401,
											"end": 14402,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 14398,
											"end": 14420,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 14378,
											"end": 14379,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14371,
											"end": 14380,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 14351,
											"end": 14434,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 14328,
											"end": 14467,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 14328,
											"end": 14467,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 14447,
											"end": 14465,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 14447,
											"end": 14465,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 14447,
											"end": 14465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14447,
											"end": 14465,
											"name": "tag",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 14447,
											"end": 14465,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14328,
											"end": 14467,
											"name": "tag",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 14328,
											"end": 14467,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14112,
											"end": 14474,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14064,
											"end": 14474,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 14064,
											"end": 14474,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14064,
											"end": 14474,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14064,
											"end": 14474,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14064,
											"end": 14474,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14480,
											"end": 14660,
											"name": "tag",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 14480,
											"end": 14660,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14528,
											"end": 14605,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14525,
											"end": 14526,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14518,
											"end": 14606,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14625,
											"end": 14629,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 14622,
											"end": 14623,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 14615,
											"end": 14630,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14649,
											"end": 14653,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 14646,
											"end": 14647,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14639,
											"end": 14654,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 14666,
											"end": 14851,
											"name": "tag",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 14666,
											"end": 14851,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14706,
											"end": 14707,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14723,
											"end": 14743,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 14741,
											"end": 14742,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14723,
											"end": 14743,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 14723,
											"end": 14743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14723,
											"end": 14743,
											"name": "tag",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 14723,
											"end": 14743,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14718,
											"end": 14743,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14718,
											"end": 14743,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14757,
											"end": 14777,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 14775,
											"end": 14776,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14757,
											"end": 14777,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 14757,
											"end": 14777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14757,
											"end": 14777,
											"name": "tag",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 14757,
											"end": 14777,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14752,
											"end": 14777,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 14752,
											"end": 14777,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14796,
											"end": 14797,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14786,
											"end": 14821,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 14786,
											"end": 14821,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 14801,
											"end": 14819,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 14801,
											"end": 14819,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 14801,
											"end": 14819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14801,
											"end": 14819,
											"name": "tag",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 14801,
											"end": 14819,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14786,
											"end": 14821,
											"name": "tag",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 14786,
											"end": 14821,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14843,
											"end": 14844,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14840,
											"end": 14841,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14836,
											"end": 14845,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 14831,
											"end": 14845,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14831,
											"end": 14845,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14666,
											"end": 14851,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 14666,
											"end": 14851,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14666,
											"end": 14851,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14666,
											"end": 14851,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14666,
											"end": 14851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"Staking Contract/StakingNFT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DECIMALS()": "2e0f2625",
							"MINIMUM_STAKING_TIME()": "02657ad0",
							"REWARD_RATE()": "5997bb37",
							"claimReward()": "b88a802f",
							"nft()": "47ccca02",
							"onERC721Received(address,address,uint256,bytes)": "150b7a02",
							"stake(uint256)": "a694fc3a",
							"stakes(address)": "16934fc4",
							"unstake()": "2def6620"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"RewardClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stakedTime\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"Unstaked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DECIMALS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINIMUM_STAKING_TIME\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REWARD_RATE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nft\",\"outputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakedTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastClaimedTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Staking Contract/StakingNFT.sol\":\"NFTStaking\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ce8dfb62d0c4fa260d6eec8f1cd47f5f2a044e11bde5b31d18072fa6e7d9010\",\"dweb:/ipfs/QmTyFztU3tLEcEDnqqiaW4UJetqsU77LXc6pjc9oTXCK5u\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"Staking Contract/StakingNFT.sol\":{\"keccak256\":\"0x8e89e38c1ae7644c2d4b18b1f9af333d07abf7ae70c76ac25b7241e72ea82f22\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://57c1733a0b1110130226ab86094bff021ffe4c8259fac02e9f17b4bcbd9c4d13\",\"dweb:/ipfs/QmXUCzDxmvgBx4VctW7xc1zDQ94i8iVo3LyMuwDRjZLSdU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 10,
								"contract": "Staking Contract/StakingNFT.sol:NFTStaking",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 879,
								"contract": "Staking Contract/StakingNFT.sol:NFTStaking",
								"label": "nft",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC721)169"
							},
							{
								"astId": 884,
								"contract": "Staking Contract/StakingNFT.sol:NFTStaking",
								"label": "stakes",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_struct(Stake)876_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC721)169": {
								"encoding": "inplace",
								"label": "contract IERC721",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(Stake)876_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct NFTStaking.Stake)",
								"numberOfBytes": "32",
								"value": "t_struct(Stake)876_storage"
							},
							"t_struct(Stake)876_storage": {
								"encoding": "inplace",
								"label": "struct NFTStaking.Stake",
								"members": [
									{
										"astId": 869,
										"contract": "Staking Contract/StakingNFT.sol:NFTStaking",
										"label": "tokenId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 871,
										"contract": "Staking Contract/StakingNFT.sol:NFTStaking",
										"label": "stakedTime",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 873,
										"contract": "Staking Contract/StakingNFT.sol:NFTStaking",
										"label": "lastClaimedTime",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 875,
										"contract": "Staking Contract/StakingNFT.sol:NFTStaking",
										"label": "active",
										"offset": 0,
										"slot": "3",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "128"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "8760",
				"formattedMessage": "Warning: This declaration has the same name as another declaration.\n  --> Staking Contract/StakingNFT.sol:48:9:\n   |\n48 |         Stake storage stake = stakes[msg.sender];\n   |         ^^^^^^^^^^^^^^^^^^^\nNote: The other declaration is here:\n  --> Staking Contract/StakingNFT.sol:36:5:\n   |\n36 |     function stake(uint256 _tokenId) external nonReentrant {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "This declaration has the same name as another declaration.",
				"secondarySourceLocations": [
					{
						"end": 1723,
						"file": "Staking Contract/StakingNFT.sol",
						"message": "The other declaration is here:",
						"start": 1186
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 1799,
					"file": "Staking Contract/StakingNFT.sol",
					"start": 1780
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "8760",
				"formattedMessage": "Warning: This declaration has the same name as another declaration.\n  --> Staking Contract/StakingNFT.sol:60:9:\n   |\n60 |         Stake storage stake = stakes[msg.sender];\n   |         ^^^^^^^^^^^^^^^^^^^\nNote: The other declaration is here:\n  --> Staking Contract/StakingNFT.sol:36:5:\n   |\n36 |     function stake(uint256 _tokenId) external nonReentrant {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "This declaration has the same name as another declaration.",
				"secondarySourceLocations": [
					{
						"end": 1723,
						"file": "Staking Contract/StakingNFT.sol",
						"message": "The other declaration is here:",
						"start": 1186
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 2312,
					"file": "Staking Contract/StakingNFT.sol",
					"start": 2293
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> Staking Contract/StakingNFT.sol:69:30:\n   |\n69 |     function calculateReward(address _owner, Stake storage _stake) internal view returns (uint256) {\n   |                              ^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 2617,
					"file": "Staking Contract/StakingNFT.sol",
					"start": 2603
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							53
						]
					},
					"id": 54,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:0",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 53,
							"linearizedBaseContracts": [
								53
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 5,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 53,
									"src": "1676:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 4,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 8,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 53,
									"src": "1723:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 6,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 7,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 10,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 53,
									"src": "1767:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 9,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 17,
										"nodeType": "Block",
										"src": "1811:39:0",
										"statements": [
											{
												"expression": {
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 13,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "1821:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 14,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "1831:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 16,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:0"
											}
										]
									},
									"id": 18,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:0"
									},
									"scope": 53,
									"src": "1797:53:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 28,
										"nodeType": "Block",
										"src": "2251:79:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 21,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 44,
														"src": "2261:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 23,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:0"
											},
											{
												"id": 24,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 25,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 52,
														"src": "2303:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 27,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:0"
											}
										]
									},
									"documentation": {
										"id": 19,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:0",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 29,
									"name": "nonReentrant",
									"nameLocation": "2236:12:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:0"
									},
									"src": "2227:103:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "2375:248:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 35,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 33,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "2468:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 34,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 8,
																"src": "2479:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 36,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 32,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 38,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:0"
											},
											{
												"expression": {
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 39,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2598:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 40,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "2608:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:0"
											}
										]
									},
									"id": 44,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:0"
									},
									"scope": 53,
									"src": "2336:287:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 51,
										"nodeType": "Block",
										"src": "2667:171:0",
										"statements": [
											{
												"expression": {
													"id": 49,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 47,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2809:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 48,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "2819:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 50,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:0"
											}
										]
									},
									"id": 52,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:0"
									},
									"returnParameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:0"
									},
									"scope": 53,
									"src": "2629:209:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 54,
							"src": "888:1952:0",
							"usedErrors": []
						}
					],
					"src": "112:2729:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							529
						],
						"IERC721": [
							169
						]
					},
					"id": 170,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 55,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 56,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 170,
							"sourceUnit": 530,
							"src": "133:47:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 58,
										"name": "IERC165",
										"nameLocations": [
											"271:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 529,
										"src": "271:7:1"
									},
									"id": 59,
									"nodeType": "InheritanceSpecifier",
									"src": "271:7:1"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 57,
								"nodeType": "StructuredDocumentation",
								"src": "182:67:1",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 169,
							"linearizedBaseContracts": [
								169,
								529
							],
							"name": "IERC721",
							"nameLocation": "260:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 60,
										"nodeType": "StructuredDocumentation",
										"src": "285:88:1",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 68,
									"name": "Transfer",
									"nameLocation": "384:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "409:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "393:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "393:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 64,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "431:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "415:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "415:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 66,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "451:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "435:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 65,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "435:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "392:67:1"
									},
									"src": "378:82:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "466:94:1",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 77,
									"name": "Approval",
									"nameLocation": "571:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "596:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 77,
												"src": "580:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "580:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 73,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "619:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 77,
												"src": "603:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "645:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 77,
												"src": "629:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 74,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "629:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "579:74:1"
									},
									"src": "565:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 78,
										"nodeType": "StructuredDocumentation",
										"src": "660:117:1",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 86,
									"name": "ApprovalForAll",
									"nameLocation": "788:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "819:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "803:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 79,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 82,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "842:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "826:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 81,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "826:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 84,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "857:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "852:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 83,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "852:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:64:1"
									},
									"src": "782:85:1"
								},
								{
									"documentation": {
										"id": 87,
										"nodeType": "StructuredDocumentation",
										"src": "873:76:1",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 94,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "963:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "981:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "973:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 88,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "973:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "972:15:1"
									},
									"returnParameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1019:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "1011:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 91,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:17:1"
									},
									"scope": 169,
									"src": "954:74:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 95,
										"nodeType": "StructuredDocumentation",
										"src": "1034:131:1",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 102,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1179:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1195:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "1187:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1187:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1186:17:1"
									},
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1235:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "1227:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 99,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1226:15:1"
									},
									"scope": 169,
									"src": "1170:72:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 103,
										"nodeType": "StructuredDocumentation",
										"src": "1248:556:1",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 114,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1818:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1852:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "1844:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1844:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1874:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "1866:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1866:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "1886:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1926:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "1911:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 110,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1911:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1834:102:1"
									},
									"returnParameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1945:0:1"
									},
									"scope": 169,
									"src": "1809:137:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 115,
										"nodeType": "StructuredDocumentation",
										"src": "1952:687:1",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 124,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2653:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2687:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "2679:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2709:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "2701:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 118,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2729:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "2721:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 120,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2721:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2669:73:1"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2751:0:1"
									},
									"scope": 169,
									"src": "2644:108:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 125,
										"nodeType": "StructuredDocumentation",
										"src": "2758:732:1",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 134,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3504:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3534:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "3526:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3526:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3556:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "3548:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3548:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3576:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "3568:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3568:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3516:73:1"
									},
									"returnParameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3598:0:1"
									},
									"scope": 169,
									"src": "3495:104:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 135,
										"nodeType": "StructuredDocumentation",
										"src": "3605:452:1",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 142,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4071:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4087:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "4079:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4079:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4099:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "4091:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4091:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4078:29:1"
									},
									"returnParameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4116:0:1"
									},
									"scope": 169,
									"src": "4062:55:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 143,
										"nodeType": "StructuredDocumentation",
										"src": "4123:309:1",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 150,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4446:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4472:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "4464:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4464:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "4487:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "4482:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 146,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4482:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4463:34:1"
									},
									"returnParameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4506:0:1"
									},
									"scope": 169,
									"src": "4437:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "4513:139:1",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 158,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4666:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4686:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "4678:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 152,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4678:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4677:17:1"
									},
									"returnParameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4726:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "4718:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4718:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4717:18:1"
									},
									"scope": 169,
									"src": "4657:79:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "4742:138:1",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 168,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4894:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4919:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "4911:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4911:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4934:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "4926:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4926:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4910:33:1"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "4967:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 165,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4967:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4966:6:1"
									},
									"scope": 169,
									"src": "4885:88:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 170,
							"src": "250:4725:1",
							"usedErrors": []
						}
					],
					"src": "108:4868:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							187
						]
					},
					"id": 188,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 171,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "116:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 172,
								"nodeType": "StructuredDocumentation",
								"src": "141:152:2",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 187,
							"linearizedBaseContracts": [
								187
							],
							"name": "IERC721Receiver",
							"nameLocation": "304:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 173,
										"nodeType": "StructuredDocumentation",
										"src": "326:493:2",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 186,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "833:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "867:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "859:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "859:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "893:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "885:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "885:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "915:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "907:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "947:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "932:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 180,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "932:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:108:2"
									},
									"returnParameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "976:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 183,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "976:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "975:8:2"
									},
									"scope": 187,
									"src": "824:160:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 188,
							"src": "294:692:2",
							"usedErrors": []
						}
					],
					"src": "116:871:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							517
						]
					},
					"id": 518,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 189,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:3",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 517,
							"linearizedBaseContracts": [
								517
							],
							"name": "Address",
							"nameLocation": "202:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 204,
										"nodeType": "Block",
										"src": "1241:254:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 198,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 193,
																"src": "1465:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 199,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1473:4:3",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 200,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1478:6:3",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 201,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 197,
												"id": 203,
												"nodeType": "Return",
												"src": "1458:30:3"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:3",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "1195:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:3"
									},
									"returnParameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "1235:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 195,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:3"
									},
									"scope": 517,
									"src": "1175:320:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 238,
										"nodeType": "Block",
										"src": "2483:241:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 220,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 216,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$517",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$517",
																				"typeString": "library Address"
																			}
																		],
																		"id": 215,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 214,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 217,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 218,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2515:7:3",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 219,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 210,
																"src": "2526:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 221,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 213,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 223,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:3"
											},
											{
												"assignments": [
													225,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 225,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 238,
														"src": "2578:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 224,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 232,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 230,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 226,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 208,
																"src": "2596:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2606:4:3",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 229,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 228,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 210,
																"src": "2618:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 234,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 225,
															"src": "2647:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 235,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 233,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 237,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:3"
											}
										]
									},
									"documentation": {
										"id": 206,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:3",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "2431:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:3",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "2458:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:3"
									},
									"returnParameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:3"
									},
									"scope": 517,
									"src": "2412:312:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 256,
										"nodeType": "Block",
										"src": "3555:96:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 250,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "3594:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 251,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 244,
															"src": "3602:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3608:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 253,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3611:32:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 249,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															297,
															341
														],
														"referencedDeclaration": 341,
														"src": "3572:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:72:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 248,
												"id": 255,
												"nodeType": "Return",
												"src": "3565:79:3"
											}
										]
									},
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:3",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 257,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "3488:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "3504:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 243,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:3"
									},
									"returnParameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "3541:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 246,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:3"
									},
									"scope": 517,
									"src": "3466:185:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 276,
										"nodeType": "Block",
										"src": "4020:76:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 270,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "4059:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 271,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 262,
															"src": "4067:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 272,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4073:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 273,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "4076:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 269,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															297,
															341
														],
														"referencedDeclaration": 341,
														"src": "4037:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4037:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 268,
												"id": 275,
												"nodeType": "Return",
												"src": "4030:59:3"
											}
										]
									},
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "3657:211:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 277,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3882:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3912:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "3904:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3904:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3941:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "3928:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 261,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3928:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3969:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "3955:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 263,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3955:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3894:93:3"
									},
									"returnParameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "4006:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 266,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4006:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4005:14:3"
									},
									"scope": 517,
									"src": "3873:223:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 296,
										"nodeType": "Block",
										"src": "4601:111:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 290,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 280,
															"src": "4640:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 291,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 282,
															"src": "4648:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 292,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 284,
															"src": "4654:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 293,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4661:43:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 289,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															297,
															341
														],
														"referencedDeclaration": 341,
														"src": "4618:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4618:87:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 288,
												"id": 295,
												"nodeType": "Return",
												"src": "4611:94:3"
											}
										]
									},
									"documentation": {
										"id": 278,
										"nodeType": "StructuredDocumentation",
										"src": "4102:351:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4467:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4506:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "4498:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 279,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4498:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4535:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "4522:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 281,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4522:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4557:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "4549:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4549:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4488:80:3"
									},
									"returnParameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "4587:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 286,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4587:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4586:14:3"
									},
									"scope": 517,
									"src": "4458:254:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 340,
										"nodeType": "Block",
										"src": "5139:267:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 318,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 314,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5165:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$517",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$517",
																				"typeString": "library Address"
																			}
																		],
																		"id": 313,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5157:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 312,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5157:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 315,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5157:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 316,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5171:7:3",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5157:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 317,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 304,
																"src": "5182:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5157:30:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 319,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5189:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 311,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5149:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5149:81:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 321,
												"nodeType": "ExpressionStatement",
												"src": "5149:81:3"
											},
											{
												"assignments": [
													323,
													325
												],
												"declarations": [
													{
														"constant": false,
														"id": 323,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5246:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 340,
														"src": "5241:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 322,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5241:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 325,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5268:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 340,
														"src": "5255:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 324,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5255:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 332,
												"initialValue": {
													"arguments": [
														{
															"id": 330,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "5308:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 326,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 300,
																"src": "5282:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 327,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5289:4:3",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5282:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 329,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 328,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 304,
																"src": "5301:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5282:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5282:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5240:73:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 334,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 300,
															"src": "5357:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 335,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 323,
															"src": "5365:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 336,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 325,
															"src": "5374:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 337,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 306,
															"src": "5386:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 333,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 472,
														"src": "5330:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5330:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 310,
												"id": 339,
												"nodeType": "Return",
												"src": "5323:76:3"
											}
										]
									},
									"documentation": {
										"id": 298,
										"nodeType": "StructuredDocumentation",
										"src": "4718:237:3",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 341,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4969:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5008:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "5000:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5037:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "5024:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 301,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5024:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5059:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "5051:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 303,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5051:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5088:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "5074:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 305,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5074:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4990:116:3"
									},
									"returnParameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "5125:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 308,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5125:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5124:14:3"
									},
									"scope": 517,
									"src": "4960:446:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 357,
										"nodeType": "Block",
										"src": "5683:97:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 352,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "5719:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 353,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 346,
															"src": "5727:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 354,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5733:39:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 351,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															358,
															387
														],
														"referencedDeclaration": 387,
														"src": "5700:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5700:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 350,
												"id": 356,
												"nodeType": "Return",
												"src": "5693:80:3"
											}
										]
									},
									"documentation": {
										"id": 342,
										"nodeType": "StructuredDocumentation",
										"src": "5412:166:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 358,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5592:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5619:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "5611:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5611:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5640:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "5627:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 345,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5627:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5610:35:3"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "5669:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 348,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5669:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5668:14:3"
									},
									"scope": 517,
									"src": "5583:197:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 386,
										"nodeType": "Block",
										"src": "6122:168:3",
										"statements": [
											{
												"assignments": [
													371,
													373
												],
												"declarations": [
													{
														"constant": false,
														"id": 371,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6138:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 386,
														"src": "6133:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 370,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6133:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 373,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6160:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 386,
														"src": "6147:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 372,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6147:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 378,
												"initialValue": {
													"arguments": [
														{
															"id": 376,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "6192:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 374,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 361,
															"src": "6174:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 375,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6181:10:3",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6174:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6174:23:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6132:65:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 380,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 361,
															"src": "6241:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 381,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 371,
															"src": "6249:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 382,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 373,
															"src": "6258:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 383,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "6270:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 379,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 472,
														"src": "6214:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6214:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 369,
												"id": 385,
												"nodeType": "Return",
												"src": "6207:76:3"
											}
										]
									},
									"documentation": {
										"id": 359,
										"nodeType": "StructuredDocumentation",
										"src": "5786:173:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5973:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6009:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "6001:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 360,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6001:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6038:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "6025:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 362,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6025:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6066:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "6052:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 364,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6052:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5991:93:3"
									},
									"returnParameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "6108:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 367,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6108:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6107:14:3"
									},
									"scope": 517,
									"src": "5964:326:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 403,
										"nodeType": "Block",
										"src": "6566:101:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 398,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "6604:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 399,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "6612:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 400,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6618:41:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 397,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															404,
															433
														],
														"referencedDeclaration": 433,
														"src": "6583:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6583:77:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 396,
												"id": 402,
												"nodeType": "Return",
												"src": "6576:84:3"
											}
										]
									},
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "6296:168:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 404,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6478:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6507:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "6499:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6499:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6528:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "6515:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 391,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6515:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6498:35:3"
									},
									"returnParameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "6552:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 394,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6552:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6551:14:3"
									},
									"scope": 517,
									"src": "6469:198:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 432,
										"nodeType": "Block",
										"src": "7008:170:3",
										"statements": [
											{
												"assignments": [
													417,
													419
												],
												"declarations": [
													{
														"constant": false,
														"id": 417,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7024:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 432,
														"src": "7019:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 416,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7019:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 419,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7046:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 432,
														"src": "7033:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 418,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7033:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 424,
												"initialValue": {
													"arguments": [
														{
															"id": 422,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "7080:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 420,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "7060:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 421,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7067:12:3",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7060:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7060:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7018:67:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 426,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "7129:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 427,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "7137:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 428,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 419,
															"src": "7146:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 429,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 411,
															"src": "7158:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 425,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 472,
														"src": "7102:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7102:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 415,
												"id": 431,
												"nodeType": "Return",
												"src": "7095:76:3"
											}
										]
									},
									"documentation": {
										"id": 405,
										"nodeType": "StructuredDocumentation",
										"src": "6673:175:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 433,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6862:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6900:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "6892:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 406,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6892:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6929:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "6916:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 408,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6916:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6957:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "6943:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 410,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6943:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6882:93:3"
									},
									"returnParameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "6994:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 413,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6994:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6993:14:3"
									},
									"scope": 517,
									"src": "6853:325:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 471,
										"nodeType": "Block",
										"src": "7660:434:3",
										"statements": [
											{
												"condition": {
													"id": 447,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 438,
													"src": "7674:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 469,
													"nodeType": "Block",
													"src": "8030:58:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 465,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 440,
																		"src": "8052:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 466,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 442,
																		"src": "8064:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 464,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 516,
																	"src": "8044:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 467,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8044:33:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 468,
															"nodeType": "ExpressionStatement",
															"src": "8044:33:3"
														}
													]
												},
												"id": 470,
												"nodeType": "IfStatement",
												"src": "7670:418:3",
												"trueBody": {
													"id": 463,
													"nodeType": "Block",
													"src": "7683:341:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 451,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 448,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 440,
																		"src": "7701:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 449,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7712:6:3",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7701:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 450,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7722:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7701:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 460,
															"nodeType": "IfStatement",
															"src": "7697:286:3",
															"trueBody": {
																"id": 459,
																"nodeType": "Block",
																"src": "7725:258:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 454,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 436,
																							"src": "7927:6:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 453,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 205,
																						"src": "7916:10:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 455,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "7916:18:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 456,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7936:31:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 452,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "7908:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 457,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7908:60:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 458,
																		"nodeType": "ExpressionStatement",
																		"src": "7908:60:3"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 461,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 440,
																"src": "8003:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 446,
															"id": 462,
															"nodeType": "Return",
															"src": "7996:17:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 434,
										"nodeType": "StructuredDocumentation",
										"src": "7184:277:3",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 472,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7475:26:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7519:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "7511:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7511:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7540:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "7535:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 437,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7535:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7570:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "7557:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 439,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7557:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7604:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "7590:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 441,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7590:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7501:121:3"
									},
									"returnParameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "7646:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 444,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7646:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7645:14:3"
									},
									"scope": 517,
									"src": "7466:628:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 495,
										"nodeType": "Block",
										"src": "8475:135:3",
										"statements": [
											{
												"condition": {
													"id": 484,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 475,
													"src": "8489:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 493,
													"nodeType": "Block",
													"src": "8546:58:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 489,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 477,
																		"src": "8568:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 490,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 479,
																		"src": "8580:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 488,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 516,
																	"src": "8560:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 491,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8560:33:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 492,
															"nodeType": "ExpressionStatement",
															"src": "8560:33:3"
														}
													]
												},
												"id": 494,
												"nodeType": "IfStatement",
												"src": "8485:119:3",
												"trueBody": {
													"id": 487,
													"nodeType": "Block",
													"src": "8498:42:3",
													"statements": [
														{
															"expression": {
																"id": 485,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 477,
																"src": "8519:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 483,
															"id": 486,
															"nodeType": "Return",
															"src": "8512:17:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 473,
										"nodeType": "StructuredDocumentation",
										"src": "8100:210:3",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 496,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8324:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8355:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "8350:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 474,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8350:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8385:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "8372:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 476,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8372:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8419:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "8405:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 478,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8405:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8340:97:3"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "8461:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 481,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8461:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8460:14:3"
									},
									"scope": 517,
									"src": "8315:295:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 515,
										"nodeType": "Block",
										"src": "8699:457:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 503,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 498,
															"src": "8775:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 504,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8786:6:3",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8775:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 505,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8795:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8775:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 513,
													"nodeType": "Block",
													"src": "9105:45:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 510,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 500,
																		"src": "9126:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 509,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9119:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 511,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9119:20:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 512,
															"nodeType": "ExpressionStatement",
															"src": "9119:20:3"
														}
													]
												},
												"id": 514,
												"nodeType": "IfStatement",
												"src": "8771:379:3",
												"trueBody": {
													"id": 508,
													"nodeType": "Block",
													"src": "8798:301:3",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "8956:133:3",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "8974:40:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "9003:10:3"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "8997:5:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8997:17:3"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "8978:15:3",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9042:2:3",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "9046:10:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9038:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9038:19:3"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "9059:15:3"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9031:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9031:44:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9031:44:3"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "paris",
															"externalReferences": [
																{
																	"declaration": 498,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9003:10:3",
																	"valueSize": 1
																},
																{
																	"declaration": 498,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9046:10:3",
																	"valueSize": 1
																}
															],
															"id": 507,
															"nodeType": "InlineAssembly",
															"src": "8947:142:3"
														}
													]
												}
											}
										]
									},
									"id": 516,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8625:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8646:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "8633:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 497,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8633:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8672:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "8658:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 499,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8658:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8632:53:3"
									},
									"returnParameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8699:0:3"
									},
									"scope": 517,
									"src": "8616:540:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 518,
							"src": "194:8964:3",
							"usedErrors": []
						}
					],
					"src": "101:9058:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							529
						]
					},
					"id": 530,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 519,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 520,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:4",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 529,
							"linearizedBaseContracts": [
								529
							],
							"name": "IERC165",
							"nameLocation": "415:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 521,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:4",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 528,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "801:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 522,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:4"
									},
									"returnParameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "844:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 525,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:4"
									},
									"scope": 529,
									"src": "774:76:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 530,
							"src": "405:447:4",
							"usedErrors": []
						}
					],
					"src": "100:753:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							841
						]
					},
					"id": 842,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 531,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 532,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:5",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 841,
							"linearizedBaseContracts": [
								841
							],
							"name": "SafeMath",
							"nameLocation": "490:8:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 563,
										"nodeType": "Block",
										"src": "717:140:5",
										"statements": [
											{
												"id": 562,
												"nodeType": "UncheckedBlock",
												"src": "727:124:5",
												"statements": [
													{
														"assignments": [
															545
														],
														"declarations": [
															{
																"constant": false,
																"id": 545,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:5",
																"nodeType": "VariableDeclaration",
																"scope": 562,
																"src": "751:9:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 544,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 549,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 548,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 546,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 535,
																"src": "763:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 547,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 537,
																"src": "767:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:5"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 550,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "786:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 551,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 535,
																"src": "790:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 557,
														"nodeType": "IfStatement",
														"src": "782:28:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 553,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 554,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 555,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 543,
															"id": 556,
															"nodeType": "Return",
															"src": "793:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 558,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 559,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 545,
																	"src": "838:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 560,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 543,
														"id": 561,
														"nodeType": "Return",
														"src": "824:16:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 533,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:5",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 564,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "657:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 534,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "668:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 536,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:5"
									},
									"returnParameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "702:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 539,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "708:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 541,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:5"
									},
									"scope": 841,
									"src": "641:216:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 591,
										"nodeType": "Block",
										"src": "1078:113:5",
										"statements": [
											{
												"id": 590,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 578,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 576,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 569,
																"src": "1116:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 577,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 567,
																"src": "1120:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 583,
														"nodeType": "IfStatement",
														"src": "1112:28:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 580,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 581,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 575,
															"id": 582,
															"nodeType": "Return",
															"src": "1123:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 584,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 587,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 585,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 567,
																		"src": "1168:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 586,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 569,
																		"src": "1172:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 588,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 575,
														"id": 589,
														"nodeType": "Return",
														"src": "1154:20:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 565,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:5",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 592,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 592,
												"src": "1018:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 566,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 592,
												"src": "1029:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 568,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:5"
									},
									"returnParameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 592,
												"src": "1063:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 571,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 592,
												"src": "1069:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 573,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:5"
									},
									"scope": 841,
									"src": "1002:189:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 633,
										"nodeType": "Block",
										"src": "1415:417:5",
										"statements": [
											{
												"id": 632,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 606,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 604,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 595,
																"src": "1683:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 605,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 611,
														"nodeType": "IfStatement",
														"src": "1679:28:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 607,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 608,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 609,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 603,
															"id": 610,
															"nodeType": "Return",
															"src": "1691:16:5"
														}
													},
													{
														"assignments": [
															613
														],
														"declarations": [
															{
																"constant": false,
																"id": 613,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:5",
																"nodeType": "VariableDeclaration",
																"scope": 632,
																"src": "1721:9:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 612,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 617,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 614,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 595,
																"src": "1733:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 615,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 597,
																"src": "1737:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:5"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 622,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 620,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 618,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "1756:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 619,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 595,
																	"src": "1760:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 621,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 597,
																"src": "1765:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 627,
														"nodeType": "IfStatement",
														"src": "1752:33:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 623,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 625,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 603,
															"id": 626,
															"nodeType": "Return",
															"src": "1768:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 628,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 629,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "1813:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 630,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 603,
														"id": 631,
														"nodeType": "Return",
														"src": "1799:16:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 593,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:5",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 634,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 634,
												"src": "1355:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 594,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 634,
												"src": "1366:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 596,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:5"
									},
									"returnParameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 634,
												"src": "1400:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 599,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 634,
												"src": "1406:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 601,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:5"
									},
									"scope": 841,
									"src": "1339:493:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 661,
										"nodeType": "Block",
										"src": "2057:114:5",
										"statements": [
											{
												"id": 660,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 648,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 646,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 639,
																"src": "2095:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 647,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 653,
														"nodeType": "IfStatement",
														"src": "2091:29:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 649,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 650,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 651,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 645,
															"id": 652,
															"nodeType": "Return",
															"src": "2103:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 654,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 657,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 655,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 637,
																		"src": "2148:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 656,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 639,
																		"src": "2152:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 658,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 645,
														"id": 659,
														"nodeType": "Return",
														"src": "2134:20:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 635,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:5",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 662,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "1997:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 636,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "2008:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 638,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:5"
									},
									"returnParameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "2042:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 641,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "2048:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:5"
									},
									"scope": 841,
									"src": "1981:190:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "2406:114:5",
										"statements": [
											{
												"id": 688,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 676,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 674,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 667,
																"src": "2444:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 675,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 681,
														"nodeType": "IfStatement",
														"src": "2440:29:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 677,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 678,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 679,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 673,
															"id": 680,
															"nodeType": "Return",
															"src": "2452:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 682,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 685,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 683,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 665,
																		"src": "2497:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 684,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 667,
																		"src": "2501:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 686,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 673,
														"id": 687,
														"nodeType": "Return",
														"src": "2483:20:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 663,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "2346:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 664,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "2357:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 666,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:5"
									},
									"returnParameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "2391:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 669,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "2397:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 671,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:5"
									},
									"scope": 841,
									"src": "2330:190:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 704,
										"nodeType": "Block",
										"src": "2822:29:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 700,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "2839:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 701,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "2843:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 699,
												"id": 703,
												"nodeType": "Return",
												"src": "2832:12:5"
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:5",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 705,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "2768:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 692,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "2779:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 694,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:5"
									},
									"returnParameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 698,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "2813:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 697,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:5"
									},
									"scope": 841,
									"src": "2755:96:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 719,
										"nodeType": "Block",
										"src": "3189:29:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 715,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 708,
														"src": "3206:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 716,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 710,
														"src": "3210:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 714,
												"id": 718,
												"nodeType": "Return",
												"src": "3199:12:5"
											}
										]
									},
									"documentation": {
										"id": 706,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:5",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 720,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "3135:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 707,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "3146:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 709,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:5"
									},
									"returnParameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "3180:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 712,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:5"
									},
									"scope": 841,
									"src": "3122:96:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 734,
										"nodeType": "Block",
										"src": "3532:29:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 730,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 723,
														"src": "3549:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 731,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 725,
														"src": "3553:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 729,
												"id": 733,
												"nodeType": "Return",
												"src": "3542:12:5"
											}
										]
									},
									"documentation": {
										"id": 721,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:5",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 735,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "3478:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "3489:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 724,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:5"
									},
									"returnParameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "3523:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 727,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:5"
									},
									"scope": 841,
									"src": "3465:96:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "3917:29:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 745,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 738,
														"src": "3934:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 746,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 740,
														"src": "3938:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 744,
												"id": 748,
												"nodeType": "Return",
												"src": "3927:12:5"
											}
										]
									},
									"documentation": {
										"id": 736,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:5",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "3863:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 737,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "3874:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 739,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:5"
									},
									"returnParameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "3908:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 742,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:5"
									},
									"scope": 841,
									"src": "3850:96:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 764,
										"nodeType": "Block",
										"src": "4466:29:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 760,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 753,
														"src": "4483:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 761,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 755,
														"src": "4487:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 759,
												"id": 763,
												"nodeType": "Return",
												"src": "4476:12:5"
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 765,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "4412:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 752,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "4423:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 754,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:5"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "4457:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 757,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:5"
									},
									"scope": 841,
									"src": "4399:96:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 789,
										"nodeType": "Block",
										"src": "5084:106:5",
										"statements": [
											{
												"id": 788,
												"nodeType": "UncheckedBlock",
												"src": "5094:90:5",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 780,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 778,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 770,
																		"src": "5126:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 779,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 768,
																		"src": "5131:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5126:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 781,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 772,
																	"src": "5134:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 777,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5118:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 782,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5118:29:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 783,
														"nodeType": "ExpressionStatement",
														"src": "5118:29:5"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 786,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 784,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 768,
																"src": "5168:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 785,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 770,
																"src": "5172:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5168:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 776,
														"id": 787,
														"nodeType": "Return",
														"src": "5161:12:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 766,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:5",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 790,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4989:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 790,
												"src": "4981:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 767,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4981:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5008:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 790,
												"src": "5000:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 769,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5033:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 790,
												"src": "5019:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 771,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5019:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:80:5"
									},
									"returnParameters": {
										"id": 776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 775,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 790,
												"src": "5075:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 774,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5074:9:5"
									},
									"scope": 841,
									"src": "4959:231:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 814,
										"nodeType": "Block",
										"src": "5799:105:5",
										"statements": [
											{
												"id": 813,
												"nodeType": "UncheckedBlock",
												"src": "5809:89:5",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 805,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 803,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 795,
																		"src": "5841:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 804,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5845:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5841:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 806,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 797,
																	"src": "5848:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 802,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5833:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 807,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5833:28:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 808,
														"nodeType": "ExpressionStatement",
														"src": "5833:28:5"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 811,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 809,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 793,
																"src": "5882:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 810,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 795,
																"src": "5886:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5882:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 801,
														"id": 812,
														"nodeType": "Return",
														"src": "5875:12:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 791,
										"nodeType": "StructuredDocumentation",
										"src": "5196:473:5",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 815,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5683:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5704:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "5696:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 792,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5723:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "5715:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 794,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5748:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "5734:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 796,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5734:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5686:80:5"
									},
									"returnParameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 800,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "5790:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 799,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5789:9:5"
									},
									"scope": 841,
									"src": "5674:230:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 839,
										"nodeType": "Block",
										"src": "6675:105:5",
										"statements": [
											{
												"id": 838,
												"nodeType": "UncheckedBlock",
												"src": "6685:89:5",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 830,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 828,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 820,
																		"src": "6717:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 829,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6721:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6717:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 831,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 822,
																	"src": "6724:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 827,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6709:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 832,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6709:28:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 833,
														"nodeType": "ExpressionStatement",
														"src": "6709:28:5"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 836,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 834,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 818,
																"src": "6758:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 835,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 820,
																"src": "6762:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6758:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 826,
														"id": 837,
														"nodeType": "Return",
														"src": "6751:12:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 816,
										"nodeType": "StructuredDocumentation",
										"src": "5910:635:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 840,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6559:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6580:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 840,
												"src": "6572:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6599:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 840,
												"src": "6591:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 819,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6591:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6624:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 840,
												"src": "6610:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 821,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6610:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6562:80:5"
									},
									"returnParameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 840,
												"src": "6666:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 824,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:9:5"
									},
									"scope": 841,
									"src": "6550:230:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 842,
							"src": "482:6300:5",
							"usedErrors": []
						}
					],
					"src": "107:6676:5"
				},
				"id": 5
			},
			"Staking Contract/StakingNFT.sol": {
				"ast": {
					"absolutePath": "Staking Contract/StakingNFT.sol",
					"exportedSymbols": {
						"Address": [
							517
						],
						"IERC165": [
							529
						],
						"IERC721": [
							169
						],
						"IERC721Receiver": [
							187
						],
						"NFTStaking": [
							1164
						],
						"ReentrancyGuard": [
							53
						],
						"SafeMath": [
							841
						]
					},
					"id": 1165,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 843,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"id": 844,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1165,
							"sourceUnit": 170,
							"src": "57:58:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"id": 845,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1165,
							"sourceUnit": 188,
							"src": "116:66:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 846,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1165,
							"sourceUnit": 842,
							"src": "183:57:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "@openzeppelin/contracts/utils/Address.sol",
							"id": 847,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1165,
							"sourceUnit": 518,
							"src": "241:51:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 848,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1165,
							"sourceUnit": 54,
							"src": "293:62:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 849,
										"name": "IERC721Receiver",
										"nameLocations": [
											"380:15:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 187,
										"src": "380:15:6"
									},
									"id": 850,
									"nodeType": "InheritanceSpecifier",
									"src": "380:15:6"
								},
								{
									"baseName": {
										"id": 851,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"397:15:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 53,
										"src": "397:15:6"
									},
									"id": 852,
									"nodeType": "InheritanceSpecifier",
									"src": "397:15:6"
								}
							],
							"canonicalName": "NFTStaking",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1164,
							"linearizedBaseContracts": [
								1164,
								53,
								187
							],
							"name": "NFTStaking",
							"nameLocation": "366:10:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 855,
									"libraryName": {
										"id": 853,
										"name": "SafeMath",
										"nameLocations": [
											"425:8:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 841,
										"src": "425:8:6"
									},
									"nodeType": "UsingForDirective",
									"src": "419:27:6",
									"typeName": {
										"id": 854,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "438:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"global": false,
									"id": 858,
									"libraryName": {
										"id": 856,
										"name": "Address",
										"nameLocations": [
											"457:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 517,
										"src": "457:7:6"
									},
									"nodeType": "UsingForDirective",
									"src": "451:26:6",
									"typeName": {
										"id": 857,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "469:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": true,
									"functionSelector": "02657ad0",
									"id": 861,
									"mutability": "constant",
									"name": "MINIMUM_STAKING_TIME",
									"nameLocation": "507:20:6",
									"nodeType": "VariableDeclaration",
									"scope": 1164,
									"src": "483:54:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 859,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "483:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3330",
										"id": 860,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "530:7:6",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2592000_by_1",
											"typeString": "int_const 2592000"
										},
										"value": "30"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "5997bb37",
									"id": 864,
									"mutability": "constant",
									"name": "REWARD_RATE",
									"nameLocation": "567:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 1164,
									"src": "543:40:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 862,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "543:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 863,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "581:2:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "10"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "2e0f2625",
									"id": 867,
									"mutability": "constant",
									"name": "DECIMALS",
									"nameLocation": "620:8:6",
									"nodeType": "VariableDeclaration",
									"scope": 1164,
									"src": "596:38:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 865,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "596:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313030",
										"id": 866,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "631:3:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100_by_1",
											"typeString": "int_const 100"
										},
										"value": "100"
									},
									"visibility": "public"
								},
								{
									"canonicalName": "NFTStaking.Stake",
									"id": 876,
									"members": [
										{
											"constant": false,
											"id": 869,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "672:7:6",
											"nodeType": "VariableDeclaration",
											"scope": 876,
											"src": "664:15:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 868,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "664:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 871,
											"mutability": "mutable",
											"name": "stakedTime",
											"nameLocation": "697:10:6",
											"nodeType": "VariableDeclaration",
											"scope": 876,
											"src": "689:18:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 870,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "689:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 873,
											"mutability": "mutable",
											"name": "lastClaimedTime",
											"nameLocation": "725:15:6",
											"nodeType": "VariableDeclaration",
											"scope": 876,
											"src": "717:23:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 872,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "717:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 875,
											"mutability": "mutable",
											"name": "active",
											"nameLocation": "755:6:6",
											"nodeType": "VariableDeclaration",
											"scope": 876,
											"src": "750:11:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 874,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "750:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Stake",
									"nameLocation": "648:5:6",
									"nodeType": "StructDefinition",
									"scope": 1164,
									"src": "641:127:6",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "47ccca02",
									"id": 879,
									"mutability": "mutable",
									"name": "nft",
									"nameLocation": "789:3:6",
									"nodeType": "VariableDeclaration",
									"scope": 1164,
									"src": "774:18:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC721_$169",
										"typeString": "contract IERC721"
									},
									"typeName": {
										"id": 878,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 877,
											"name": "IERC721",
											"nameLocations": [
												"774:7:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 169,
											"src": "774:7:6"
										},
										"referencedDeclaration": 169,
										"src": "774:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC721_$169",
											"typeString": "contract IERC721"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "16934fc4",
									"id": 884,
									"mutability": "mutable",
									"name": "stakes",
									"nameLocation": "831:6:6",
									"nodeType": "VariableDeclaration",
									"scope": 1164,
									"src": "798:39:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$876_storage_$",
										"typeString": "mapping(address => struct NFTStaking.Stake)"
									},
									"typeName": {
										"id": 883,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 880,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "806:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "798:25:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$876_storage_$",
											"typeString": "mapping(address => struct NFTStaking.Stake)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 882,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 881,
												"name": "Stake",
												"nameLocations": [
													"817:5:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 876,
												"src": "817:5:6"
											},
											"referencedDeclaration": 876,
											"src": "817:5:6",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Stake_$876_storage_ptr",
												"typeString": "struct NFTStaking.Stake"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "1449c6dd7851abc30abf37f57715f492010519147cc2652fbc38202c18a6ee90",
									"id": 892,
									"name": "Staked",
									"nameLocation": "850:6:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 886,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "873:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "857:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 885,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "857:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 888,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "896:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "880:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 887,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "880:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 890,
												"indexed": false,
												"mutability": "mutable",
												"name": "stakedTime",
												"nameLocation": "913:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "905:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 889,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "905:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "856:68:6"
									},
									"src": "844:81:6"
								},
								{
									"anonymous": false,
									"eventSelector": "7fc4727e062e336010f2c282598ef5f14facb3de68cf8195c2f23e1454b2b74e",
									"id": 900,
									"name": "Unstaked",
									"nameLocation": "936:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "961:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "945:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 893,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "945:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 896,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "984:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "968:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 895,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "968:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 898,
												"indexed": false,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "1001:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "993:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 897,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "993:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "944:64:6"
									},
									"src": "930:79:6"
								},
								{
									"anonymous": false,
									"eventSelector": "f01da32686223933d8a18a391060918c7f11a3648639edd87ae013e2e2731743",
									"id": 908,
									"name": "RewardClaimed",
									"nameLocation": "1020:13:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 902,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1050:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "1034:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 901,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1034:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 904,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1073:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "1057:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 903,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1057:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 906,
												"indexed": false,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "1090:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "1082:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 905,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1033:64:6"
									},
									"src": "1014:84:6"
								},
								{
									"body": {
										"id": 919,
										"nodeType": "Block",
										"src": "1137:43:6",
										"statements": [
											{
												"expression": {
													"id": 917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 913,
														"name": "nft",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 879,
														"src": "1147:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$169",
															"typeString": "contract IERC721"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 915,
																"name": "_nftAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 910,
																"src": "1161:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 914,
															"name": "IERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "1153:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC721_$169_$",
																"typeString": "type(contract IERC721)"
															}
														},
														"id": 916,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1153:20:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$169",
															"typeString": "contract IERC721"
														}
													},
													"src": "1147:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC721_$169",
														"typeString": "contract IERC721"
													}
												},
												"id": 918,
												"nodeType": "ExpressionStatement",
												"src": "1147:26:6"
											}
										]
									},
									"id": 920,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "_nftAddress",
												"nameLocation": "1124:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 920,
												"src": "1116:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 909,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1116:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1115:21:6"
									},
									"returnParameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1137:0:6"
									},
									"scope": 1164,
									"src": "1104:76:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 995,
										"nodeType": "Block",
										"src": "1241:482:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 934,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 930,
																		"name": "_tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 922,
																		"src": "1271:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 928,
																		"name": "nft",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 879,
																		"src": "1259:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721_$169",
																			"typeString": "contract IERC721"
																		}
																	},
																	"id": 929,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1263:7:6",
																	"memberName": "ownerOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 102,
																	"src": "1259:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view external returns (address)"
																	}
																},
																"id": 931,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1259:21:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 932,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1284:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 933,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1288:6:6",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1284:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1259:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e46545374616b696e673a206e6f74206f776e6572206f6620746f6b656e",
															"id": 935,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1296:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f5e038f4f16f4dc36fdb6877e7275cbf792a1fe12953bce11e9f7522676be8e2",
																"typeString": "literal_string \"NFTStaking: not owner of token\""
															},
															"value": "NFTStaking: not owner of token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f5e038f4f16f4dc36fdb6877e7275cbf792a1fe12953bce11e9f7522676be8e2",
																"typeString": "literal_string \"NFTStaking: not owner of token\""
															}
														],
														"id": 927,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1251:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 936,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1251:78:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 937,
												"nodeType": "ExpressionStatement",
												"src": "1251:78:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 944,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1347:26:6",
															"subExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 939,
																		"name": "stakes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 884,
																		"src": "1348:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$876_storage_$",
																			"typeString": "mapping(address => struct NFTStaking.Stake storage ref)"
																		}
																	},
																	"id": 942,
																	"indexExpression": {
																		"expression": {
																			"id": 940,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1355:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 941,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1359:6:6",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1355:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1348:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$876_storage",
																		"typeString": "struct NFTStaking.Stake storage ref"
																	}
																},
																"id": 943,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1367:6:6",
																"memberName": "active",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 875,
																"src": "1348:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e46545374616b696e673a20616c7265616479207374616b6564",
															"id": 945,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1375:28:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cbaaa21b7b3072888a2a4c2de3f36c77c8cd20938ab707224ca7407a4001377b",
																"typeString": "literal_string \"NFTStaking: already staked\""
															},
															"value": "NFTStaking: already staked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cbaaa21b7b3072888a2a4c2de3f36c77c8cd20938ab707224ca7407a4001377b",
																"typeString": "literal_string \"NFTStaking: already staked\""
															}
														],
														"id": 938,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1339:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1339:65:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 947,
												"nodeType": "ExpressionStatement",
												"src": "1339:65:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 957,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 951,
																		"name": "_tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 922,
																		"src": "1438:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 949,
																		"name": "nft",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 879,
																		"src": "1422:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721_$169",
																			"typeString": "contract IERC721"
																		}
																	},
																	"id": 950,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1426:11:6",
																	"memberName": "getApproved",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 158,
																	"src": "1422:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view external returns (address)"
																	}
																},
																"id": 952,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:25:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 955,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "1459:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_NFTStaking_$1164",
																			"typeString": "contract NFTStaking"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_NFTStaking_$1164",
																			"typeString": "contract NFTStaking"
																		}
																	],
																	"id": 954,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1451:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 953,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1451:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 956,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1451:13:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:42:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e46545374616b696e673a206e6f7420617070726f766564",
															"id": 958,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1466:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f1a367140edd5e86c987d3809db2b9eeb2fcdfa2ec04d1a7436f0d79aa2b6aa6",
																"typeString": "literal_string \"NFTStaking: not approved\""
															},
															"value": "NFTStaking: not approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f1a367140edd5e86c987d3809db2b9eeb2fcdfa2ec04d1a7436f0d79aa2b6aa6",
																"typeString": "literal_string \"NFTStaking: not approved\""
															}
														],
														"id": 948,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:79:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 960,
												"nodeType": "ExpressionStatement",
												"src": "1414:79:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 964,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1533:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 965,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1537:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1533:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 968,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1553:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NFTStaking_$1164",
																		"typeString": "contract NFTStaking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NFTStaking_$1164",
																		"typeString": "contract NFTStaking"
																	}
																],
																"id": 967,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1545:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 966,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1545:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 969,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1545:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 970,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 922,
															"src": "1560:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 961,
															"name": "nft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 879,
															"src": "1512:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$169",
																"typeString": "contract IERC721"
															}
														},
														"id": 963,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1516:16:6",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 124,
														"src": "1512:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1512:57:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 972,
												"nodeType": "ExpressionStatement",
												"src": "1512:57:6"
											},
											{
												"expression": {
													"id": 985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 973,
															"name": "stakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 884,
															"src": "1579:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$876_storage_$",
																"typeString": "mapping(address => struct NFTStaking.Stake storage ref)"
															}
														},
														"id": 976,
														"indexExpression": {
															"expression": {
																"id": 974,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1586:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 975,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1590:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1586:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1579:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$876_storage",
															"typeString": "struct NFTStaking.Stake storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 978,
																"name": "_tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 922,
																"src": "1606:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 979,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "1616:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 980,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1622:9:6",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "1616:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 981,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "1633:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 982,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1639:9:6",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "1633:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "74727565",
																"id": 983,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1650:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"id": 977,
															"name": "Stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 876,
															"src": "1600:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Stake_$876_storage_ptr_$",
																"typeString": "type(struct NFTStaking.Stake storage pointer)"
															}
														},
														"id": 984,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1600:55:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$876_memory_ptr",
															"typeString": "struct NFTStaking.Stake memory"
														}
													},
													"src": "1579:76:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$876_storage",
														"typeString": "struct NFTStaking.Stake storage ref"
													}
												},
												"id": 986,
												"nodeType": "ExpressionStatement",
												"src": "1579:76:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 988,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1678:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 989,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1682:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1678:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 990,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 922,
															"src": "1690:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 991,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "1700:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 992,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1706:9:6",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "1700:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 987,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 892,
														"src": "1671:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 993,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1671:45:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 994,
												"nodeType": "EmitStatement",
												"src": "1666:50:6"
											}
										]
									},
									"functionSelector": "a694fc3a",
									"id": 996,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 925,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 924,
												"name": "nonReentrant",
												"nameLocations": [
													"1228:12:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 29,
												"src": "1228:12:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1228:12:6"
										}
									],
									"name": "stake",
									"nameLocation": "1195:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "1209:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 996,
												"src": "1201:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 921,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1201:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1200:18:6"
									},
									"returnParameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1241:0:6"
									},
									"scope": 1164,
									"src": "1186:537:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1062,
										"nodeType": "Block",
										"src": "1770:462:6",
										"statements": [
											{
												"assignments": [
													1003
												],
												"declarations": [
													{
														"constant": false,
														"id": 1003,
														"mutability": "mutable",
														"name": "stake",
														"nameLocation": "1794:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 1062,
														"src": "1780:19:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$876_storage_ptr",
															"typeString": "struct NFTStaking.Stake"
														},
														"typeName": {
															"id": 1002,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1001,
																"name": "Stake",
																"nameLocations": [
																	"1780:5:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 876,
																"src": "1780:5:6"
															},
															"referencedDeclaration": 876,
															"src": "1780:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$876_storage_ptr",
																"typeString": "struct NFTStaking.Stake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1008,
												"initialValue": {
													"baseExpression": {
														"id": 1004,
														"name": "stakes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 884,
														"src": "1802:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$876_storage_$",
															"typeString": "mapping(address => struct NFTStaking.Stake storage ref)"
														}
													},
													"id": 1007,
													"indexExpression": {
														"expression": {
															"id": 1005,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1809:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1006,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1813:6:6",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1809:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1802:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$876_storage",
														"typeString": "struct NFTStaking.Stake storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1780:40:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1010,
																"name": "stake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1003,
																"src": "1838:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$876_storage_ptr",
																	"typeString": "struct NFTStaking.Stake storage pointer"
																}
															},
															"id": 1011,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1844:6:6",
															"memberName": "active",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 875,
															"src": "1838:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e46545374616b696e673a206e6f74207374616b6564",
															"id": 1012,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1852:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_57ace88f6b29b408b5264955a1a63df689cdbd5dead36262afdf785bc4acc8d9",
																"typeString": "literal_string \"NFTStaking: not staked\""
															},
															"value": "NFTStaking: not staked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_57ace88f6b29b408b5264955a1a63df689cdbd5dead36262afdf785bc4acc8d9",
																"typeString": "literal_string \"NFTStaking: not staked\""
															}
														],
														"id": 1009,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1830:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1013,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1830:47:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1014,
												"nodeType": "ExpressionStatement",
												"src": "1830:47:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1023,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1016,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "1895:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1017,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1901:9:6",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "1895:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 1021,
																		"name": "MINIMUM_STAKING_TIME",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 861,
																		"src": "1935:20:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 1018,
																			"name": "stake",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1003,
																			"src": "1914:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$876_storage_ptr",
																				"typeString": "struct NFTStaking.Stake storage pointer"
																			}
																		},
																		"id": 1019,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1920:10:6",
																		"memberName": "stakedTime",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 871,
																		"src": "1914:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1020,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1931:3:6",
																	"memberName": "add",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 705,
																	"src": "1914:20:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1022,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1914:42:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1895:61:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e46545374616b696e673a207374616b696e672074696d65206e6f742072656163686564",
															"id": 1024,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1958:38:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c20202affc11a053167ee51e7a4f251d2310022a958c58aed2d1a010bbd93abf",
																"typeString": "literal_string \"NFTStaking: staking time not reached\""
															},
															"value": "NFTStaking: staking time not reached"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c20202affc11a053167ee51e7a4f251d2310022a958c58aed2d1a010bbd93abf",
																"typeString": "literal_string \"NFTStaking: staking time not reached\""
															}
														],
														"id": 1015,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1887:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1025,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1887:110:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1026,
												"nodeType": "ExpressionStatement",
												"src": "1887:110:6"
											},
											{
												"assignments": [
													1028
												],
												"declarations": [
													{
														"constant": false,
														"id": 1028,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "2016:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1062,
														"src": "2008:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1027,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2008:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1034,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1030,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2041:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1031,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2045:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2041:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1032,
															"name": "stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1003,
															"src": "2053:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$876_storage_ptr",
																"typeString": "struct NFTStaking.Stake storage pointer"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_struct$_Stake_$876_storage_ptr",
																"typeString": "struct NFTStaking.Stake storage pointer"
															}
														],
														"id": 1029,
														"name": "calculateReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1144,
														"src": "2025:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_struct$_Stake_$876_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (address,struct NFTStaking.Stake storage pointer) view returns (uint256)"
														}
													},
													"id": 1033,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2025:34:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2008:51:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1040,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2098:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NFTStaking_$1164",
																		"typeString": "contract NFTStaking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NFTStaking_$1164",
																		"typeString": "contract NFTStaking"
																	}
																],
																"id": 1039,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2090:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1038,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2090:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1041,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2090:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1042,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2105:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1043,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2109:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2105:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1044,
																"name": "stake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1003,
																"src": "2117:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$876_storage_ptr",
																	"typeString": "struct NFTStaking.Stake storage pointer"
																}
															},
															"id": 1045,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2123:7:6",
															"memberName": "tokenId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 869,
															"src": "2117:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1035,
															"name": "nft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 879,
															"src": "2069:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$169",
																"typeString": "contract IERC721"
															}
														},
														"id": 1037,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2073:16:6",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 124,
														"src": "2069:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 1046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2069:62:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1047,
												"nodeType": "ExpressionStatement",
												"src": "2069:62:6"
											},
											{
												"expression": {
													"id": 1052,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "2141:25:6",
													"subExpression": {
														"baseExpression": {
															"id": 1048,
															"name": "stakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 884,
															"src": "2148:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$876_storage_$",
																"typeString": "mapping(address => struct NFTStaking.Stake storage ref)"
															}
														},
														"id": 1051,
														"indexExpression": {
															"expression": {
																"id": 1049,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2155:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1050,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2159:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2155:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2148:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$876_storage",
															"typeString": "struct NFTStaking.Stake storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1053,
												"nodeType": "ExpressionStatement",
												"src": "2141:25:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1055,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2191:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1056,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2195:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2191:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1057,
																"name": "stake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1003,
																"src": "2203:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$876_storage_ptr",
																	"typeString": "struct NFTStaking.Stake storage pointer"
																}
															},
															"id": 1058,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2209:7:6",
															"memberName": "tokenId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 869,
															"src": "2203:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1059,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1028,
															"src": "2218:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1054,
														"name": "Unstaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 900,
														"src": "2182:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1060,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2182:43:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1061,
												"nodeType": "EmitStatement",
												"src": "2177:48:6"
											}
										]
									},
									"functionSelector": "2def6620",
									"id": 1063,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 999,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 998,
												"name": "nonReentrant",
												"nameLocations": [
													"1757:12:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 29,
												"src": "1757:12:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1757:12:6"
										}
									],
									"name": "unstake",
									"nameLocation": "1738:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1745:2:6"
									},
									"returnParameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1770:0:6"
									},
									"scope": 1164,
									"src": "1729:503:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1105,
										"nodeType": "Block",
										"src": "2283:289:6",
										"statements": [
											{
												"assignments": [
													1070
												],
												"declarations": [
													{
														"constant": false,
														"id": 1070,
														"mutability": "mutable",
														"name": "stake",
														"nameLocation": "2307:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 1105,
														"src": "2293:19:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$876_storage_ptr",
															"typeString": "struct NFTStaking.Stake"
														},
														"typeName": {
															"id": 1069,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1068,
																"name": "Stake",
																"nameLocations": [
																	"2293:5:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 876,
																"src": "2293:5:6"
															},
															"referencedDeclaration": 876,
															"src": "2293:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$876_storage_ptr",
																"typeString": "struct NFTStaking.Stake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1075,
												"initialValue": {
													"baseExpression": {
														"id": 1071,
														"name": "stakes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 884,
														"src": "2315:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$876_storage_$",
															"typeString": "mapping(address => struct NFTStaking.Stake storage ref)"
														}
													},
													"id": 1074,
													"indexExpression": {
														"expression": {
															"id": 1072,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2322:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1073,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2326:6:6",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2322:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2315:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$876_storage",
														"typeString": "struct NFTStaking.Stake storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2293:40:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1077,
																"name": "stake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1070,
																"src": "2351:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$876_storage_ptr",
																	"typeString": "struct NFTStaking.Stake storage pointer"
																}
															},
															"id": 1078,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2357:6:6",
															"memberName": "active",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 875,
															"src": "2351:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e46545374616b696e673a206e6f74207374616b6564",
															"id": 1079,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2365:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_57ace88f6b29b408b5264955a1a63df689cdbd5dead36262afdf785bc4acc8d9",
																"typeString": "literal_string \"NFTStaking: not staked\""
															},
															"value": "NFTStaking: not staked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_57ace88f6b29b408b5264955a1a63df689cdbd5dead36262afdf785bc4acc8d9",
																"typeString": "literal_string \"NFTStaking: not staked\""
															}
														],
														"id": 1076,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2343:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2343:47:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1081,
												"nodeType": "ExpressionStatement",
												"src": "2343:47:6"
											},
											{
												"assignments": [
													1083
												],
												"declarations": [
													{
														"constant": false,
														"id": 1083,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "2409:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1105,
														"src": "2401:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1082,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2401:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1089,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1085,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2434:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1086,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2438:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2434:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1087,
															"name": "stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1070,
															"src": "2446:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$876_storage_ptr",
																"typeString": "struct NFTStaking.Stake storage pointer"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_struct$_Stake_$876_storage_ptr",
																"typeString": "struct NFTStaking.Stake storage pointer"
															}
														],
														"id": 1084,
														"name": "calculateReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1144,
														"src": "2418:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_struct$_Stake_$876_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (address,struct NFTStaking.Stake storage pointer) view returns (uint256)"
														}
													},
													"id": 1088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2418:34:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2401:51:6"
											},
											{
												"expression": {
													"id": 1095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1090,
															"name": "stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1070,
															"src": "2462:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$876_storage_ptr",
																"typeString": "struct NFTStaking.Stake storage pointer"
															}
														},
														"id": 1092,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2468:15:6",
														"memberName": "lastClaimedTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 873,
														"src": "2462:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1093,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2486:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1094,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2492:9:6",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2486:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2462:39:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1096,
												"nodeType": "ExpressionStatement",
												"src": "2462:39:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1098,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2531:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1099,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2535:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2531:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1100,
																"name": "stake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1070,
																"src": "2543:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$876_storage_ptr",
																	"typeString": "struct NFTStaking.Stake storage pointer"
																}
															},
															"id": 1101,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2549:7:6",
															"memberName": "tokenId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 869,
															"src": "2543:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1102,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1083,
															"src": "2558:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1097,
														"name": "RewardClaimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 908,
														"src": "2517:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2517:48:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1104,
												"nodeType": "EmitStatement",
												"src": "2512:53:6"
											}
										]
									},
									"functionSelector": "b88a802f",
									"id": 1106,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1066,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1065,
												"name": "nonReentrant",
												"nameLocations": [
													"2270:12:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 29,
												"src": "2270:12:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2270:12:6"
										}
									],
									"name": "claimReward",
									"nameLocation": "2247:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1064,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2258:2:6"
									},
									"returnParameters": {
										"id": 1067,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2283:0:6"
									},
									"scope": 1164,
									"src": "2238:334:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1143,
										"nodeType": "Block",
										"src": "2673:213:6",
										"statements": [
											{
												"assignments": [
													1117
												],
												"declarations": [
													{
														"constant": false,
														"id": 1117,
														"mutability": "mutable",
														"name": "stakedTime",
														"nameLocation": "2691:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1143,
														"src": "2683:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1116,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2683:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1124,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1121,
																"name": "_stake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1111,
																"src": "2724:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$876_storage_ptr",
																	"typeString": "struct NFTStaking.Stake storage pointer"
																}
															},
															"id": 1122,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2731:15:6",
															"memberName": "lastClaimedTime",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 873,
															"src": "2724:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 1118,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2704:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2710:9:6",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2704:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1120,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2720:3:6",
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 720,
														"src": "2704:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2704:43:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2683:64:6"
											},
											{
												"assignments": [
													1126
												],
												"declarations": [
													{
														"constant": false,
														"id": 1126,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "2765:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1143,
														"src": "2757:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1125,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2757:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1140,
												"initialValue": {
													"arguments": [
														{
															"id": 1138,
															"name": "DECIMALS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 867,
															"src": "2846:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1135,
																	"name": "MINIMUM_STAKING_TIME",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 861,
																	"src": "2820:20:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1132,
																			"name": "DECIMALS",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 867,
																			"src": "2806:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 1129,
																					"name": "REWARD_RATE",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 864,
																					"src": "2789:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 1127,
																					"name": "stakedTime",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1117,
																					"src": "2774:10:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1128,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2785:3:6",
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 735,
																				"src": "2774:14:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1130,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2774:27:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1131,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2802:3:6",
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 735,
																		"src": "2774:31:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1133,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2774:41:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1134,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2816:3:6",
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 750,
																"src": "2774:45:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1136,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2774:67:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1137,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2842:3:6",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 750,
														"src": "2774:71:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2774:81:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2757:98:6"
											},
											{
												"expression": {
													"id": 1141,
													"name": "reward",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1126,
													"src": "2873:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1115,
												"id": 1142,
												"nodeType": "Return",
												"src": "2866:13:6"
											}
										]
									},
									"id": 1144,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateReward",
									"nameLocation": "2587:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1108,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "2611:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "2603:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1107,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2603:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "_stake",
												"nameLocation": "2633:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "2619:20:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Stake_$876_storage_ptr",
													"typeString": "struct NFTStaking.Stake"
												},
												"typeName": {
													"id": 1110,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1109,
														"name": "Stake",
														"nameLocations": [
															"2619:5:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 876,
														"src": "2619:5:6"
													},
													"referencedDeclaration": 876,
													"src": "2619:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$876_storage_ptr",
														"typeString": "struct NFTStaking.Stake"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2602:38:6"
									},
									"returnParameters": {
										"id": 1115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "2664:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2664:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2663:9:6"
									},
									"scope": 1164,
									"src": "2578:308:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										186
									],
									"body": {
										"id": 1162,
										"nodeType": "Block",
										"src": "3039:54:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 1158,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "3056:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_NFTStaking_$1164",
																"typeString": "contract NFTStaking"
															}
														},
														"id": 1159,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3061:16:6",
														"memberName": "onERC721Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1163,
														"src": "3056:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_pure$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256,bytes memory) pure external returns (bytes4)"
														}
													},
													"id": 1160,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "3078:8:6",
													"memberName": "selector",
													"nodeType": "MemberAccess",
													"src": "3056:30:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 1157,
												"id": 1161,
												"nodeType": "Return",
												"src": "3049:37:6"
											}
										]
									},
									"functionSelector": "150b7a02",
									"id": 1163,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "2901:16:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1154,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3013:8:6"
									},
									"parameters": {
										"id": 1153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1146,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "2927:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2927:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1148,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "2944:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2944:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "2961:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2961:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1152,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "2978:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1151,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2978:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2917:81:6"
									},
									"returnParameters": {
										"id": 1157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1156,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "3031:6:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1155,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "3031:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3030:8:6"
									},
									"scope": 1164,
									"src": "2892:201:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1165,
							"src": "357:2738:6",
							"usedErrors": []
						}
					],
					"src": "0:3096:6"
				},
				"id": 6
			}
		}
	}
}